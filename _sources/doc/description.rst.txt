###########
Description
###########

SCRAM is a command-line tool
that performs probabilistic risk assessment ([PRA]_).

.. note:: The documentation may be ahead of the software development
          and may describe features that will be introduced in future versions.


Command-line Call of SCRAM
==========================

The user supplies a configuration file, input files,
and analysis configurations via command-line.
Various types of analyses can be performed on the input files,
for example, fault tree, event tree, uncertainty, etc.
The user must specify the kinds of analysis
and appropriate parameters for the analyses.
For example, if FTA is requested (the default option),
the maximum order of products can be specified for faster analysis.
The default values of the parameters can be used for initial runs
before adjusting them for accuracy and performance.

- Run ``scram --help`` to see all the flags and options for analysis.

- Analyses may use a lot of time and computing resources
  depending on the complexity of the model.
  You can adjust SCRAM flags and parameters to reduce these demands.

- All analyses can be run with logging.
  The logging system outputs useful information
  for figuring out limiting bottlenecks.
  This information can be used for debugging and testing purposes.


Fault Tree Analysis
===================

#. Validate XML input files against the RELAX NG schema.
#. Validate the input analysis specifications and instances.
#. Instantiate the analysis.
   Create the fault trees for the analysis.
#. Find minimal cut sets or prime implicants. *Probability input is optional*

   - Cut-off probability for products. *Unused*
   - Maximum order for products for faster calculations.

#. Find the total probability of the top event
   and importance values for basic events. *Only if probability input is provided*

   - Cut-off probability for products. *Unused*
   - The rare event or MCUB approximation. *Optional*
   - Mission time that is used to calculate probabilities.

#. Report the analysis results.


Analysis with Common Cause Failure Groups
=========================================

#. Get the description of basic events' dependent failures with CCF models.
#. Incorporate CCF information into fault trees by creating new basic events.
#. Perform requested analyses with the new basic events.
#. Report the analysis results indicating the CCF events.


Uncertainty Analysis
====================

#. Get configurations for the number of trials and mission time.
#. Accept products generated by fault tree analysis.
#. Sample basic events and calculate the total probability.
#. Perform statistical analysis of the sampled values.
#. Report the statistical results,
   such as mean, standard deviation, and range.


Event Tree Analysis *Not implemented*
=====================================

#. Read input files. Verification of the input.
#. Create the event tree for analysis.
#. Perform calculations.
#. Report the results.


Future Additions
================

#. Event tree analysis
#. Dynamic fault tree analysis
#. Reliability block diagram
