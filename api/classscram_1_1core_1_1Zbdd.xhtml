<!-- HTML header for doxygen 1.8.11-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="robots" content="noindex, nofollow"/>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>scram::core::Zbdd Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="scram_blue.png"/></td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>scram</b></li><li class="navelem"><b>core</b></li><li class="navelem"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml">Zbdd</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classscram_1_1core_1_1Zbdd-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">scram::core::Zbdd Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Zero-Suppressed Binary Decision Diagrams for set manipulations.  
 <a href="classscram_1_1core_1_1Zbdd.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="zbdd_8h_source.xhtml">zbdd.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for scram::core::Zbdd:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Zbdd__inherit__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a73cd06a4022ce5cd60f9f667fec8d51f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a73cd06a4022ce5cd60f9f667fec8d51f"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> = <a class="el" href="bdd_8h.xhtml#a3c1414c7067129c4689c40c7a2dab6de">IntrusivePtr</a>&lt; <a class="el" href="classscram_1_1core_1_1Vertex.xhtml">Vertex</a>&lt; <a class="el" href="classscram_1_1core_1_1SetNode.xhtml">SetNode</a> &gt;&gt;</td></tr>
<tr class="memdesc:a73cd06a4022ce5cd60f9f667fec8d51f"><td class="mdescLeft">&#160;</td><td class="mdescRight">ZBDD vertex base. <br /></td></tr>
<tr class="separator:a73cd06a4022ce5cd60f9f667fec8d51f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a335b8ada37f49919670e93dfc8ef307c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a335b8ada37f49919670e93dfc8ef307c"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a335b8ada37f49919670e93dfc8ef307c">TerminalPtr</a> = <a class="el" href="bdd_8h.xhtml#a3c1414c7067129c4689c40c7a2dab6de">IntrusivePtr</a>&lt; <a class="el" href="classscram_1_1core_1_1Terminal.xhtml">Terminal</a>&lt; <a class="el" href="classscram_1_1core_1_1SetNode.xhtml">SetNode</a> &gt;&gt;</td></tr>
<tr class="memdesc:a335b8ada37f49919670e93dfc8ef307c"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classscram_1_1core_1_1Terminal.xhtml" title="Representation of terminal vertices in BDD graphs. ">Terminal</a> vertex. <br /></td></tr>
<tr class="separator:a335b8ada37f49919670e93dfc8ef307c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a7dd59951e7bc8fd08c75feb44bc496e2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a7dd59951e7bc8fd08c75feb44bc496e2">Zbdd</a> (<a class="el" href="classscram_1_1core_1_1Bdd.xhtml">Bdd</a> *bdd, const <a class="el" href="classscram_1_1core_1_1Settings.xhtml">Settings</a> &amp;<a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#ab71281cd644eb442dd2d3ee1c5df56c4">settings</a>) noexcept</td></tr>
<tr class="memdesc:a7dd59951e7bc8fd08c75feb44bc496e2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts Reduced Ordered BDD into Zero-Suppressed BDD.  <a href="#a7dd59951e7bc8fd08c75feb44bc496e2">More...</a><br /></td></tr>
<tr class="separator:a7dd59951e7bc8fd08c75feb44bc496e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33d57c1808da12dc735a6850b2c83282"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a33d57c1808da12dc735a6850b2c83282">Zbdd</a> (const <a class="el" href="classscram_1_1core_1_1BooleanGraph.xhtml">BooleanGraph</a> *fault_tree, const <a class="el" href="classscram_1_1core_1_1Settings.xhtml">Settings</a> &amp;<a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#ab71281cd644eb442dd2d3ee1c5df56c4">settings</a>) noexcept</td></tr>
<tr class="memdesc:a33d57c1808da12dc735a6850b2c83282"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor with the analysis target.  <a href="#a33d57c1808da12dc735a6850b2c83282">More...</a><br /></td></tr>
<tr class="separator:a33d57c1808da12dc735a6850b2c83282"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77945d28bd832d2735969d0b0a451c78"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a77945d28bd832d2735969d0b0a451c78">Analyze</a> () noexcept</td></tr>
<tr class="memdesc:a77945d28bd832d2735969d0b0a451c78"><td class="mdescLeft">&#160;</td><td class="mdescRight">Runs the analysis with the representation of a Boolean graph as ZBDD.  <a href="#a77945d28bd832d2735969d0b0a451c78">More...</a><br /></td></tr>
<tr class="separator:a77945d28bd832d2735969d0b0a451c78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1d2e58b1ae5650093bdc2df72f511ce"><td class="memItemLeft" align="right" valign="top">const std::vector&lt; std::vector&lt; int &gt; &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#ac1d2e58b1ae5650093bdc2df72f511ce">products</a> () const </td></tr>
<tr class="separator:ac1d2e58b1ae5650093bdc2df72f511ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:af92e04ed908364e0177ce444d7b72712"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#af92e04ed908364e0177ce444d7b72712">Zbdd</a> (const <a class="el" href="classscram_1_1core_1_1Settings.xhtml">Settings</a> &amp;<a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#ab71281cd644eb442dd2d3ee1c5df56c4">settings</a>, bool coherent=false, int module_index=0) noexcept</td></tr>
<tr class="memdesc:af92e04ed908364e0177ce444d7b72712"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor to initialize member variables.  <a href="#af92e04ed908364e0177ce444d7b72712">More...</a><br /></td></tr>
<tr class="separator:af92e04ed908364e0177ce444d7b72712"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa599878612e128fa09e17d0520280dbe"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#aa599878612e128fa09e17d0520280dbe">root</a> () const </td></tr>
<tr class="separator:aa599878612e128fa09e17d0520280dbe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2e32b346caadd0e71a8acd0212593f9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#ad2e32b346caadd0e71a8acd0212593f9">root</a> (const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;vertex)</td></tr>
<tr class="memdesc:ad2e32b346caadd0e71a8acd0212593f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets a new root vertex for ZBDD.  <a href="#ad2e32b346caadd0e71a8acd0212593f9">More...</a><br /></td></tr>
<tr class="separator:ad2e32b346caadd0e71a8acd0212593f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab71281cd644eb442dd2d3ee1c5df56c4"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classscram_1_1core_1_1Settings.xhtml">Settings</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#ab71281cd644eb442dd2d3ee1c5df56c4">settings</a> () const </td></tr>
<tr class="separator:ab71281cd644eb442dd2d3ee1c5df56c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed1eaa96df30e6eaa32e9e51427c9743"><td class="memItemLeft" align="right" valign="top">const std::map&lt; int, std::unique_ptr&lt; <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml">Zbdd</a> &gt; &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#aed1eaa96df30e6eaa32e9e51427c9743">modules</a> () const </td></tr>
<tr class="separator:aed1eaa96df30e6eaa32e9e51427c9743"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae819f5439416479971018ac134233091"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae819f5439416479971018ac134233091"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#ae819f5439416479971018ac134233091">Log</a> () noexcept</td></tr>
<tr class="memdesc:ae819f5439416479971018ac134233091"><td class="mdescLeft">&#160;</td><td class="mdescRight">Logs properties of the <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml" title="Zero-Suppressed Binary Decision Diagrams for set manipulations. ">Zbdd</a>. <br /></td></tr>
<tr class="separator:ae819f5439416479971018ac134233091"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42af18229ba2e80201bc0fdac07b7091"><td class="memItemLeft" align="right" valign="top"><a class="el" href="zbdd_8h.xhtml#a8a62276408638914927627187b3ced57">SetNodePtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a42af18229ba2e80201bc0fdac07b7091">FindOrAddVertex</a> (int index, const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;high, const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;low, int order, bool module=false, bool coherent=false) noexcept</td></tr>
<tr class="memdesc:a42af18229ba2e80201bc0fdac07b7091"><td class="mdescLeft">&#160;</td><td class="mdescRight">Finds or adds a unique <a class="el" href="classscram_1_1core_1_1SetNode.xhtml" title="Representation of non-terminal nodes in ZBDD. ">SetNode</a> in the ZBDD.  <a href="#a42af18229ba2e80201bc0fdac07b7091">More...</a><br /></td></tr>
<tr class="separator:a42af18229ba2e80201bc0fdac07b7091"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac90d12f0c653c679d22109124fa6344c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="zbdd_8h.xhtml#a8a62276408638914927627187b3ced57">SetNodePtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#ac90d12f0c653c679d22109124fa6344c">FindOrAddVertex</a> (const <a class="el" href="classscram_1_1core_1_1Gate.xhtml">Gate</a> &amp;gate, const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;high, const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;low) noexcept</td></tr>
<tr class="memdesc:ac90d12f0c653c679d22109124fa6344c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Find or adds a ZBDD <a class="el" href="classscram_1_1core_1_1SetNode.xhtml" title="Representation of non-terminal nodes in ZBDD. ">SetNode</a> vertex using information from gates.  <a href="#ac90d12f0c653c679d22109124fa6344c">More...</a><br /></td></tr>
<tr class="separator:ac90d12f0c653c679d22109124fa6344c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a711aca319bb4d1586bf1ed92eccfaa97"><td class="memTemplParams" colspan="2">template&lt;Operator Type&gt; </td></tr>
<tr class="memitem:a711aca319bb4d1586bf1ed92eccfaa97"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a711aca319bb4d1586bf1ed92eccfaa97">Apply</a> (const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;arg_one, const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;arg_two, int limit_order) noexcept</td></tr>
<tr class="memdesc:a711aca319bb4d1586bf1ed92eccfaa97"><td class="mdescLeft">&#160;</td><td class="mdescRight">Applies Boolean operation to two vertices representing sets.  <a href="#a711aca319bb4d1586bf1ed92eccfaa97">More...</a><br /></td></tr>
<tr class="separator:a711aca319bb4d1586bf1ed92eccfaa97"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f2deb99cf4a08565f6c0177ec263961"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a4f2deb99cf4a08565f6c0177ec263961">Apply</a> (<a class="el" href="boolean__graph_8h.xhtml#ad4c053147ae98b76f12620441f6d3800">Operator</a> type, const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;arg_one, const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;arg_two, int limit_order) noexcept</td></tr>
<tr class="memdesc:a4f2deb99cf4a08565f6c0177ec263961"><td class="mdescLeft">&#160;</td><td class="mdescRight">Applies Boolean operation to two vertices representing sets.  <a href="#a4f2deb99cf4a08565f6c0177ec263961">More...</a><br /></td></tr>
<tr class="separator:a4f2deb99cf4a08565f6c0177ec263961"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6651a03c79671c2cd495a15d7257659e"><td class="memTemplParams" colspan="2">template&lt;Operator Type&gt; </td></tr>
<tr class="memitem:a6651a03c79671c2cd495a15d7257659e"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a6651a03c79671c2cd495a15d7257659e">Apply</a> (const <a class="el" href="zbdd_8h.xhtml#a8a62276408638914927627187b3ced57">SetNodePtr</a> &amp;arg_one, const <a class="el" href="zbdd_8h.xhtml#a8a62276408638914927627187b3ced57">SetNodePtr</a> &amp;arg_two, int limit_order) noexcept</td></tr>
<tr class="memdesc:a6651a03c79671c2cd495a15d7257659e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Applies Boolean operation to ZBDD graph non-terminal vertices.  <a href="#a6651a03c79671c2cd495a15d7257659e">More...</a><br /></td></tr>
<tr class="separator:a6651a03c79671c2cd495a15d7257659e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3ac27090b550d973b20bd971c3de9f9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#ac3ac27090b550d973b20bd971c3de9f9">EliminateComplements</a> (const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;vertex, std::unordered_map&lt; int, <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &gt; *wide_results) noexcept</td></tr>
<tr class="memdesc:ac3ac27090b550d973b20bd971c3de9f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes complements of variables from products.  <a href="#ac3ac27090b550d973b20bd971c3de9f9">More...</a><br /></td></tr>
<tr class="separator:ac3ac27090b550d973b20bd971c3de9f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb83fd37f2aee74ac41e6ccadba82d39"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#aeb83fd37f2aee74ac41e6ccadba82d39">EliminateConstantModules</a> () noexcept</td></tr>
<tr class="memdesc:aeb83fd37f2aee74ac41e6ccadba82d39"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes constant modules from products.  <a href="#aeb83fd37f2aee74ac41e6ccadba82d39">More...</a><br /></td></tr>
<tr class="separator:aeb83fd37f2aee74ac41e6ccadba82d39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3dbb8ef5da2882daf6c39e9724eae459"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a3dbb8ef5da2882daf6c39e9724eae459">Minimize</a> (const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;vertex) noexcept</td></tr>
<tr class="memdesc:a3dbb8ef5da2882daf6c39e9724eae459"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes subsets in ZBDD.  <a href="#a3dbb8ef5da2882daf6c39e9724eae459">More...</a><br /></td></tr>
<tr class="separator:a3dbb8ef5da2882daf6c39e9724eae459"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a516f0d2f35ad213399f83fb9ab102561"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a516f0d2f35ad213399f83fb9ab102561">GatherModules</a> (const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;vertex, int current_order, std::map&lt; int, std::pair&lt; bool, int &gt;&gt; *<a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#aed1eaa96df30e6eaa32e9e51427c9743">modules</a>) noexcept</td></tr>
<tr class="memdesc:a516f0d2f35ad213399f83fb9ab102561"><td class="mdescLeft">&#160;</td><td class="mdescRight">Traverses ZBDD to find modules and adjusted cut-offs.  <a href="#a516f0d2f35ad213399f83fb9ab102561">More...</a><br /></td></tr>
<tr class="separator:a516f0d2f35ad213399f83fb9ab102561"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c1129acd9810b5b9ff4952f587ce490"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7c1129acd9810b5b9ff4952f587ce490"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a7c1129acd9810b5b9ff4952f587ce490">ClearTables</a> () noexcept</td></tr>
<tr class="memdesc:a7c1129acd9810b5b9ff4952f587ce490"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears all memoization tables. <br /></td></tr>
<tr class="separator:a7c1129acd9810b5b9ff4952f587ce490"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9f012da1bb6b0835b56dfd98f5dde64"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af9f012da1bb6b0835b56dfd98f5dde64"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#af9f012da1bb6b0835b56dfd98f5dde64">ReleaseTables</a> () noexcept</td></tr>
<tr class="memdesc:af9f012da1bb6b0835b56dfd98f5dde64"><td class="mdescLeft">&#160;</td><td class="mdescRight">Releases all possible memory from memoization and unique tables. <br /></td></tr>
<tr class="separator:af9f012da1bb6b0835b56dfd98f5dde64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ecbf60e6ac51e5260e8d8139c1b8599"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a4ecbf60e6ac51e5260e8d8139c1b8599">JoinModule</a> (int index, std::unique_ptr&lt; <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml">Zbdd</a> &gt; container) noexcept</td></tr>
<tr class="memdesc:a4ecbf60e6ac51e5260e8d8139c1b8599"><td class="mdescLeft">&#160;</td><td class="mdescRight">Joins a ZBDD representing a module gate.  <a href="#a4ecbf60e6ac51e5260e8d8139c1b8599">More...</a><br /></td></tr>
<tr class="separator:a4ecbf60e6ac51e5260e8d8139c1b8599"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a499a8bc4bc3854e7b2928c08515243cf"><td class="memTemplParams" colspan="2"><a class="anchor" id="a499a8bc4bc3854e7b2928c08515243cf"></a>
template&lt;&gt; </td></tr>
<tr class="memitem:a499a8bc4bc3854e7b2928c08515243cf"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">Zbdd::VertexPtr</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a499a8bc4bc3854e7b2928c08515243cf">Apply</a> (const <a class="el" href="zbdd_8h.xhtml#a8a62276408638914927627187b3ced57">SetNodePtr</a> &amp;arg_one, const <a class="el" href="zbdd_8h.xhtml#a8a62276408638914927627187b3ced57">SetNodePtr</a> &amp;arg_two, int limit_order) noexcept</td></tr>
<tr class="memdesc:a499a8bc4bc3854e7b2928c08515243cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specialization of Apply for AND operator for non-terminal ZBDD vertices. <br /></td></tr>
<tr class="separator:a499a8bc4bc3854e7b2928c08515243cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a363960002737004ea45f67758d9ac17d"><td class="memTemplParams" colspan="2"><a class="anchor" id="a363960002737004ea45f67758d9ac17d"></a>
template&lt;&gt; </td></tr>
<tr class="memitem:a363960002737004ea45f67758d9ac17d"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">Zbdd::VertexPtr</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a363960002737004ea45f67758d9ac17d">Apply</a> (const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;arg_one, const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;arg_two, int limit_order) noexcept</td></tr>
<tr class="memdesc:a363960002737004ea45f67758d9ac17d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specialization of Apply for AND operator for any ZBDD vertices. <br /></td></tr>
<tr class="separator:a363960002737004ea45f67758d9ac17d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a499a8bc4bc3854e7b2928c08515243cf"><td class="memTemplParams" colspan="2"><a class="anchor" id="a499a8bc4bc3854e7b2928c08515243cf"></a>
template&lt;&gt; </td></tr>
<tr class="memitem:a499a8bc4bc3854e7b2928c08515243cf"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">Zbdd::VertexPtr</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a499a8bc4bc3854e7b2928c08515243cf">Apply</a> (const <a class="el" href="zbdd_8h.xhtml#a8a62276408638914927627187b3ced57">SetNodePtr</a> &amp;arg_one, const <a class="el" href="zbdd_8h.xhtml#a8a62276408638914927627187b3ced57">SetNodePtr</a> &amp;arg_two, int limit_order) noexcept</td></tr>
<tr class="memdesc:a499a8bc4bc3854e7b2928c08515243cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specialization of Apply for OR operator for non-terminal ZBDD vertices. <br /></td></tr>
<tr class="separator:a499a8bc4bc3854e7b2928c08515243cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a363960002737004ea45f67758d9ac17d"><td class="memTemplParams" colspan="2"><a class="anchor" id="a363960002737004ea45f67758d9ac17d"></a>
template&lt;&gt; </td></tr>
<tr class="memitem:a363960002737004ea45f67758d9ac17d"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">Zbdd::VertexPtr</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a363960002737004ea45f67758d9ac17d">Apply</a> (const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;arg_one, const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;arg_two, int limit_order) noexcept</td></tr>
<tr class="memdesc:a363960002737004ea45f67758d9ac17d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specialization of Apply for OR operator for any ZBDD vertices. <br /></td></tr>
<tr class="separator:a363960002737004ea45f67758d9ac17d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:a363960002737004ea45f67758d9ac17d"><td class="memTemplParams" colspan="2"><a class="anchor" id="a363960002737004ea45f67758d9ac17d"></a>
template&lt;&gt; </td></tr>
<tr class="memitem:a363960002737004ea45f67758d9ac17d"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">Zbdd::VertexPtr</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a363960002737004ea45f67758d9ac17d">Apply</a> (const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;arg_one, const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;arg_two, int limit_order) noexcept</td></tr>
<tr class="memdesc:a363960002737004ea45f67758d9ac17d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Forward declarations of interdependent Apply operation specializations. <br /></td></tr>
<tr class="separator:a363960002737004ea45f67758d9ac17d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a363960002737004ea45f67758d9ac17d"><td class="memTemplParams" colspan="2"><a class="anchor" id="a363960002737004ea45f67758d9ac17d"></a>
template&lt;&gt; </td></tr>
<tr class="memitem:a363960002737004ea45f67758d9ac17d"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">Zbdd::VertexPtr</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a363960002737004ea45f67758d9ac17d">Apply</a> (const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;arg_one, const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;arg_two, int limit_order) noexcept</td></tr>
<tr class="memdesc:a363960002737004ea45f67758d9ac17d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Forward declarations of interdependent Apply operation specializations. <br /></td></tr>
<tr class="separator:a363960002737004ea45f67758d9ac17d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a66b1888c00815cc350464f0cffc0abed"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a335b8ada37f49919670e93dfc8ef307c">TerminalPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a66b1888c00815cc350464f0cffc0abed">kBase_</a></td></tr>
<tr class="memdesc:a66b1888c00815cc350464f0cffc0abed"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classscram_1_1core_1_1Terminal.xhtml" title="Representation of terminal vertices in BDD graphs. ">Terminal</a> Base (Unity/1) set.  <a href="#a66b1888c00815cc350464f0cffc0abed">More...</a><br /></td></tr>
<tr class="separator:a66b1888c00815cc350464f0cffc0abed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac474673e432b2ea0908b230886f7f6a2"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac474673e432b2ea0908b230886f7f6a2"></a>
const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a335b8ada37f49919670e93dfc8ef307c">TerminalPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#ac474673e432b2ea0908b230886f7f6a2">kEmpty_</a></td></tr>
<tr class="memdesc:ac474673e432b2ea0908b230886f7f6a2"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classscram_1_1core_1_1Terminal.xhtml" title="Representation of terminal vertices in BDD graphs. ">Terminal</a> Empty (Null/0) set. <br /></td></tr>
<tr class="separator:ac474673e432b2ea0908b230886f7f6a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Zero-Suppressed Binary Decision Diagrams for set manipulations. </p>

<p>Definition at line <a class="el" href="zbdd_8h_source.xhtml#l00153">153</a> of file <a class="el" href="zbdd_8h_source.xhtml">zbdd.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a7dd59951e7bc8fd08c75feb44bc496e2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">scram::core::Zbdd::Zbdd </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classscram_1_1core_1_1Bdd.xhtml">Bdd</a> *&#160;</td>
          <td class="paramname"><em>bdd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classscram_1_1core_1_1Settings.xhtml">Settings</a> &amp;&#160;</td>
          <td class="paramname"><em>settings</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Converts Reduced Ordered BDD into Zero-Suppressed BDD. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">bdd</td><td>ROBDD with the ITE vertices. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">settings</td><td><a class="el" href="classscram_1_1core_1_1Settings.xhtml" title="Builder for analysis settings. ">Settings</a> for analysis.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section pre"><dt>Precondition</dt><dd>BDD has attributed edges with only one terminal (1/True).</dd></dl>
<dl class="section post"><dt>Postcondition</dt><dd>The input BDD structure is not changed.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>The input BDD is not passed as a constant because ZBDD needs BDD facilities to calculate prime implicants. However, ZBDD guarantees to preserve the original BDD structure. </dd></dl>

<p>Definition at line <a class="el" href="zbdd_8cc_source.xhtml#l00060">60</a> of file <a class="el" href="zbdd_8cc_source.xhtml">zbdd.cc</a>.</p>

<p>References <a class="el" href="zbdd_8cc_source.xhtml#l00037">CHECK_ZBDD</a>.</p>

<p>Referenced by <a class="el" href="zbdd_8cc_source.xhtml#l00114">Zbdd()</a>.</p>

<p><div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Zbdd_a7dd59951e7bc8fd08c75feb44bc496e2_icgraph.svg" width="390" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a33d57c1808da12dc735a6850b2c83282"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">scram::core::Zbdd::Zbdd </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classscram_1_1core_1_1BooleanGraph.xhtml">BooleanGraph</a> *&#160;</td>
          <td class="paramname"><em>fault_tree</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classscram_1_1core_1_1Settings.xhtml">Settings</a> &amp;&#160;</td>
          <td class="paramname"><em>settings</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructor with the analysis target. </p>
<p>ZBDD is directly produced from a Boolean graph.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fault_tree</td><td>Preprocessed, partially normalized, and indexed fault tree. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">settings</td><td>The analysis settings.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section pre"><dt>Precondition</dt><dd>The passed Boolean graph already has variable ordering. </dd></dl>
<dl class="section note"><dt>Note</dt><dd>The construction may take considerable time. </dd></dl>

<p>Definition at line <a class="el" href="zbdd_8cc_source.xhtml#l00065">65</a> of file <a class="el" href="zbdd_8cc_source.xhtml">zbdd.cc</a>.</p>

<p>References <a class="el" href="boolean__graph_8cc_source.xhtml#l00845">begin</a>, <a class="el" href="zbdd_8cc_source.xhtml#l00037">CHECK_ZBDD</a>, <a class="el" href="zbdd_8cc_source.xhtml#l00208">FindOrAddVertex()</a>, <a class="el" href="zbdd_8h_source.xhtml#l00387">kBase_</a>, <a class="el" href="zbdd_8h_source.xhtml#l00388">kEmpty_</a>, <a class="el" href="boolean__graph_8h_source.xhtml#l00280">scram::core::kNull</a>, and <a class="el" href="boolean__graph_8h_source.xhtml#l00292">scram::core::kNullState</a>.</p>

<p><div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Zbdd_a33d57c1808da12dc735a6850b2c83282_cgraph.svg" width="583" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="af92e04ed908364e0177ce444d7b72712"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">scram::core::Zbdd::Zbdd </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classscram_1_1core_1_1Settings.xhtml">Settings</a> &amp;&#160;</td>
          <td class="paramname"><em>settings</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>coherent</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>module_index</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">explicit</span><span class="mlabel">protected</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default constructor to initialize member variables. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">settings</td><td><a class="el" href="classscram_1_1core_1_1Settings.xhtml" title="Builder for analysis settings. ">Settings</a> that control analysis complexity. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">coherent</td><td>A flag for coherent modular functions. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">module_index</td><td>The of a module if known. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="zbdd_8cc_source.xhtml#l00114">114</a> of file <a class="el" href="zbdd_8cc_source.xhtml">zbdd.cc</a>.</p>

<p>References <a class="el" href="logger_8h_source.xhtml#l00047">CLOCK</a>, <a class="el" href="boolean__graph_8h_source.xhtml#l00446">scram::core::Gate::coherent()</a>, <a class="el" href="bdd_8h_source.xhtml#l00707">scram::core::Bdd::Function::complement</a>, <a class="el" href="logger_8h_source.xhtml#l00073">scram::DEBUG2</a>, <a class="el" href="logger_8h_source.xhtml#l00074">scram::DEBUG3</a>, <a class="el" href="logger_8h_source.xhtml#l00075">scram::DEBUG4</a>, <a class="el" href="logger_8h_source.xhtml#l00052">DUR</a>, <a class="el" href="zbdd_8cc_source.xhtml#l00561">EliminateComplements()</a>, <a class="el" href="zbdd_8cc_source.xhtml#l00590">EliminateConstantModules()</a>, <a class="el" href="boolean__graph_8cc_source.xhtml#l00773">gates</a>, <a class="el" href="zbdd_8cc_source.xhtml#l00733">GatherModules()</a>, <a class="el" href="boolean__graph_8h_source.xhtml#l00123">scram::core::Node::index()</a>, <a class="el" href="boolean__graph_8h_source.xhtml#l00380">scram::core::Gate::IsConstant()</a>, <a class="el" href="zbdd_8h_source.xhtml#l00377">JoinModule()</a>, <a class="el" href="boolean__graph_8h_source.xhtml#l00280">scram::core::kNull</a>, <a class="el" href="settings_8h_source.xhtml#l00075">scram::core::Settings::limit_order()</a>, <a class="el" href="logger_8h_source.xhtml#l00055">LOG</a>, <a class="el" href="zbdd_8cc_source.xhtml#l00045">Log()</a>, <a class="el" href="zbdd_8cc_source.xhtml#l00630">Minimize()</a>, <a class="el" href="boolean__graph_8h_source.xhtml#l00454">scram::core::Gate::module()</a>, <a class="el" href="bdd_8h_source.xhtml#l00759">scram::core::Bdd::modules()</a>, <a class="el" href="settings_8h_source.xhtml#l00059">scram::core::Settings::prime_implicants()</a>, <a class="el" href="zbdd_8h_source.xhtml#l00100">scram::core::SetNode::Ptr()</a>, <a class="el" href="zbdd_8h_source.xhtml#l00215">settings()</a>, <a class="el" href="boolean__graph_8h_source.xhtml#l00349">scram::core::Gate::type()</a>, <a class="el" href="bdd_8h_source.xhtml#l00708">scram::core::Bdd::Function::vertex</a>, and <a class="el" href="zbdd_8cc_source.xhtml#l00060">Zbdd()</a>.</p>

<p><div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Zbdd_af92e04ed908364e0177ce444d7b72712_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a77945d28bd832d2735969d0b0a451c78"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void scram::core::Zbdd::Analyze </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Runs the analysis with the representation of a Boolean graph as ZBDD. </p>
<dl class="section warning"><dt>Warning</dt><dd>The analysis will destroy ZBDD.</dd></dl>
<dl class="section post"><dt>Postcondition</dt><dd>Products are generated with ZBDD analysis. </dd></dl>

<p>Definition at line <a class="el" href="zbdd_8cc_source.xhtml#l00089">89</a> of file <a class="el" href="zbdd_8cc_source.xhtml">zbdd.cc</a>.</p>

<p>References <a class="el" href="logger_8h_source.xhtml#l00047">CLOCK</a>, <a class="el" href="logger_8h_source.xhtml#l00074">scram::DEBUG3</a>, <a class="el" href="logger_8h_source.xhtml#l00075">scram::DEBUG4</a>, <a class="el" href="logger_8h_source.xhtml#l00052">DUR</a>, <a class="el" href="zbdd_8h_source.xhtml#l00388">kEmpty_</a>, <a class="el" href="settings_8h_source.xhtml#l00075">scram::core::Settings::limit_order()</a>, <a class="el" href="logger_8h_source.xhtml#l00055">LOG</a>, <a class="el" href="zbdd_8cc_source.xhtml#l00630">Minimize()</a>, <a class="el" href="zbdd_8h_source.xhtml#l00100">scram::core::SetNode::Ptr()</a>, and <a class="el" href="zbdd_8h_source.xhtml#l00361">ReleaseTables()</a>.</p>

<p><div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Zbdd_a77945d28bd832d2735969d0b0a451c78_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ac1d2e58b1ae5650093bdc2df72f511ce"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::vector&lt;std::vector&lt;int&gt; &gt;&amp; scram::core::Zbdd::products </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Products generated by the analysis. </dd></dl>

<p>Definition at line <a class="el" href="zbdd_8h_source.xhtml#l00195">195</a> of file <a class="el" href="zbdd_8h_source.xhtml">zbdd.h</a>.</p>

<p>References <a class="el" href="bdd_8h_source.xhtml#l00273">scram::core::NonTerminal&lt; SetNode &gt;::coherent()</a>.</p>

<p>Referenced by <a class="el" href="zbdd_8cc_source.xhtml#l00733">GatherModules()</a>.</p>

<p><div id="dynsection-5" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-5-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-5-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-5-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Zbdd_ac1d2e58b1ae5650093bdc2df72f511ce_cgraph.svg" width="368" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

<p><div id="dynsection-6" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-6-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-6-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-6-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Zbdd_ac1d2e58b1ae5650093bdc2df72f511ce_icgraph.svg" width="594" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="aa599878612e128fa09e17d0520280dbe"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a>&amp; scram::core::Zbdd::root </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Current root vertex of the ZBDD. </dd></dl>

<p>Definition at line <a class="el" href="zbdd_8h_source.xhtml#l00207">207</a> of file <a class="el" href="zbdd_8h_source.xhtml">zbdd.h</a>.</p>

<p>Referenced by <a class="el" href="zbdd_8h_source.xhtml#l00824">scram::core::zbdd::CutSetContainer::EliminateComplements()</a>, <a class="el" href="zbdd_8cc_source.xhtml#l00956">scram::core::zbdd::CutSetContainer::ExtractIntermediateCutSets()</a>, <a class="el" href="zbdd_8h_source.xhtml#l00843">scram::core::zbdd::CutSetContainer::GatherModules()</a>, <a class="el" href="zbdd_8h_source.xhtml#l00777">scram::core::zbdd::CutSetContainer::GetNextGate()</a>, <a class="el" href="zbdd_8cc_source.xhtml#l00979">scram::core::zbdd::CutSetContainer::Merge()</a>, and <a class="el" href="zbdd_8h_source.xhtml#l00838">scram::core::zbdd::CutSetContainer::Minimize()</a>.</p>

<p><div id="dynsection-7" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-7-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-7-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-7-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Zbdd_aa599878612e128fa09e17d0520280dbe_icgraph.svg" width="459" height="408"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ad2e32b346caadd0e71a8acd0212593f9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void scram::core::Zbdd::root </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>vertex</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets a new root vertex for ZBDD. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">vertex</td><td>A vertex already registered in this ZBDD. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="zbdd_8h_source.xhtml#l00212">212</a> of file <a class="el" href="zbdd_8h_source.xhtml">zbdd.h</a>.</p>

</div>
</div>
<a class="anchor" id="ab71281cd644eb442dd2d3ee1c5df56c4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classscram_1_1core_1_1Settings.xhtml">Settings</a>&amp; scram::core::Zbdd::settings </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classscram_1_1core_1_1Analysis.xhtml" title="Base abstract class for all analysis with settings. ">Analysis</a> setting with this ZBDD. </dd></dl>

<p>Definition at line <a class="el" href="zbdd_8h_source.xhtml#l00215">215</a> of file <a class="el" href="zbdd_8h_source.xhtml">zbdd.h</a>.</p>

<p>Referenced by <a class="el" href="zbdd_8cc_source.xhtml#l00931">scram::core::zbdd::CutSetContainer::ConvertGate()</a>, <a class="el" href="zbdd_8cc_source.xhtml#l00970">scram::core::zbdd::CutSetContainer::ExpandGate()</a>, <a class="el" href="zbdd_8cc_source.xhtml#l00956">scram::core::zbdd::CutSetContainer::ExtractIntermediateCutSets()</a>, <a class="el" href="zbdd_8cc_source.xhtml#l00979">scram::core::zbdd::CutSetContainer::Merge()</a>, and <a class="el" href="zbdd_8cc_source.xhtml#l00114">Zbdd()</a>.</p>

<p><div id="dynsection-8" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-8-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-8-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-8-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Zbdd_ab71281cd644eb442dd2d3ee1c5df56c4_icgraph.svg" width="436" height="314"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="aed1eaa96df30e6eaa32e9e51427c9743"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::map&lt;int, std::unique_ptr&lt;<a class="el" href="classscram_1_1core_1_1Zbdd.xhtml">Zbdd</a>&gt; &gt;&amp; scram::core::Zbdd::modules </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>A set of registered and fully processed modules; </dd></dl>

<p>Definition at line <a class="el" href="zbdd_8h_source.xhtml#l00218">218</a> of file <a class="el" href="zbdd_8h_source.xhtml">zbdd.h</a>.</p>

<p>References <a class="el" href="bdd_8h_source.xhtml#l00273">scram::core::NonTerminal&lt; SetNode &gt;::coherent()</a>, <a class="el" href="bdd_8h_source.xhtml#l00284">scram::core::NonTerminal&lt; SetNode &gt;::high()</a>, <a class="el" href="bdd_8h_source.xhtml#l00258">scram::core::NonTerminal&lt; SetNode &gt;::index()</a>, <a class="el" href="bdd_8h_source.xhtml#l00287">scram::core::NonTerminal&lt; SetNode &gt;::low()</a>, <a class="el" href="bdd_8h_source.xhtml#l00267">scram::core::NonTerminal&lt; SetNode &gt;::module()</a>, and <a class="el" href="bdd_8h_source.xhtml#l00261">scram::core::NonTerminal&lt; SetNode &gt;::order()</a>.</p>

<p>Referenced by <a class="el" href="zbdd_8cc_source.xhtml#l00733">GatherModules()</a>, and <a class="el" href="zbdd_8h_source.xhtml#l00843">scram::core::zbdd::CutSetContainer::GatherModules()</a>.</p>

<p><div id="dynsection-9" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-9-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-9-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-9-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Zbdd_aed1eaa96df30e6eaa32e9e51427c9743_cgraph.svg" width="368" height="379"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

<p><div id="dynsection-10" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-10-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-10-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-10-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Zbdd_aed1eaa96df30e6eaa32e9e51427c9743_icgraph.svg" width="594" height="111"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a42af18229ba2e80201bc0fdac07b7091"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="zbdd_8h.xhtml#a8a62276408638914927627187b3ced57">SetNodePtr</a> scram::core::Zbdd::FindOrAddVertex </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>high</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>low</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>order</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>module</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>coherent</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Finds or adds a unique <a class="el" href="classscram_1_1core_1_1SetNode.xhtml" title="Representation of non-terminal nodes in ZBDD. ">SetNode</a> in the ZBDD. </p>
<p>All vertices in the ZBDD must be created with this functions. Otherwise, the ZBDD may not be reduced, and vertices will miss crucial meta-information about the ZBDD.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td>Positive or negative index of the node. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">high</td><td>The high vertex. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">low</td><td>The low vertex. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">order</td><td>The order for the vertex variable. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">module</td><td>The indication of a proxy for a modular ZBDD. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">coherent</td><td>The indication of a coherent proxy.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Set node with the given parameters.</dd></dl>
<dl class="section warning"><dt>Warning</dt><dd>This function is not aware of reduction rules. </dd></dl>

<p>Definition at line <a class="el" href="zbdd_8cc_source.xhtml#l00208">208</a> of file <a class="el" href="zbdd_8cc_source.xhtml">zbdd.cc</a>.</p>

<p>References <a class="el" href="zbdd_8h_source.xhtml#l00100">scram::core::SetNode::Ptr()</a>.</p>

<p>Referenced by <a class="el" href="zbdd_8cc_source.xhtml#l00931">scram::core::zbdd::CutSetContainer::ConvertGate()</a>, <a class="el" href="zbdd_8cc_source.xhtml#l00238">FindOrAddVertex()</a>, <a class="el" href="zbdd_8cc_source.xhtml#l00630">Minimize()</a>, and <a class="el" href="zbdd_8cc_source.xhtml#l00065">Zbdd()</a>.</p>

<p><div id="dynsection-11" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-11-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-11-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-11-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Zbdd_a42af18229ba2e80201bc0fdac07b7091_cgraph.svg" width="370" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

<p><div id="dynsection-12" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-12-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-12-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-12-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Zbdd_a42af18229ba2e80201bc0fdac07b7091_icgraph.svg" width="100%" height="574"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ac90d12f0c653c679d22109124fa6344c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="zbdd_8h.xhtml#a8a62276408638914927627187b3ced57">SetNodePtr</a> scram::core::Zbdd::FindOrAddVertex </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classscram_1_1core_1_1Gate.xhtml">Gate</a> &amp;&#160;</td>
          <td class="paramname"><em>gate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>high</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>low</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Find or adds a ZBDD <a class="el" href="classscram_1_1core_1_1SetNode.xhtml" title="Representation of non-terminal nodes in ZBDD. ">SetNode</a> vertex using information from gates. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gate</td><td><a class="el" href="classscram_1_1core_1_1Gate.xhtml" title="An indexed gate for use in BooleanGraph. ">Gate</a> with index, order, and other information. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">high</td><td>The new high vertex. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">low</td><td>The new low vertex.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classscram_1_1core_1_1SetNode.xhtml" title="Representation of non-terminal nodes in ZBDD. ">SetNode</a> for a replacement.</dd></dl>
<dl class="section warning"><dt>Warning</dt><dd>This function is not aware of reduction rules. </dd></dl>

<p>Definition at line <a class="el" href="zbdd_8cc_source.xhtml#l00238">238</a> of file <a class="el" href="zbdd_8cc_source.xhtml">zbdd.cc</a>.</p>

<p>References <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a711aca319bb4d1586bf1ed92eccfaa97">Apply()</a>, <a class="el" href="boolean__graph_8h_source.xhtml#l00383">scram::core::Gate::args()</a>, <a class="el" href="zbdd_8h_source.xhtml#l00352">ClearTables()</a>, <a class="el" href="boolean__graph_8h_source.xhtml#l00446">scram::core::Gate::coherent()</a>, <a class="el" href="bdd_8h_source.xhtml#l00707">scram::core::Bdd::Function::complement</a>, <a class="el" href="zbdd_8cc_source.xhtml#l00208">FindOrAddVertex()</a>, <a class="el" href="boolean__graph_8cc_source.xhtml#l00773">gates</a>, <a class="el" href="boolean__graph_8h_source.xhtml#l00123">scram::core::Node::index()</a>, <a class="el" href="boolean__graph_8h_source.xhtml#l00380">scram::core::Gate::IsConstant()</a>, <a class="el" href="zbdd_8h_source.xhtml#l00387">kBase_</a>, <a class="el" href="zbdd_8h_source.xhtml#l00388">kEmpty_</a>, <a class="el" href="settings_8h_source.xhtml#l00075">scram::core::Settings::limit_order()</a>, <a class="el" href="boolean__graph_8h_source.xhtml#l00454">scram::core::Gate::module()</a>, <a class="el" href="boolean__graph_8h_source.xhtml#l00126">scram::core::Node::order()</a>, <a class="el" href="boolean__graph_8h_source.xhtml#l00075">scram::core::NodeParentManager::parents()</a>, <a class="el" href="settings_8h_source.xhtml#l00059">scram::core::Settings::prime_implicants()</a>, <a class="el" href="zbdd_8h_source.xhtml#l00100">scram::core::SetNode::Ptr()</a>, <a class="el" href="bdd_8h_source.xhtml#l00210">scram::core::Terminal&lt; T &gt;::Ptr()</a>, <a class="el" href="bdd_8h_source.xhtml#l00369">scram::core::Ite::Ptr()</a>, <a class="el" href="linear__map_8h_source.xhtml#l00375">ext::linear_map&lt; Key, Value, ErasePolicy, Sequence &gt;::size()</a>, <a class="el" href="boolean__graph_8h_source.xhtml#l00349">scram::core::Gate::type()</a>, and <a class="el" href="bdd_8h_source.xhtml#l00708">scram::core::Bdd::Function::vertex</a>.</p>

<p>Referenced by <a class="el" href="zbdd_8cc_source.xhtml#l00238">FindOrAddVertex()</a>.</p>

<p><div id="dynsection-13" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-13-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-13-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-13-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Zbdd_ac90d12f0c653c679d22109124fa6344c_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

<p><div id="dynsection-14" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-14-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-14-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-14-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Zbdd_ac90d12f0c653c679d22109124fa6344c_icgraph.svg" width="147" height="76"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a711aca319bb4d1586bf1ed92eccfaa97"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;Operator Type&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> scram::core::Zbdd::Apply </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>arg_one</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>arg_two</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>limit_order</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Applies Boolean operation to two vertices representing sets. </p>
<p>This is the main function for the operation.</p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">Type</td><td>The operator enum.</td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">arg_one</td><td>First argument ZBDD set. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">arg_two</td><td>Second argument ZBDD set. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">limit_order</td><td>The limit on the order for the computations.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The resulting ZBDD vertex.</dd></dl>
<dl class="section post"><dt>Postcondition</dt><dd>The limit on the set order is guaranteed. </dd></dl>

<p>Referenced by <a class="el" href="zbdd_8cc_source.xhtml#l00931">scram::core::zbdd::CutSetContainer::ConvertGate()</a>, and <a class="el" href="zbdd_8cc_source.xhtml#l00238">FindOrAddVertex()</a>.</p>

<p><div id="dynsection-15" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-15-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-15-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-15-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Zbdd_a711aca319bb4d1586bf1ed92eccfaa97_icgraph.svg" width="396" height="142"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a4f2deb99cf4a08565f6c0177ec263961"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">Zbdd::VertexPtr</a> scram::core::Zbdd::Apply </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="boolean__graph_8h.xhtml#ad4c053147ae98b76f12620441f6d3800">Operator</a>&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>arg_one</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>arg_two</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>limit_order</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Applies Boolean operation to two vertices representing sets. </p>
<p>This is a convenience function if the operator type cannot be determined at compile time.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">type</td><td>The operator or type of the gate. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">arg_one</td><td>First argument ZBDD set. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">arg_two</td><td>Second argument ZBDD set. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">limit_order</td><td>The limit on the order for the computations.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The resulting ZBDD vertex.</dd></dl>
<dl class="section pre"><dt>Precondition</dt><dd>The operator is either AND or OR.</dd></dl>
<dl class="section post"><dt>Postcondition</dt><dd>The limit on the set order is guaranteed. </dd></dl>

<p>Definition at line <a class="el" href="zbdd_8cc_source.xhtml#l00552">552</a> of file <a class="el" href="zbdd_8cc_source.xhtml">zbdd.cc</a>.</p>

<p>References <a class="el" href="boolean__graph_8h_source.xhtml#l00273">scram::core::kAnd</a>, and <a class="el" href="boolean__graph_8h_source.xhtml#l00274">scram::core::kOr</a>.</p>

</div>
</div>
<a class="anchor" id="a6651a03c79671c2cd495a15d7257659e"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;Operator Type&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> scram::core::Zbdd::Apply </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="zbdd_8h.xhtml#a8a62276408638914927627187b3ced57">SetNodePtr</a> &amp;&#160;</td>
          <td class="paramname"><em>arg_one</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="zbdd_8h.xhtml#a8a62276408638914927627187b3ced57">SetNodePtr</a> &amp;&#160;</td>
          <td class="paramname"><em>arg_two</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>limit_order</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Applies Boolean operation to ZBDD graph non-terminal vertices. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">Type</td><td>The operator enum.</td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">arg_one</td><td>First argument set vertex. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">arg_two</td><td>Second argument set vertex. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">limit_order</td><td>The limit on the order for the computations.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The resulting ZBDD vertex.</dd></dl>
<dl class="section pre"><dt>Precondition</dt><dd>Argument vertices are ordered. </dd></dl>

</div>
</div>
<a class="anchor" id="ac3ac27090b550d973b20bd971c3de9f9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">Zbdd::VertexPtr</a> scram::core::Zbdd::EliminateComplements </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>vertex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::unordered_map&lt; int, <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &gt; *&#160;</td>
          <td class="paramname"><em>wide_results</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Removes complements of variables from products. </p>
<p>This procedure only needs to be performed for non-coherent graphs with minimal cut sets as output.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">vertex</td><td>The variable vertex in the ZBDD. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">wide_results</td><td>Memoisation of the processed vertices.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Processed vertex.</dd></dl>
<dl class="section post"><dt>Postcondition</dt><dd>Sub-modules are not processed. </dd>
<dd>
Complements of modules are not eliminated. </dd></dl>

<p>Definition at line <a class="el" href="zbdd_8cc_source.xhtml#l00561">561</a> of file <a class="el" href="zbdd_8cc_source.xhtml">zbdd.cc</a>.</p>

<p>References <a class="el" href="settings_8h_source.xhtml#l00075">scram::core::Settings::limit_order()</a>, <a class="el" href="zbdd_8cc_source.xhtml#l00630">Minimize()</a>, and <a class="el" href="zbdd_8h_source.xhtml#l00100">scram::core::SetNode::Ptr()</a>.</p>

<p>Referenced by <a class="el" href="zbdd_8h_source.xhtml#l00824">scram::core::zbdd::CutSetContainer::EliminateComplements()</a>, and <a class="el" href="zbdd_8cc_source.xhtml#l00114">Zbdd()</a>.</p>

<p><div id="dynsection-16" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-16-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-16-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-16-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Zbdd_ac3ac27090b550d973b20bd971c3de9f9_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

<p><div id="dynsection-17" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-17-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-17-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-17-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Zbdd_ac3ac27090b550d973b20bd971c3de9f9_icgraph.svg" width="398" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="aeb83fd37f2aee74ac41e6ccadba82d39"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void scram::core::Zbdd::EliminateConstantModules </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Removes constant modules from products. </p>
<p><a class="el" href="classscram_1_1core_1_1Constant.xhtml" title="Representation of a node that is a Boolean constant with True or False state. ">Constant</a> modules are likely to happen after complement elimination. This procedure is inherently bottom-up, so the caller must make sure that the modules have already been pre-processed.</p>
<dl class="section pre"><dt>Precondition</dt><dd>All modules have been processed. </dd></dl>

<p>Definition at line <a class="el" href="zbdd_8cc_source.xhtml#l00590">590</a> of file <a class="el" href="zbdd_8cc_source.xhtml">zbdd.cc</a>.</p>

<p>References <a class="el" href="logger_8h_source.xhtml#l00075">scram::DEBUG4</a>, <a class="el" href="settings_8h_source.xhtml#l00075">scram::core::Settings::limit_order()</a>, <a class="el" href="logger_8h_source.xhtml#l00055">LOG</a>, <a class="el" href="zbdd_8cc_source.xhtml#l00630">Minimize()</a>, <a class="el" href="zbdd_8h_source.xhtml#l00100">scram::core::SetNode::Ptr()</a>, and <a class="el" href="bdd_8h_source.xhtml#l00203">scram::core::Terminal&lt; T &gt;::value()</a>.</p>

<p>Referenced by <a class="el" href="zbdd_8h_source.xhtml#l00833">scram::core::zbdd::CutSetContainer::EliminateConstantModules()</a>, and <a class="el" href="zbdd_8cc_source.xhtml#l00114">Zbdd()</a>.</p>

<p><div id="dynsection-18" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-18-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-18-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-18-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Zbdd_aeb83fd37f2aee74ac41e6ccadba82d39_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

<p><div id="dynsection-19" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-19-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-19-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-19-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Zbdd_aeb83fd37f2aee74ac41e6ccadba82d39_icgraph.svg" width="419" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a3dbb8ef5da2882daf6c39e9724eae459"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">Zbdd::VertexPtr</a> scram::core::Zbdd::Minimize </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>vertex</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Removes subsets in ZBDD. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">vertex</td><td>The variable node in the set.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Processed vertex. </dd></dl>

<p>Definition at line <a class="el" href="zbdd_8cc_source.xhtml#l00630">630</a> of file <a class="el" href="zbdd_8cc_source.xhtml">zbdd.cc</a>.</p>

<p>References <a class="el" href="zbdd_8cc_source.xhtml#l00208">FindOrAddVertex()</a>, <a class="el" href="zbdd_8h_source.xhtml#l00388">kEmpty_</a>, <a class="el" href="settings_8h_source.xhtml#l00059">scram::core::Settings::prime_implicants()</a>, <a class="el" href="zbdd_8h_source.xhtml#l00100">scram::core::SetNode::Ptr()</a>, <a class="el" href="bdd_8h_source.xhtml#l00210">scram::core::Terminal&lt; T &gt;::Ptr()</a>, and <a class="el" href="bdd_8h_source.xhtml#l00203">scram::core::Terminal&lt; T &gt;::value()</a>.</p>

<p>Referenced by <a class="el" href="zbdd_8cc_source.xhtml#l00089">Analyze()</a>, <a class="el" href="zbdd_8cc_source.xhtml#l00410">Apply()</a>, <a class="el" href="zbdd_8cc_source.xhtml#l00561">EliminateComplements()</a>, <a class="el" href="zbdd_8cc_source.xhtml#l00590">EliminateConstantModules()</a>, <a class="el" href="zbdd_8h_source.xhtml#l00838">scram::core::zbdd::CutSetContainer::Minimize()</a>, and <a class="el" href="zbdd_8cc_source.xhtml#l00114">Zbdd()</a>.</p>

<p><div id="dynsection-20" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-20-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-20-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-20-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Zbdd_a3dbb8ef5da2882daf6c39e9724eae459_cgraph.svg" width="592" height="287"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

<p><div id="dynsection-21" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-21-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-21-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-21-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Zbdd_a3dbb8ef5da2882daf6c39e9724eae459_icgraph.svg" width="603" height="366"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a516f0d2f35ad213399f83fb9ab102561"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int scram::core::Zbdd::GatherModules </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a73cd06a4022ce5cd60f9f667fec8d51f">VertexPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>vertex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>current_order</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::map&lt; int, std::pair&lt; bool, int &gt;&gt; *&#160;</td>
          <td class="paramname"><em>modules</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Traverses ZBDD to find modules and adjusted cut-offs. </p>
<p>Modules within modules are not gathered.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">vertex</td><td>The root vertex to start with. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">current_order</td><td>The product order from the top to the module. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">modules</td><td>A map of module indices, coherence, and cut-offs.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The minimum product order from the bottom. </dd>
<dd>
-1 if the vertex is terminal Empty on low branch only.</dd></dl>
<dl class="section pre"><dt>Precondition</dt><dd>The ZBDD is minimal. </dd></dl>

<p>Definition at line <a class="el" href="zbdd_8cc_source.xhtml#l00733">733</a> of file <a class="el" href="zbdd_8cc_source.xhtml">zbdd.cc</a>.</p>

<p>References <a class="el" href="settings_8h_source.xhtml#l00075">scram::core::Settings::limit_order()</a>, <a class="el" href="zbdd_8h_source.xhtml#l00218">modules()</a>, <a class="el" href="zbdd_8h_source.xhtml#l00195">products()</a>, <a class="el" href="zbdd_8h_source.xhtml#l00100">scram::core::SetNode::Ptr()</a>, <a class="el" href="bdd_8h_source.xhtml#l00210">scram::core::Terminal&lt; T &gt;::Ptr()</a>, and <a class="el" href="bdd_8h_source.xhtml#l00203">scram::core::Terminal&lt; T &gt;::value()</a>.</p>

<p>Referenced by <a class="el" href="zbdd_8h_source.xhtml#l00843">scram::core::zbdd::CutSetContainer::GatherModules()</a>, and <a class="el" href="zbdd_8cc_source.xhtml#l00114">Zbdd()</a>.</p>

<p><div id="dynsection-22" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-22-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-22-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-22-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Zbdd_a516f0d2f35ad213399f83fb9ab102561_cgraph.svg" width="591" height="431"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

<p><div id="dynsection-23" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-23-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-23-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-23-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Zbdd_a516f0d2f35ad213399f83fb9ab102561_icgraph.svg" width="410" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a4ecbf60e6ac51e5260e8d8139c1b8599"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void scram::core::Zbdd::JoinModule </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::unique_ptr&lt; <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml">Zbdd</a> &gt;&#160;</td>
          <td class="paramname"><em>container</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Joins a ZBDD representing a module gate. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td>The index of the module. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">container</td><td>The container of the module graph.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section pre"><dt>Precondition</dt><dd>The module products are final, and no more processing or sanitizing is needed. </dd></dl>

<p>Definition at line <a class="el" href="zbdd_8h_source.xhtml#l00377">377</a> of file <a class="el" href="zbdd_8h_source.xhtml">zbdd.h</a>.</p>

<p>References <a class="el" href="zbdd_8h_source.xhtml#l00049">scram::core::SetNode::minimal()</a>, and <a class="el" href="zbdd_8h_source.xhtml#l00100">scram::core::SetNode::Ptr()</a>.</p>

<p>Referenced by <a class="el" href="zbdd_8h_source.xhtml#l00843">scram::core::zbdd::CutSetContainer::GatherModules()</a>, and <a class="el" href="zbdd_8cc_source.xhtml#l00114">Zbdd()</a>.</p>

<p><div id="dynsection-24" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-24-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-24-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-24-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Zbdd_a4ecbf60e6ac51e5260e8d8139c1b8599_cgraph.svg" width="370" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

<p><div id="dynsection-25" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-25-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-25-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-25-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Zbdd_a4ecbf60e6ac51e5260e8d8139c1b8599_icgraph.svg" width="410" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a66b1888c00815cc350464f0cffc0abed"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classscram_1_1core_1_1Zbdd.xhtml#a335b8ada37f49919670e93dfc8ef307c">TerminalPtr</a> scram::core::Zbdd::kBase_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p><a class="el" href="classscram_1_1core_1_1Terminal.xhtml" title="Representation of terminal vertices in BDD graphs. ">Terminal</a> Base (Unity/1) set. </p>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000011">Todo:</a></b></dt><dd>Redesign vertex management and creation.</dd></dl>
<p>The management mechanism must be encapsulated. Invariants must be private. </p>

<p>Definition at line <a class="el" href="zbdd_8h_source.xhtml#l00387">387</a> of file <a class="el" href="zbdd_8h_source.xhtml">zbdd.h</a>.</p>

<p>Referenced by <a class="el" href="zbdd_8cc_source.xhtml#l00485">Apply()</a>, <a class="el" href="zbdd_8cc_source.xhtml#l00931">scram::core::zbdd::CutSetContainer::ConvertGate()</a>, <a class="el" href="zbdd_8cc_source.xhtml#l00238">FindOrAddVertex()</a>, and <a class="el" href="zbdd_8cc_source.xhtml#l00065">Zbdd()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="zbdd_8h_source.xhtml">zbdd.h</a></li>
<li><a class="el" href="zbdd_8cc_source.xhtml">zbdd.cc</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Dec 12 2016 00:21:15 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
