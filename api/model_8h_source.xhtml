<!-- HTML header for doxygen 1.8.11-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="robots" content="noindex, nofollow"/>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>model.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="scram_blue.png"/></td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">model.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="model_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (C) 2014-2016 Olzhas Rakhimov</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * the Free Software Foundation; either version 3 of the License, or</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * (at your option) any later version.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * GNU General Public License for more details.</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">/// @file model.h</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">/// Representation for a model container for risk analysis.</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#ifndef SCRAM_SRC_MODEL_H_</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#define SCRAM_SRC_MODEL_H_</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;type_traits&gt;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;boost/multi_index_container.hpp&gt;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;boost/multi_index/global_fun.hpp&gt;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;boost/multi_index/hashed_index.hpp&gt;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;boost/noncopyable.hpp&gt;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="ccf__group_8h.xhtml">ccf_group.h</a>&quot;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="element_8h.xhtml">element.h</a>&quot;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="event_8h.xhtml">event.h</a>&quot;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="fault__tree_8h.xhtml">fault_tree.h</a>&quot;</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="parameter_8h.xhtml">parameter.h</a>&quot;</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacescram.xhtml">scram</a> {</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">namespace </span>mef {</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment">/// This class represents a risk analysis model.</span></div><div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml">   44</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classscram_1_1mef_1_1Model.xhtml">Model</a> : <span class="keyword">public</span> <a class="code" href="classscram_1_1mef_1_1Element.xhtml">Element</a>, boost::noncopyable {</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; <span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment">  /// Creates a model container.</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">  /// @param[in] name  The optional name for the model.</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment">  /// @throws InvalidArgument  The name is malformed.</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment"></span>  <span class="keyword">explicit</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a9cc591bf6c40805064ea0a9ec0c453c7">Model</a>(std::string <a class="code" href="classscram_1_1mef_1_1Element.xhtml#adb401e2ca84aa98cb60797bec2500a81">name</a> = <span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">  /// @returns Defined constructs in the model.</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">  /// @{</span></div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#a9bac9a7746026484f3dc69a3ccb2ac4a">   55</a></span>&#160;<span class="comment"></span>  <span class="keyword">const</span> <a class="code" href="element_8h.xhtml#ab162a6f742c23405f33db706d5a927b4">ElementTable&lt;FaultTreePtr&gt;</a>&amp; <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a9bac9a7746026484f3dc69a3ccb2ac4a">fault_trees</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> fault_trees_; }</div><div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#a698156baa445c530089d57601e19bb35">   56</a></span>&#160;  <span class="keyword">const</span> <a class="code" href="element_8h.xhtml#a850003eb778bdded85c40e3b3a02e50b">IdTable&lt;ParameterPtr&gt;</a>&amp; <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a698156baa445c530089d57601e19bb35">parameters</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordflow">return</span> parameters_.entities_by_id;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  }</div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#a2ddd6d121e1ab6fbe140fc3fb449cd96">   59</a></span>&#160;  <span class="keyword">const</span> <a class="code" href="element_8h.xhtml#a850003eb778bdded85c40e3b3a02e50b">IdTable&lt;HouseEventPtr&gt;</a>&amp; <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a2ddd6d121e1ab6fbe140fc3fb449cd96">house_events</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keywordflow">return</span> house_events_.entities_by_id;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  }</div><div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#ada7804d62fc594bff7b080c680586209">   62</a></span>&#160;  <span class="keyword">const</span> <a class="code" href="element_8h.xhtml#a850003eb778bdded85c40e3b3a02e50b">IdTable&lt;BasicEventPtr&gt;</a>&amp; <a class="code" href="classscram_1_1mef_1_1Model.xhtml#ada7804d62fc594bff7b080c680586209">basic_events</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordflow">return</span> basic_events_.entities_by_id;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  }</div><div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#ab67ee068ec7f783c7b3c573270cf4fdb">   65</a></span>&#160;  <span class="keyword">const</span> <a class="code" href="element_8h.xhtml#a850003eb778bdded85c40e3b3a02e50b">IdTable&lt;GatePtr&gt;</a>&amp; <a class="code" href="classscram_1_1mef_1_1Model.xhtml#ab67ee068ec7f783c7b3c573270cf4fdb">gates</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> gates_.entities_by_id; }</div><div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1Model.xhtml#a5c8b03561207b374fc06dd61c0cf3ace">   66</a></span>&#160;  <span class="keyword">const</span> <a class="code" href="element_8h.xhtml#a850003eb778bdded85c40e3b3a02e50b">IdTable&lt;CcfGroupPtr&gt;</a>&amp; <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a5c8b03561207b374fc06dd61c0cf3ace">ccf_groups</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> ccf_groups_; }<span class="comment"></span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">  /// @}</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment"></span><span class="comment"></span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">  /// Adds a fault tree into the model container.</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment">  /// Fault trees are uniquely owned by this model.</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">  /// @param[in] fault_tree  A fault tree defined in this model.</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">  /// @throws RedefinitionError  The model has a container with the same name.</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment"></span>  <span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a52dd79392036c36ac613f6d6fe21c592">AddFaultTree</a>(<a class="code" href="fault__tree_8h.xhtml#a8538f816ccf630916e93bd1432fa07d6">FaultTreePtr</a> fault_tree);</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">  /// Adds a parameter that is used in this model&#39;s expressions.</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">  /// @param[in] parameter  A parameter defined in this model.</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">  /// @throws RedefinitionError  The model has a parameter with the same name.</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment"></span>  <span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#ae2080e08c0fd0137e57a29830d1b9cdc">AddParameter</a>(<span class="keyword">const</span> <a class="code" href="parameter_8h.xhtml#ad02b8dbf956c6c94b34ce9a703d7b408">ParameterPtr</a>&amp; parameter);</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">  /// Adds a house event that is used in this model.</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">  /// @param[in] house_event  A house event defined in this model.</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">  /// @throws RedefinitionError  An event with the same name already exists.</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment"></span>  <span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a1a68e09d766974684ee5a15a7c9572ec">AddHouseEvent</a>(<span class="keyword">const</span> <a class="code" href="event_8h.xhtml#a4ebd6466b2d3ea77c0780af19d75adb9">HouseEventPtr</a>&amp; house_event);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">  /// Adds a basic event that is used in this model.</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment">  /// @param[in] basic_event  A basic event defined in this model.</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment">  /// @throws RedefinitionError  An event with the same name already exists.</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment"></span>  <span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#ab2c529b0b484653d9834b2357a3232db">AddBasicEvent</a>(<span class="keyword">const</span> <a class="code" href="event_8h.xhtml#a014b1b08212f876b5f342bb4b52e3d39">BasicEventPtr</a>&amp; basic_event);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">  /// Adds a gate that is used in this model&#39;s fault trees or components.</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">  /// @param[in] gate  A gate defined in this model.</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">  /// @throws RedefinitionError  An event with the same name already exists.</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment"></span>  <span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#ae9c29a5358f8c38ba1ea4d5990c112e0">AddGate</a>(<span class="keyword">const</span> <a class="code" href="event_8h.xhtml#a04cb31142e9883483951cba3ab63b597">GatePtr</a>&amp; gate);</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">  /// Adds a CCF group that is used in this model&#39;s fault trees.</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">  /// @param[in] ccf_group  A CCF group defined in this model.</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">  /// @throws RedefinitionError  The model has a CCF group with the same name.</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment"></span>  <span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#aa071b5b312ba998375a246d516c2d234">AddCcfGroup</a>(<span class="keyword">const</span> <a class="code" href="ccf__group_8h.xhtml#a2736f823d103bed2d002c9ce6f0c217c">CcfGroupPtr</a>&amp; ccf_group);</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">  /// Finds an entity (parameter, basic and house event, gate) from a reference.</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">  /// The reference is case sensitive</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">  /// and can contain an identifier, full path, or local path.</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">  /// @param[in] entity_reference  Reference string to the entity.</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">  /// @param[in] base_path  The series of containers indicating the scope.</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">  /// @returns Pointer to the entity found by following the given reference.</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">  /// @throws std::out_of_range  The entity cannot be found.</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">  /// @{</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment"></span>  <a class="code" href="parameter_8h.xhtml#ad02b8dbf956c6c94b34ce9a703d7b408">ParameterPtr</a> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#a0ccac47c51f11484aed5e7cf3bdd73dd">GetParameter</a>(<span class="keyword">const</span> std::string&amp; entity_reference,</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                            <span class="keyword">const</span> std::string&amp; base_path);</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  <a class="code" href="event_8h.xhtml#a4ebd6466b2d3ea77c0780af19d75adb9">HouseEventPtr</a> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#ad94f586b7fe8d530e74ca6188d76632f">GetHouseEvent</a>(<span class="keyword">const</span> std::string&amp; entity_reference,</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                              <span class="keyword">const</span> std::string&amp; base_path);</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  <a class="code" href="event_8h.xhtml#a014b1b08212f876b5f342bb4b52e3d39">BasicEventPtr</a> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#ab0ac16c0222b9718760e19a65e736093">GetBasicEvent</a>(<span class="keyword">const</span> std::string&amp; entity_reference,</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                              <span class="keyword">const</span> std::string&amp; base_path);</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  <a class="code" href="event_8h.xhtml#a04cb31142e9883483951cba3ab63b597">GatePtr</a> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#ac100f59b5e4163a617b5d3b893afd3f9">GetGate</a>(<span class="keyword">const</span> std::string&amp; entity_reference,</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                  <span class="keyword">const</span> std::string&amp; base_path);<span class="comment"></span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">  /// @}</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment"></span><span class="comment"></span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">  /// Binds a formula with its argument event.</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">  /// This is a special handling for undefined event types</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">  /// with mixed roles.</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">  /// @param[in] entity_reference  Reference string to the entity.</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">  /// @param[in] base_path  The series of containers indicating the scope.</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">  /// @param[out] formula  The host formula for the event.</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">  /// @throws std::out_of_range  The entity cannot be found.</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment"></span>  <span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1Model.xhtml#ae7266a6fb9b501538885c208dfc934f6">BindEvent</a>(<span class="keyword">const</span> std::string&amp; entity_reference,</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                 <span class="keyword">const</span> std::string&amp; base_path, <a class="code" href="classscram_1_1mef_1_1Formula.xhtml">Formula</a>* formula);</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160; <span class="keyword">private</span>:<span class="comment"></span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">  /// Lookup containers for model entities with roles.</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">  /// @tparam T  Type of an entity with a role.</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment"></span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  <span class="keyword">struct </span>LookupTable {</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    static_assert(std::is_base_of&lt;Role, T&gt;::value, <span class="stringliteral">&quot;Entity without a role!&quot;</span>);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment">    /// Container with full path to elements.</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment">    /// @tparam Ptr  Pointer type to the T.</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment"></span>    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Ptr&gt;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keyword">using</span> PathTable = boost::multi_index_container&lt;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        Ptr,</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        boost::multi_index::indexed_by&lt;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            boost::multi_index::hashed_unique&lt;boost::multi_index::global_fun&lt;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                <span class="keyword">const</span> Ptr&amp;, std::string, &amp;<a class="code" href="element_8h.xhtml#a34a172bfae7e234836f4ca9cc55a193d">GetFullPath</a>&gt;&gt;&gt;&gt;;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">    /// Adds an entry with an entity into lookup containers.</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">    /// @param[in] entity  The candidate entity.</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">    ///</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment">    /// @returns false if the entity is duplicate and hasn&#39;t been added.</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment"></span>    <span class="keywordtype">bool</span> <a class="code" href="classscram_1_1mef_1_1Add.xhtml">Add</a>(<span class="keyword">const</span> std::shared_ptr&lt;T&gt;&amp; entity) {</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;      <span class="keywordflow">if</span> (entities_by_id.insert(entity).second == <span class="keyword">false</span>)</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;      entities_by_path.insert(entity);</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    }</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <a class="code" href="element_8h.xhtml#a850003eb778bdded85c40e3b3a02e50b">IdTable&lt;std::shared_ptr&lt;T&gt;</a>&gt; entities_by_id;  <span class="comment">///&lt; Entity id as a key.</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment"></span>    PathTable&lt;std::shared_ptr&lt;T&gt;&gt; entities_by_path;  <span class="comment">///&lt; Full path as a key.</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment"></span>  };</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment">  /// Generic helper function to find an entity from a reference.</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">  /// The reference is case sensitive</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment">  /// and can contain an identifier, full path, or local path.</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment">  /// @tparam Container  Map of name and entity pairs.</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment">  /// @param[in] entity_reference  Reference string to the entity.</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment">  /// @param[in] base_path  The series of containers indicating the scope.</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment">  /// @param[in] container  Model&#39;s lookup container for entities.</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment">  /// @returns Pointer to the requested entity.</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment">  /// @throws std::out_of_range  The entity cannot be found.</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="comment"></span>  <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;  std::shared_ptr&lt;T&gt; GetEntity(<span class="keyword">const</span> std::string&amp; entity_reference,</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                               <span class="keyword">const</span> std::string&amp; base_path,</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                               <span class="keyword">const</span> LookupTable&lt;T&gt;&amp; container);</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment">  /// A collection of defined constructs in the model.</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment">  /// @{</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment"></span>  <a class="code" href="element_8h.xhtml#ab162a6f742c23405f33db706d5a927b4">ElementTable&lt;FaultTreePtr&gt;</a> fault_trees_;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;  LookupTable&lt;Gate&gt; gates_;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;  LookupTable&lt;HouseEvent&gt; house_events_;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;  LookupTable&lt;BasicEvent&gt; basic_events_;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;  LookupTable&lt;Parameter&gt; parameters_;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;  <a class="code" href="element_8h.xhtml#a850003eb778bdded85c40e3b3a02e50b">IdTable&lt;CcfGroupPtr&gt;</a> ccf_groups_;<span class="comment"></span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment">  /// @}</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment"></span>  <a class="code" href="element_8h.xhtml#a850003eb778bdded85c40e3b3a02e50b">IdTable&lt;Event*&gt;</a> events_;  <span class="comment">///&lt; All events by ids.</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment"></span>};</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;}  <span class="comment">// namespace mef</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;}  <span class="comment">// namespace scram</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="preprocessor">#endif  // SCRAM_SRC_MODEL_H_</span></div><div class="ttc" id="classscram_1_1mef_1_1Formula_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1Formula.xhtml">scram::mef::Formula</a></div><div class="ttdoc">Boolean formula with operators and arguments. </div><div class="ttdef"><b>Definition:</b> <a href="event_8h_source.xhtml#l00326">event.h:326</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_ab0ac16c0222b9718760e19a65e736093"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#ab0ac16c0222b9718760e19a65e736093">scram::mef::Model::GetBasicEvent</a></div><div class="ttdeci">BasicEventPtr GetBasicEvent(const std::string &amp;entity_reference, const std::string &amp;base_path)</div><div class="ttdoc">Finds an entity (parameter, basic and house event, gate) from a reference. </div><div class="ttdef"><b>Definition:</b> <a href="model_8cc_source.xhtml#l00083">model.cc:83</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_ad94f586b7fe8d530e74ca6188d76632f"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#ad94f586b7fe8d530e74ca6188d76632f">scram::mef::Model::GetHouseEvent</a></div><div class="ttdeci">HouseEventPtr GetHouseEvent(const std::string &amp;entity_reference, const std::string &amp;base_path)</div><div class="ttdoc">Finds an entity (parameter, basic and house event, gate) from a reference. </div><div class="ttdef"><b>Definition:</b> <a href="model_8cc_source.xhtml#l00078">model.cc:78</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Add_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1Add.xhtml">scram::mef::Add</a></div><div class="ttdoc">This expression adds all the given expressions&amp;#39; values. </div><div class="ttdef"><b>Definition:</b> <a href="arithmetic_8h_source.xhtml#l00062">arithmetic.h:62</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a2ddd6d121e1ab6fbe140fc3fb449cd96"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a2ddd6d121e1ab6fbe140fc3fb449cd96">scram::mef::Model::house_events</a></div><div class="ttdeci">const IdTable&lt; HouseEventPtr &gt; &amp; house_events() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00059">model.h:59</a></div></div>
<div class="ttc" id="fault__tree_8h_xhtml"><div class="ttname"><a href="fault__tree_8h.xhtml">fault_tree.h</a></div><div class="ttdoc">Fault Tree and Component containers. </div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a52dd79392036c36ac613f6d6fe21c592"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a52dd79392036c36ac613f6d6fe21c592">scram::mef::Model::AddFaultTree</a></div><div class="ttdeci">void AddFaultTree(FaultTreePtr fault_tree)</div><div class="ttdoc">Adds a fault tree into the model container. </div><div class="ttdef"><b>Definition:</b> <a href="model_8cc_source.xhtml#l00030">model.cc:30</a></div></div>
<div class="ttc" id="element_8h_xhtml"><div class="ttname"><a href="element_8h.xhtml">element.h</a></div><div class="ttdoc">Helper classes, structs, and properties common to all other classes. </div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_ab2c529b0b484653d9834b2357a3232db"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#ab2c529b0b484653d9834b2357a3232db">scram::mef::Model::AddBasicEvent</a></div><div class="ttdeci">void AddBasicEvent(const BasicEventPtr &amp;basic_event)</div><div class="ttdoc">Adds a basic event that is used in this model. </div><div class="ttdef"><b>Definition:</b> <a href="model_8cc_source.xhtml#l00051">model.cc:51</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a9cc591bf6c40805064ea0a9ec0c453c7"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a9cc591bf6c40805064ea0a9ec0c453c7">scram::mef::Model::Model</a></div><div class="ttdeci">Model(std::string name=&quot;&quot;)</div><div class="ttdoc">Creates a model container. </div><div class="ttdef"><b>Definition:</b> <a href="model_8cc_source.xhtml#l00028">model.cc:28</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_ae7266a6fb9b501538885c208dfc934f6"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#ae7266a6fb9b501538885c208dfc934f6">scram::mef::Model::BindEvent</a></div><div class="ttdeci">void BindEvent(const std::string &amp;entity_reference, const std::string &amp;base_path, Formula *formula)</div><div class="ttdoc">Binds a formula with its argument event. </div><div class="ttdef"><b>Definition:</b> <a href="model_8cc_source.xhtml#l00125">model.cc:125</a></div></div>
<div class="ttc" id="event_8h_xhtml_a04cb31142e9883483951cba3ab63b597"><div class="ttname"><a href="event_8h.xhtml#a04cb31142e9883483951cba3ab63b597">scram::mef::GatePtr</a></div><div class="ttdeci">std::shared_ptr&lt; Gate &gt; GatePtr</div><div class="ttdoc">Shared gates in models. </div><div class="ttdef"><b>Definition:</b> <a href="event_8h_source.xhtml#l00115">event.h:115</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a698156baa445c530089d57601e19bb35"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a698156baa445c530089d57601e19bb35">scram::mef::Model::parameters</a></div><div class="ttdeci">const IdTable&lt; ParameterPtr &gt; &amp; parameters() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00056">model.h:56</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_ab67ee068ec7f783c7b3c573270cf4fdb"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#ab67ee068ec7f783c7b3c573270cf4fdb">scram::mef::Model::gates</a></div><div class="ttdeci">const IdTable&lt; GatePtr &gt; &amp; gates() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00065">model.h:65</a></div></div>
<div class="ttc" id="element_8h_xhtml_a850003eb778bdded85c40e3b3a02e50b"><div class="ttname"><a href="element_8h.xhtml#a850003eb778bdded85c40e3b3a02e50b">scram::mef::IdTable</a></div><div class="ttdeci">boost::multi_index_container&lt; T, boost::multi_index::indexed_by&lt; boost::multi_index::hashed_unique&lt; boost::multi_index::const_mem_fun&lt; Id, const std::string &amp;,&amp;Id::id &gt;&gt;&gt;&gt; IdTable</div><div class="ttdoc">Table of elements with unique ids. </div><div class="ttdef"><b>Definition:</b> <a href="element_8h_source.xhtml#l00202">element.h:202</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_ae2080e08c0fd0137e57a29830d1b9cdc"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#ae2080e08c0fd0137e57a29830d1b9cdc">scram::mef::Model::AddParameter</a></div><div class="ttdeci">void AddParameter(const ParameterPtr &amp;parameter)</div><div class="ttdoc">Adds a parameter that is used in this model&amp;#39;s expressions. </div><div class="ttdef"><b>Definition:</b> <a href="model_8cc_source.xhtml#l00037">model.cc:37</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_ae9c29a5358f8c38ba1ea4d5990c112e0"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#ae9c29a5358f8c38ba1ea4d5990c112e0">scram::mef::Model::AddGate</a></div><div class="ttdeci">void AddGate(const GatePtr &amp;gate)</div><div class="ttdoc">Adds a gate that is used in this model&amp;#39;s fault trees or components. </div><div class="ttdef"><b>Definition:</b> <a href="model_8cc_source.xhtml#l00059">model.cc:59</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_aa071b5b312ba998375a246d516c2d234"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#aa071b5b312ba998375a246d516c2d234">scram::mef::Model::AddCcfGroup</a></div><div class="ttdeci">void AddCcfGroup(const CcfGroupPtr &amp;ccf_group)</div><div class="ttdoc">Adds a CCF group that is used in this model&amp;#39;s fault trees. </div><div class="ttdef"><b>Definition:</b> <a href="model_8cc_source.xhtml#l00067">model.cc:67</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a0ccac47c51f11484aed5e7cf3bdd73dd"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a0ccac47c51f11484aed5e7cf3bdd73dd">scram::mef::Model::GetParameter</a></div><div class="ttdeci">ParameterPtr GetParameter(const std::string &amp;entity_reference, const std::string &amp;base_path)</div><div class="ttdoc">Finds an entity (parameter, basic and house event, gate) from a reference. </div><div class="ttdef"><b>Definition:</b> <a href="model_8cc_source.xhtml#l00073">model.cc:73</a></div></div>
<div class="ttc" id="event_8h_xhtml"><div class="ttname"><a href="event_8h.xhtml">event.h</a></div><div class="ttdoc">Contains event classes for fault trees. </div></div>
<div class="ttc" id="fault__tree_8h_xhtml_a8538f816ccf630916e93bd1432fa07d6"><div class="ttname"><a href="fault__tree_8h.xhtml#a8538f816ccf630916e93bd1432fa07d6">scram::mef::FaultTreePtr</a></div><div class="ttdeci">std::unique_ptr&lt; FaultTree &gt; FaultTreePtr</div><div class="ttdoc">Unique trees in models. </div><div class="ttdef"><b>Definition:</b> <a href="fault__tree_8h_source.xhtml#l00200">fault_tree.h:200</a></div></div>
<div class="ttc" id="parameter_8h_xhtml_ad02b8dbf956c6c94b34ce9a703d7b408"><div class="ttname"><a href="parameter_8h.xhtml#ad02b8dbf956c6c94b34ce9a703d7b408">scram::mef::ParameterPtr</a></div><div class="ttdeci">std::shared_ptr&lt; Parameter &gt; ParameterPtr</div><div class="ttdoc">Shared parameters. </div><div class="ttdef"><b>Definition:</b> <a href="parameter_8h_source.xhtml#l00088">parameter.h:88</a></div></div>
<div class="ttc" id="element_8h_xhtml_a34a172bfae7e234836f4ca9cc55a193d"><div class="ttname"><a href="element_8h.xhtml#a34a172bfae7e234836f4ca9cc55a193d">scram::mef::GetFullPath</a></div><div class="ttdeci">std::string GetFullPath(const T &amp;element)</div><div class="ttdoc">Computes the full path of an element. </div><div class="ttdef"><b>Definition:</b> <a href="element_8h_source.xhtml#l00168">element.h:168</a></div></div>
<div class="ttc" id="namespacescram_xhtml"><div class="ttname"><a href="namespacescram.xhtml">scram</a></div><div class="ttdef"><b>Definition:</b> <a href="analysis_8cc_source.xhtml#l00023">analysis.cc:23</a></div></div>
<div class="ttc" id="event_8h_xhtml_a4ebd6466b2d3ea77c0780af19d75adb9"><div class="ttname"><a href="event_8h.xhtml#a4ebd6466b2d3ea77c0780af19d75adb9">scram::mef::HouseEventPtr</a></div><div class="ttdeci">std::shared_ptr&lt; HouseEvent &gt; HouseEventPtr</div><div class="ttdoc">Shared house events. </div><div class="ttdef"><b>Definition:</b> <a href="event_8h_source.xhtml#l00253">event.h:253</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml">scram::mef::Model</a></div><div class="ttdoc">This class represents a risk analysis model. </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00044">model.h:44</a></div></div>
<div class="ttc" id="event_8h_xhtml_a014b1b08212f876b5f342bb4b52e3d39"><div class="ttname"><a href="event_8h.xhtml#a014b1b08212f876b5f342bb4b52e3d39">scram::mef::BasicEventPtr</a></div><div class="ttdeci">std::shared_ptr&lt; BasicEvent &gt; BasicEventPtr</div><div class="ttdoc">Shared basic events. </div><div class="ttdef"><b>Definition:</b> <a href="event_8h_source.xhtml#l00254">event.h:254</a></div></div>
<div class="ttc" id="element_8h_xhtml_ab162a6f742c23405f33db706d5a927b4"><div class="ttname"><a href="element_8h.xhtml#ab162a6f742c23405f33db706d5a927b4">scram::mef::ElementTable</a></div><div class="ttdeci">boost::multi_index_container&lt; T, boost::multi_index::indexed_by&lt; boost::multi_index::hashed_unique&lt; boost::multi_index::const_mem_fun&lt; Element, const std::string &amp;,&amp;Element::name &gt;&gt;&gt;&gt; ElementTable</div><div class="ttdoc">Table of elements with unique names. </div><div class="ttdef"><b>Definition:</b> <a href="element_8h_source.xhtml#l00124">element.h:124</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_ac100f59b5e4163a617b5d3b893afd3f9"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#ac100f59b5e4163a617b5d3b893afd3f9">scram::mef::Model::GetGate</a></div><div class="ttdeci">GatePtr GetGate(const std::string &amp;entity_reference, const std::string &amp;base_path)</div><div class="ttdoc">Finds an entity (parameter, basic and house event, gate) from a reference. </div><div class="ttdef"><b>Definition:</b> <a href="model_8cc_source.xhtml#l00088">model.cc:88</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a1a68e09d766974684ee5a15a7c9572ec"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a1a68e09d766974684ee5a15a7c9572ec">scram::mef::Model::AddHouseEvent</a></div><div class="ttdeci">void AddHouseEvent(const HouseEventPtr &amp;house_event)</div><div class="ttdoc">Adds a house event that is used in this model. </div><div class="ttdef"><b>Definition:</b> <a href="model_8cc_source.xhtml#l00043">model.cc:43</a></div></div>
<div class="ttc" id="ccf__group_8h_xhtml_a2736f823d103bed2d002c9ce6f0c217c"><div class="ttname"><a href="ccf__group_8h.xhtml#a2736f823d103bed2d002c9ce6f0c217c">scram::mef::CcfGroupPtr</a></div><div class="ttdeci">std::shared_ptr&lt; CcfGroup &gt; CcfGroupPtr</div><div class="ttdoc">Shared CCF groups. </div><div class="ttdef"><b>Definition:</b> <a href="ccf__group_8h_source.xhtml#l00164">ccf_group.h:164</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Element_xhtml_adb401e2ca84aa98cb60797bec2500a81"><div class="ttname"><a href="classscram_1_1mef_1_1Element.xhtml#adb401e2ca84aa98cb60797bec2500a81">scram::mef::Element::name</a></div><div class="ttdeci">const std::string &amp; name() const </div><div class="ttdef"><b>Definition:</b> <a href="element_8h_source.xhtml#l00062">element.h:62</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Element_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1Element.xhtml">scram::mef::Element</a></div><div class="ttdoc">Mixin class that represents any element of analysis that can have extra descriptions, such as attributes and a label. </div><div class="ttdef"><b>Definition:</b> <a href="element_8h_source.xhtml#l00048">element.h:48</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_ada7804d62fc594bff7b080c680586209"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#ada7804d62fc594bff7b080c680586209">scram::mef::Model::basic_events</a></div><div class="ttdeci">const IdTable&lt; BasicEventPtr &gt; &amp; basic_events() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00062">model.h:62</a></div></div>
<div class="ttc" id="ccf__group_8h_xhtml"><div class="ttname"><a href="ccf__group_8h.xhtml">ccf_group.h</a></div><div class="ttdoc">Functional containers for basic events grouped by common cause failure. </div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a9bac9a7746026484f3dc69a3ccb2ac4a"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a9bac9a7746026484f3dc69a3ccb2ac4a">scram::mef::Model::fault_trees</a></div><div class="ttdeci">const ElementTable&lt; FaultTreePtr &gt; &amp; fault_trees() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00055">model.h:55</a></div></div>
<div class="ttc" id="parameter_8h_xhtml"><div class="ttname"><a href="parameter_8h.xhtml">parameter.h</a></div><div class="ttdoc">Parameter expressions that act like a shareable variable. </div></div>
<div class="ttc" id="classscram_1_1mef_1_1Model_xhtml_a5c8b03561207b374fc06dd61c0cf3ace"><div class="ttname"><a href="classscram_1_1mef_1_1Model.xhtml#a5c8b03561207b374fc06dd61c0cf3ace">scram::mef::Model::ccf_groups</a></div><div class="ttdeci">const IdTable&lt; CcfGroupPtr &gt; &amp; ccf_groups() const </div><div class="ttdef"><b>Definition:</b> <a href="model_8h_source.xhtml#l00066">model.h:66</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Dec 12 2016 00:21:14 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
