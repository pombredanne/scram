<!-- HTML header for doxygen 1.8.11-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="robots" content="noindex, nofollow"/>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>exponential.cc Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="scram_blue.png"/></td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_eacaf28dc2715349d1b93fdb7927a3cb.xhtml">expression</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">exponential.cc</div>  </div>
</div><!--header-->
<div class="contents">
<a href="exponential_8cc.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (C) 2014-2016 Olzhas Rakhimov</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * the Free Software Foundation; either version 3 of the License, or</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * (at your option) any later version.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * GNU General Public License for more details.</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">/// @file exponential.cc</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">/// Implementation of various exponential expressions.</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="exponential_8h.xhtml">exponential.h</a>&quot;</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="error_8h.xhtml">src/error.h</a>&quot;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacescram.xhtml">scram</a> {</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">namespace </span>mef {</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1ExponentialExpression.xhtml#a73c12893dfea9846ec23d38fbad57386">   28</a></span>&#160;<a class="code" href="classscram_1_1mef_1_1ExponentialExpression.xhtml#a73c12893dfea9846ec23d38fbad57386">ExponentialExpression::ExponentialExpression</a>(<span class="keyword">const</span> <a class="code" href="expression_8h.xhtml#a1834910c86a27726923fb285f73cd839">ExpressionPtr</a>&amp; lambda,</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;                                             <span class="keyword">const</span> <a class="code" href="expression_8h.xhtml#a1834910c86a27726923fb285f73cd839">ExpressionPtr</a>&amp; t)</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    : <a class="code" href="classscram_1_1mef_1_1Expression.xhtml">Expression</a>({lambda, t}),</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;      lambda_(*lambda),</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;      time_(*t) {}</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1ExponentialExpression.xhtml#a9780ad4bfee039cdb147a4f3cc4a4823">   34</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1ExponentialExpression.xhtml#a9780ad4bfee039cdb147a4f3cc4a4823">ExponentialExpression::Validate</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  <span class="keywordflow">if</span> (lambda_.<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#ac7e0dd118eafdfa943944172c1625a4e">Mean</a>() &lt; 0) {</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <span class="keywordflow">throw</span> <a class="code" href="structscram_1_1InvalidArgument.xhtml">InvalidArgument</a>(<span class="stringliteral">&quot;The rate of failure cannot be negative.&quot;</span>);</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (time_.<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#ac7e0dd118eafdfa943944172c1625a4e">Mean</a>() &lt; 0) {</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keywordflow">throw</span> <a class="code" href="structscram_1_1InvalidArgument.xhtml">InvalidArgument</a>(<span class="stringliteral">&quot;The mission time cannot be negative.&quot;</span>);</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (lambda_.<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#a9601745b7f61ec67c8074a4043367152">Min</a>() &lt; 0) {</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="keywordflow">throw</span> <a class="code" href="structscram_1_1InvalidArgument.xhtml">InvalidArgument</a>(<span class="stringliteral">&quot;The sampled rate of failure cannot be negative.&quot;</span>);</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (time_.<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#a9601745b7f61ec67c8074a4043367152">Min</a>() &lt; 0) {</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keywordflow">throw</span> <a class="code" href="structscram_1_1InvalidArgument.xhtml">InvalidArgument</a>(<span class="stringliteral">&quot;The sampled mission time cannot be negative.&quot;</span>);</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  }</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;}</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1GlmExpression.xhtml#a1bec2390177b418772f3782241f7d2d1">   46</a></span>&#160;<a class="code" href="classscram_1_1mef_1_1GlmExpression.xhtml#a1bec2390177b418772f3782241f7d2d1">GlmExpression::GlmExpression</a>(<span class="keyword">const</span> <a class="code" href="expression_8h.xhtml#a1834910c86a27726923fb285f73cd839">ExpressionPtr</a>&amp; gamma,</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                             <span class="keyword">const</span> <a class="code" href="expression_8h.xhtml#a1834910c86a27726923fb285f73cd839">ExpressionPtr</a>&amp; lambda,</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                             <span class="keyword">const</span> <a class="code" href="expression_8h.xhtml#a1834910c86a27726923fb285f73cd839">ExpressionPtr</a>&amp; mu,</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                             <span class="keyword">const</span> <a class="code" href="expression_8h.xhtml#a1834910c86a27726923fb285f73cd839">ExpressionPtr</a>&amp; t)</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    : <a class="code" href="classscram_1_1mef_1_1Expression.xhtml">Expression</a>({gamma, lambda, mu, t}),</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;      gamma_(*gamma),</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;      lambda_(*lambda),</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;      mu_(*mu),</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;      time_(*t) {}</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1GlmExpression.xhtml#a1b309aac9f4156cb3c54735b8f7528cd">   56</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1GlmExpression.xhtml#a1b309aac9f4156cb3c54735b8f7528cd">GlmExpression::Validate</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  <span class="keywordflow">if</span> (lambda_.<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#ac7e0dd118eafdfa943944172c1625a4e">Mean</a>() &lt; 0) {</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keywordflow">throw</span> <a class="code" href="structscram_1_1InvalidArgument.xhtml">InvalidArgument</a>(<span class="stringliteral">&quot;The rate of failure cannot be negative.&quot;</span>);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (mu_.<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#ac7e0dd118eafdfa943944172c1625a4e">Mean</a>() &lt; 0) {</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keywordflow">throw</span> <a class="code" href="structscram_1_1InvalidArgument.xhtml">InvalidArgument</a>(<span class="stringliteral">&quot;The rate of repair cannot be negative.&quot;</span>);</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (gamma_.<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#ac7e0dd118eafdfa943944172c1625a4e">Mean</a>() &lt; 0 || gamma_.<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#ac7e0dd118eafdfa943944172c1625a4e">Mean</a>() &gt; 1) {</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keywordflow">throw</span> <a class="code" href="structscram_1_1InvalidArgument.xhtml">InvalidArgument</a>(<span class="stringliteral">&quot;Invalid value for probability.&quot;</span>);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (time_.<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#ac7e0dd118eafdfa943944172c1625a4e">Mean</a>() &lt; 0) {</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordflow">throw</span> <a class="code" href="structscram_1_1InvalidArgument.xhtml">InvalidArgument</a>(<span class="stringliteral">&quot;The mission time cannot be negative.&quot;</span>);</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (lambda_.<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#a9601745b7f61ec67c8074a4043367152">Min</a>() &lt; 0) {</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordflow">throw</span> <a class="code" href="structscram_1_1InvalidArgument.xhtml">InvalidArgument</a>(<span class="stringliteral">&quot;The sampled rate of failure cannot be negative.&quot;</span>);</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (mu_.<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#a9601745b7f61ec67c8074a4043367152">Min</a>() &lt; 0) {</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keywordflow">throw</span> <a class="code" href="structscram_1_1InvalidArgument.xhtml">InvalidArgument</a>(<span class="stringliteral">&quot;The sampled rate of repair cannot be negative.&quot;</span>);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (gamma_.<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#a9601745b7f61ec67c8074a4043367152">Min</a>() &lt; 0 || gamma_.<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#a6b2d7f3d3abf98002c8cccee426edecc">Max</a>() &gt; 1) {</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordflow">throw</span> <a class="code" href="structscram_1_1InvalidArgument.xhtml">InvalidArgument</a>(<span class="stringliteral">&quot;Invalid sampled gamma value for probability.&quot;</span>);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (time_.<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#a9601745b7f61ec67c8074a4043367152">Min</a>() &lt; 0) {</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordflow">throw</span> <a class="code" href="structscram_1_1InvalidArgument.xhtml">InvalidArgument</a>(<span class="stringliteral">&quot;The sampled mission time cannot be negative.&quot;</span>);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  }</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;}</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1GlmExpression.xhtml#a8ee502d7486c54d01114f6705998eacb">   76</a></span>&#160;<span class="keywordtype">double</span> <a class="code" href="classscram_1_1mef_1_1GlmExpression.xhtml#a8ee502d7486c54d01114f6705998eacb">GlmExpression::Mean</a>() noexcept {</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  <span class="keywordflow">return</span> Compute(gamma_.<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#ac7e0dd118eafdfa943944172c1625a4e">Mean</a>(), lambda_.<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#ac7e0dd118eafdfa943944172c1625a4e">Mean</a>(), mu_.<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#ac7e0dd118eafdfa943944172c1625a4e">Mean</a>(), time_.<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#ac7e0dd118eafdfa943944172c1625a4e">Mean</a>());</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;}</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="keywordtype">double</span> GlmExpression::GetSample() noexcept {</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  <span class="keywordflow">return</span> Compute(gamma_.<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#a5cf00d8b2ff843ad029a501a89ee572a">Sample</a>(), lambda_.<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#a5cf00d8b2ff843ad029a501a89ee572a">Sample</a>(), mu_.<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#a5cf00d8b2ff843ad029a501a89ee572a">Sample</a>(),</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                 time_.<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#a5cf00d8b2ff843ad029a501a89ee572a">Sample</a>());</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;}</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="keywordtype">double</span> GlmExpression::Compute(<span class="keywordtype">double</span> gamma, <span class="keywordtype">double</span> lambda, <span class="keywordtype">double</span> mu,</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                              <span class="keywordtype">double</span> time) noexcept {</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  <span class="keywordtype">double</span> r = lambda + mu;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  <span class="keywordflow">return</span> (lambda - (lambda - gamma * r) * std::exp(-r * time)) / r;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;}</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1WeibullExpression.xhtml#a08ce985ec333dc8c2e6c23a00ead88c0">   91</a></span>&#160;<a class="code" href="classscram_1_1mef_1_1WeibullExpression.xhtml#a08ce985ec333dc8c2e6c23a00ead88c0">WeibullExpression::WeibullExpression</a>(<span class="keyword">const</span> <a class="code" href="expression_8h.xhtml#a1834910c86a27726923fb285f73cd839">ExpressionPtr</a>&amp; alpha,</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                                     <span class="keyword">const</span> <a class="code" href="expression_8h.xhtml#a1834910c86a27726923fb285f73cd839">ExpressionPtr</a>&amp; beta,</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                                     <span class="keyword">const</span> <a class="code" href="expression_8h.xhtml#a1834910c86a27726923fb285f73cd839">ExpressionPtr</a>&amp; t0,</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                                     <span class="keyword">const</span> <a class="code" href="expression_8h.xhtml#a1834910c86a27726923fb285f73cd839">ExpressionPtr</a>&amp; time)</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    : <a class="code" href="classscram_1_1mef_1_1Expression.xhtml">Expression</a>({alpha, beta, t0, time}),</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;      alpha_(*alpha),</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;      beta_(*beta),</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;      t0_(*t0),</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;      time_(*time) {}</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1WeibullExpression.xhtml#a59851c3a89342bf4fe6518fa8414fac1">  101</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1WeibullExpression.xhtml#a59851c3a89342bf4fe6518fa8414fac1">WeibullExpression::Validate</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  <span class="keywordflow">if</span> (alpha_.<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#ac7e0dd118eafdfa943944172c1625a4e">Mean</a>() &lt;= 0) {</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keywordflow">throw</span> <a class="code" href="structscram_1_1InvalidArgument.xhtml">InvalidArgument</a>(<span class="stringliteral">&quot;The scale parameter for Weibull distribution must&quot;</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                          <span class="stringliteral">&quot; be positive.&quot;</span>);</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (beta_.<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#ac7e0dd118eafdfa943944172c1625a4e">Mean</a>() &lt;= 0) {</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keywordflow">throw</span> <a class="code" href="structscram_1_1InvalidArgument.xhtml">InvalidArgument</a>(<span class="stringliteral">&quot;The shape parameter for Weibull distribution must&quot;</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                          <span class="stringliteral">&quot; be positive.&quot;</span>);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (t0_.<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#ac7e0dd118eafdfa943944172c1625a4e">Mean</a>() &lt; 0) {</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keywordflow">throw</span> <a class="code" href="structscram_1_1InvalidArgument.xhtml">InvalidArgument</a>(<span class="stringliteral">&quot;Invalid value for time shift.&quot;</span>);</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (time_.<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#ac7e0dd118eafdfa943944172c1625a4e">Mean</a>() &lt; 0) {</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keywordflow">throw</span> <a class="code" href="structscram_1_1InvalidArgument.xhtml">InvalidArgument</a>(<span class="stringliteral">&quot;The mission time cannot be negative.&quot;</span>);</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (time_.<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#ac7e0dd118eafdfa943944172c1625a4e">Mean</a>() &lt; t0_.<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#ac7e0dd118eafdfa943944172c1625a4e">Mean</a>()) {</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keywordflow">throw</span> <a class="code" href="structscram_1_1InvalidArgument.xhtml">InvalidArgument</a>(<span class="stringliteral">&quot;The mission time must be longer than time shift.&quot;</span>);</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (alpha_.<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#a9601745b7f61ec67c8074a4043367152">Min</a>() &lt;= 0) {</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordflow">throw</span> <a class="code" href="structscram_1_1InvalidArgument.xhtml">InvalidArgument</a>(<span class="stringliteral">&quot;The scale parameter for Weibull distribution must&quot;</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                          <span class="stringliteral">&quot; be positive for sampled values.&quot;</span>);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (beta_.<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#a9601745b7f61ec67c8074a4043367152">Min</a>() &lt;= 0) {</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keywordflow">throw</span> <a class="code" href="structscram_1_1InvalidArgument.xhtml">InvalidArgument</a>(<span class="stringliteral">&quot;The shape parameter for Weibull distribution must&quot;</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                          <span class="stringliteral">&quot; be positive for sampled values.&quot;</span>);</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (t0_.<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#a9601745b7f61ec67c8074a4043367152">Min</a>() &lt; 0) {</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordflow">throw</span> <a class="code" href="structscram_1_1InvalidArgument.xhtml">InvalidArgument</a>(<span class="stringliteral">&quot;Invalid value for time shift in sampled values.&quot;</span>);</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (time_.<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#a9601745b7f61ec67c8074a4043367152">Min</a>() &lt; 0) {</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keywordflow">throw</span> <a class="code" href="structscram_1_1InvalidArgument.xhtml">InvalidArgument</a>(<span class="stringliteral">&quot;The sampled mission time cannot be negative.&quot;</span>);</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (time_.<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#a9601745b7f61ec67c8074a4043367152">Min</a>() &lt; t0_.<a class="code" href="classscram_1_1mef_1_1Expression.xhtml#a6b2d7f3d3abf98002c8cccee426edecc">Max</a>()) {</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keywordflow">throw</span> <a class="code" href="structscram_1_1InvalidArgument.xhtml">InvalidArgument</a>(<span class="stringliteral">&quot;The sampled mission time must be&quot;</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                          <span class="stringliteral">&quot; longer than time shift.&quot;</span>);</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  }</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;}</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="keywordtype">double</span> WeibullExpression::Compute(<span class="keywordtype">double</span> alpha, <span class="keywordtype">double</span> beta,</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                                  <span class="keywordtype">double</span> t0, <span class="keywordtype">double</span> time) noexcept {</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  <span class="keywordflow">return</span> 1 - std::exp(-std::pow((time - t0) / alpha, beta));</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;}</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;}  <span class="comment">// namespace mef</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;}  <span class="comment">// namespace scram</span></div><div class="ttc" id="classscram_1_1mef_1_1Expression_xhtml_ac7e0dd118eafdfa943944172c1625a4e"><div class="ttname"><a href="classscram_1_1mef_1_1Expression.xhtml#ac7e0dd118eafdfa943944172c1625a4e">scram::mef::Expression::Mean</a></div><div class="ttdeci">virtual double Mean() noexcept=0</div></div>
<div class="ttc" id="error_8h_xhtml"><div class="ttname"><a href="error_8h.xhtml">error.h</a></div><div class="ttdoc">Exceptions for SCRAM. </div></div>
<div class="ttc" id="expression_8h_xhtml_a1834910c86a27726923fb285f73cd839"><div class="ttname"><a href="expression_8h.xhtml#a1834910c86a27726923fb285f73cd839">scram::mef::ExpressionPtr</a></div><div class="ttdeci">std::shared_ptr&lt; Expression &gt; ExpressionPtr</div><div class="ttdoc">Shared expressions. </div><div class="ttdef"><b>Definition:</b> <a href="expression_8h_source.xhtml#l00038">expression.h:38</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1WeibullExpression_xhtml_a08ce985ec333dc8c2e6c23a00ead88c0"><div class="ttname"><a href="classscram_1_1mef_1_1WeibullExpression.xhtml#a08ce985ec333dc8c2e6c23a00ead88c0">scram::mef::WeibullExpression::WeibullExpression</a></div><div class="ttdeci">WeibullExpression(const ExpressionPtr &amp;alpha, const ExpressionPtr &amp;beta, const ExpressionPtr &amp;t0, const ExpressionPtr &amp;time)</div><div class="ttdoc">Constructor for Weibull distribution. </div><div class="ttdef"><b>Definition:</b> <a href="exponential_8cc_source.xhtml#l00091">exponential.cc:91</a></div></div>
<div class="ttc" id="exponential_8h_xhtml"><div class="ttname"><a href="exponential_8h.xhtml">exponential.h</a></div><div class="ttdoc">Expressions and distributions that are described with exponential formulas. </div></div>
<div class="ttc" id="classscram_1_1mef_1_1Expression_xhtml_a6b2d7f3d3abf98002c8cccee426edecc"><div class="ttname"><a href="classscram_1_1mef_1_1Expression.xhtml#a6b2d7f3d3abf98002c8cccee426edecc">scram::mef::Expression::Max</a></div><div class="ttdeci">virtual double Max() noexcept</div><div class="ttdef"><b>Definition:</b> <a href="expression_8h_source.xhtml#l00113">expression.h:113</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1GlmExpression_xhtml_a1b309aac9f4156cb3c54735b8f7528cd"><div class="ttname"><a href="classscram_1_1mef_1_1GlmExpression.xhtml#a1b309aac9f4156cb3c54735b8f7528cd">scram::mef::GlmExpression::Validate</a></div><div class="ttdeci">void Validate() const override</div><div class="ttdoc">Validates the expression. </div><div class="ttdef"><b>Definition:</b> <a href="exponential_8cc_source.xhtml#l00056">exponential.cc:56</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Expression_xhtml_a9601745b7f61ec67c8074a4043367152"><div class="ttname"><a href="classscram_1_1mef_1_1Expression.xhtml#a9601745b7f61ec67c8074a4043367152">scram::mef::Expression::Min</a></div><div class="ttdeci">virtual double Min() noexcept</div><div class="ttdef"><b>Definition:</b> <a href="expression_8h_source.xhtml#l00116">expression.h:116</a></div></div>
<div class="ttc" id="namespacescram_xhtml"><div class="ttname"><a href="namespacescram.xhtml">scram</a></div><div class="ttdef"><b>Definition:</b> <a href="analysis_8cc_source.xhtml#l00023">analysis.cc:23</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1ExponentialExpression_xhtml_a73c12893dfea9846ec23d38fbad57386"><div class="ttname"><a href="classscram_1_1mef_1_1ExponentialExpression.xhtml#a73c12893dfea9846ec23d38fbad57386">scram::mef::ExponentialExpression::ExponentialExpression</a></div><div class="ttdeci">ExponentialExpression(const ExpressionPtr &amp;lambda, const ExpressionPtr &amp;t)</div><div class="ttdoc">Constructor for exponential expression with two arguments. </div><div class="ttdef"><b>Definition:</b> <a href="exponential_8cc_source.xhtml#l00028">exponential.cc:28</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1WeibullExpression_xhtml_a59851c3a89342bf4fe6518fa8414fac1"><div class="ttname"><a href="classscram_1_1mef_1_1WeibullExpression.xhtml#a59851c3a89342bf4fe6518fa8414fac1">scram::mef::WeibullExpression::Validate</a></div><div class="ttdeci">void Validate() const override</div><div class="ttdoc">Validates the expression. </div><div class="ttdef"><b>Definition:</b> <a href="exponential_8cc_source.xhtml#l00101">exponential.cc:101</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1ExponentialExpression_xhtml_a9780ad4bfee039cdb147a4f3cc4a4823"><div class="ttname"><a href="classscram_1_1mef_1_1ExponentialExpression.xhtml#a9780ad4bfee039cdb147a4f3cc4a4823">scram::mef::ExponentialExpression::Validate</a></div><div class="ttdeci">void Validate() const override</div><div class="ttdef"><b>Definition:</b> <a href="exponential_8cc_source.xhtml#l00034">exponential.cc:34</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1GlmExpression_xhtml_a8ee502d7486c54d01114f6705998eacb"><div class="ttname"><a href="classscram_1_1mef_1_1GlmExpression.xhtml#a8ee502d7486c54d01114f6705998eacb">scram::mef::GlmExpression::Mean</a></div><div class="ttdeci">double Mean() noexceptoverride</div><div class="ttdef"><b>Definition:</b> <a href="exponential_8cc_source.xhtml#l00076">exponential.cc:76</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1GlmExpression_xhtml_a1bec2390177b418772f3782241f7d2d1"><div class="ttname"><a href="classscram_1_1mef_1_1GlmExpression.xhtml#a1bec2390177b418772f3782241f7d2d1">scram::mef::GlmExpression::GlmExpression</a></div><div class="ttdeci">GlmExpression(const ExpressionPtr &amp;gamma, const ExpressionPtr &amp;lambda, const ExpressionPtr &amp;mu, const ExpressionPtr &amp;t)</div><div class="ttdoc">Constructor for GLM or exponential expression with four arguments. </div><div class="ttdef"><b>Definition:</b> <a href="exponential_8cc_source.xhtml#l00046">exponential.cc:46</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Expression_xhtml_a5cf00d8b2ff843ad029a501a89ee572a"><div class="ttname"><a href="classscram_1_1mef_1_1Expression.xhtml#a5cf00d8b2ff843ad029a501a89ee572a">scram::mef::Expression::Sample</a></div><div class="ttdeci">double Sample() noexcept</div><div class="ttdef"><b>Definition:</b> <a href="expression_8cc_source.xhtml#l00033">expression.cc:33</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Expression_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1Expression.xhtml">scram::mef::Expression</a></div><div class="ttdoc">Abstract base class for all sorts of expressions to describe events. </div><div class="ttdef"><b>Definition:</b> <a href="expression_8h_source.xhtml#l00049">expression.h:49</a></div></div>
<div class="ttc" id="structscram_1_1InvalidArgument_xhtml"><div class="ttname"><a href="structscram_1_1InvalidArgument.xhtml">scram::InvalidArgument</a></div><div class="ttdoc">This error class can be used to indicate unacceptable arguments. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00095">error.h:95</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Dec 12 2016 00:21:14 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
