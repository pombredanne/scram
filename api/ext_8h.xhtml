<!-- HTML header for doxygen 1.8.11-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="robots" content="noindex, nofollow"/>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>ext.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="scram_blue.png"/></td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">ext.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Helpful facilities as an extension to the standard library or Boost.  
<a href="#details">More...</a></p>
<div class="textblock"><code>#include &lt;algorithm&gt;</code><br />
<code>#include &lt;memory&gt;</code><br />
<code>#include &lt;boost/range/algorithm/find_if.hpp&gt;</code><br />
</div><div class="textblock"><div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Include dependency graph for ext.h:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="ext_8h__incl.svg" width="350" height="127"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><div class="textblock"><div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> This graph shows which files directly or indirectly include this file:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="ext_8h__dep__incl.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</div>
<p><a href="ext_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classext_1_1find__iterator.xhtml">ext::find_iterator&lt; Iterator &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Iterator adaptor for indication of container <code>find</code> call results.  <a href="classext_1_1find__iterator.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a3b6d72eb80b9e4abccf32fc5e7b2e941"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3b6d72eb80b9e4abccf32fc5e7b2e941"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ext_8h.xhtml#a3b6d72eb80b9e4abccf32fc5e7b2e941">CLANG_UNUSED_TYPEDEF_BUG</a>&#160;&#160;&#160;defined(__clang__) &amp;&amp; __clang_major__ == 3 &amp;&amp; __clang_minor__ == 8</td></tr>
<tr class="memdesc:a3b6d72eb80b9e4abccf32fc5e7b2e941"><td class="mdescLeft">&#160;</td><td class="mdescRight">False positive Clang warning in 3.8. <br /></td></tr>
<tr class="separator:a3b6d72eb80b9e4abccf32fc5e7b2e941"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a0b81572dc039f8f5ed86c00b900d8bbb"><td class="memTemplParams" colspan="2">template&lt;class T , typename... Ts&gt; </td></tr>
<tr class="memitem:a0b81572dc039f8f5ed86c00b900d8bbb"><td class="memTemplItemLeft" align="right" valign="top">auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="ext_8h.xhtml#a0b81572dc039f8f5ed86c00b900d8bbb">ext::find</a> (T &amp;&amp;container, Ts &amp;&amp;...args)</td></tr>
<tr class="memdesc:a0b81572dc039f8f5ed86c00b900d8bbb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Wraps <code><a class="el" href="ext_8h.xhtml#a0b81572dc039f8f5ed86c00b900d8bbb" title="Wraps container::find() calls for convenient and efficient lookup with find_iterator adaptor...">container::find()</a></code> calls for convenient and efficient lookup with <code><a class="el" href="classext_1_1find__iterator.xhtml" title="Iterator adaptor for indication of container find call results. ">find_iterator</a></code> adaptor.  <a href="ext_8h.xhtml#a0b81572dc039f8f5ed86c00b900d8bbb">More...</a><br /></td></tr>
<tr class="separator:a0b81572dc039f8f5ed86c00b900d8bbb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52096e70474db961592cde8373cac430"><td class="memTemplParams" colspan="2">template&lt;typename Iterator1 , typename Iterator2 &gt; </td></tr>
<tr class="memitem:a52096e70474db961592cde8373cac430"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="ext_8h.xhtml#a52096e70474db961592cde8373cac430">ext::intersects</a> (Iterator1 first1, Iterator1 last1, Iterator2 first2, Iterator2 last2) noexcept</td></tr>
<tr class="memdesc:a52096e70474db961592cde8373cac430"><td class="mdescLeft">&#160;</td><td class="mdescRight">Determines if two sorted ranges intersect.  <a href="ext_8h.xhtml#a52096e70474db961592cde8373cac430">More...</a><br /></td></tr>
<tr class="separator:a52096e70474db961592cde8373cac430"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66729e4d2288a1e14a84c97e6616e99f"><td class="memTemplParams" colspan="2"><a class="anchor" id="a66729e4d2288a1e14a84c97e6616e99f"></a>
template&lt;class SinglePassRange1 , class SinglePassRange2 &gt; </td></tr>
<tr class="memitem:a66729e4d2288a1e14a84c97e6616e99f"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="ext_8h.xhtml#a66729e4d2288a1e14a84c97e6616e99f">ext::intersects</a> (const SinglePassRange1 &amp;rng1, const SinglePassRange2 &amp;rng2)</td></tr>
<tr class="memdesc:a66729e4d2288a1e14a84c97e6616e99f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Range-based version of <code>intersects</code>. <br /></td></tr>
<tr class="separator:a66729e4d2288a1e14a84c97e6616e99f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa66037c1cd0624f9eadbde7de564f3db"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:aa66037c1cd0624f9eadbde7de564f3db"><td class="memTemplItemLeft" align="right" valign="top">auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="ext_8h.xhtml#aa66037c1cd0624f9eadbde7de564f3db">ext::make_unique</a> (T *dumb_handle)</td></tr>
<tr class="memdesc:aa66037c1cd0624f9eadbde7de564f3db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Passes an unmanaged resource to a smart pointer with automatic type deduction.  <a href="ext_8h.xhtml#aa66037c1cd0624f9eadbde7de564f3db">More...</a><br /></td></tr>
<tr class="separator:aa66037c1cd0624f9eadbde7de564f3db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:a1857fec242d989d7d5959a1f9b25cabd"><td class="memTemplParams" colspan="2"><a class="anchor" id="a1857fec242d989d7d5959a1f9b25cabd"></a>
template&lt;class SinglePassRange , class UnaryPredicate &gt; </td></tr>
<tr class="memitem:a1857fec242d989d7d5959a1f9b25cabd"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="ext_8h.xhtml#a1857fec242d989d7d5959a1f9b25cabd">ext::none_of</a> (const SinglePassRange &amp;rng, UnaryPredicate pred)</td></tr>
<tr class="memdesc:a1857fec242d989d7d5959a1f9b25cabd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Range-based versions of std algorithms missing in Boost. <br /></td></tr>
<tr class="separator:a1857fec242d989d7d5959a1f9b25cabd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee276d0584979a03cd83c61200b8f479"><td class="memTemplParams" colspan="2"><a class="anchor" id="aee276d0584979a03cd83c61200b8f479"></a>
template&lt;class SinglePassRange , class UnaryPredicate &gt; </td></tr>
<tr class="memitem:aee276d0584979a03cd83c61200b8f479"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="ext_8h.xhtml#aee276d0584979a03cd83c61200b8f479">ext::any_of</a> (const SinglePassRange &amp;rng, UnaryPredicate pred)</td></tr>
<tr class="memdesc:aee276d0584979a03cd83c61200b8f479"><td class="mdescLeft">&#160;</td><td class="mdescRight">Range-based versions of std algorithms missing in Boost. <br /></td></tr>
<tr class="separator:aee276d0584979a03cd83c61200b8f479"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a044e582f96ad79517a906f618c2be346"><td class="memTemplParams" colspan="2"><a class="anchor" id="a044e582f96ad79517a906f618c2be346"></a>
template&lt;class SinglePassRange , class UnaryPredicate &gt; </td></tr>
<tr class="memitem:a044e582f96ad79517a906f618c2be346"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="ext_8h.xhtml#a044e582f96ad79517a906f618c2be346">ext::all_of</a> (const SinglePassRange &amp;rng, UnaryPredicate pred)</td></tr>
<tr class="memdesc:a044e582f96ad79517a906f618c2be346"><td class="mdescLeft">&#160;</td><td class="mdescRight">Range-based versions of std algorithms missing in Boost. <br /></td></tr>
<tr class="separator:a044e582f96ad79517a906f618c2be346"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Helpful facilities as an extension to the standard library or Boost. </p>

<p>Definition in file <a class="el" href="ext_8h_source.xhtml">ext.h</a>.</p>
</div><h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="file_a0b81572dc039f8f5ed86c00b900d8bbb"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , typename... Ts&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">auto ext::find </td>
          <td>(</td>
          <td class="paramtype">T &amp;&amp;&#160;</td>
          <td class="paramname"><em>container</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Ts &amp;&amp;...&#160;</td>
          <td class="paramname"><em>args</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Wraps <code><a class="el" href="ext_8h.xhtml#a0b81572dc039f8f5ed86c00b900d8bbb" title="Wraps container::find() calls for convenient and efficient lookup with find_iterator adaptor...">container::find()</a></code> calls for convenient and efficient lookup with <code><a class="el" href="classext_1_1find__iterator.xhtml" title="Iterator adaptor for indication of container find call results. ">find_iterator</a></code> adaptor. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">T</td><td>Container type supporting <code><a class="el" href="ext_8h.xhtml#a0b81572dc039f8f5ed86c00b900d8bbb" title="Wraps container::find() calls for convenient and efficient lookup with find_iterator adaptor...">find()</a></code> and <code><a class="el" href="boolean__graph_8cc.xhtml#a7cdc73646f3e8e6c275b892bc7e615fb" title="The end of the formula string. ">end()</a></code> calls. </td></tr>
    <tr><td class="paramname">Ts</td><td>The argument types to the <code><a class="el" href="ext_8h.xhtml#a0b81572dc039f8f5ed86c00b900d8bbb" title="Wraps container::find() calls for convenient and efficient lookup with find_iterator adaptor...">find()</a></code> call.</td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">container</td><td>The container to operate upon. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">args</td><td>Arguments to the <code><a class="el" href="ext_8h.xhtml#a0b81572dc039f8f5ed86c00b900d8bbb" title="Wraps container::find() calls for convenient and efficient lookup with find_iterator adaptor...">find()</a></code> function.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classext_1_1find__iterator.xhtml" title="Iterator adaptor for indication of container find call results. ">find_iterator</a> wrapping the resultant iterator. </dd></dl>

<p>Definition at line <a class="el" href="ext_8h_source.xhtml#l00064">64</a> of file <a class="el" href="ext_8h_source.xhtml">ext.h</a>.</p>

<p>References <a class="el" href="ext_8h_source.xhtml#l00064">ext::find()</a>.</p>

<p>Referenced by <a class="el" href="ext_8h_source.xhtml#l00064">ext::find()</a>.</p>

<p><div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="ext_8h_a0b81572dc039f8f5ed86c00b900d8bbb_cgraph.svg" width="80" height="62"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

<p><div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="ext_8h_a0b81572dc039f8f5ed86c00b900d8bbb_icgraph.svg" width="80" height="62"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="file_a52096e70474db961592cde8373cac430"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Iterator1 , typename Iterator2 &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool ext::intersects </td>
          <td>(</td>
          <td class="paramtype">Iterator1&#160;</td>
          <td class="paramname"><em>first1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Iterator1&#160;</td>
          <td class="paramname"><em>last1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Iterator2&#160;</td>
          <td class="paramname"><em>first2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Iterator2&#160;</td>
          <td class="paramname"><em>last2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Determines if two sorted ranges intersect. </p>
<p>This function is complementary to std::set_intersection when the actual intersection container is not needed.</p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">Iterator1</td><td>Forward iterator type of the first range. </td></tr>
    <tr><td class="paramname">Iterator2</td><td>Forward iterator type of the second range.</td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">first1</td><td>Start of the first range. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">last1</td><td>End of the first range. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">first2</td><td>Start of the second range. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">last2</td><td>End of the second range.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if the [first1, last1) and [first2, last2) ranges intersect. </dd></dl>

<p>Definition at line <a class="el" href="ext_8h_source.xhtml#l00083">83</a> of file <a class="el" href="ext_8h_source.xhtml">ext.h</a>.</p>

<p>References <a class="el" href="ext_8h_source.xhtml#l00083">ext::intersects()</a>.</p>

<p>Referenced by <a class="el" href="ext_8h_source.xhtml#l00083">ext::intersects()</a>.</p>

<p><div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="ext_8h_a52096e70474db961592cde8373cac430_cgraph.svg" width="116" height="62"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

<p><div id="dynsection-5" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-5-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-5-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-5-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="ext_8h_a52096e70474db961592cde8373cac430_icgraph.svg" width="116" height="62"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="file_aa66037c1cd0624f9eadbde7de564f3db"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">auto ext::make_unique </td>
          <td>(</td>
          <td class="paramtype">T *&#160;</td>
          <td class="paramname"><em>dumb_handle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Passes an unmanaged resource to a smart pointer with automatic type deduction. </p>
<p>This is a helper function to avoid boilerplate code. This helper would be unnecessary if template arguments could be deduced from constructors.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">dumb_handle</td><td>A raw pointer to the resource.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A smart pointer exclusively owning the resource. </dd></dl>

<p>Definition at line <a class="el" href="ext_8h_source.xhtml#l00155">155</a> of file <a class="el" href="ext_8h_source.xhtml">ext.h</a>.</p>

<p>References <a class="el" href="ext_8h_source.xhtml#l00155">ext::make_unique()</a>.</p>

<p>Referenced by <a class="el" href="ext_8h_source.xhtml#l00155">ext::make_unique()</a>.</p>

<p><div id="dynsection-6" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-6-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-6-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-6-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="ext_8h_aa66037c1cd0624f9eadbde7de564f3db_cgraph.svg" width="136" height="62"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

<p><div id="dynsection-7" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-7-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-7-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-7-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="ext_8h_aa66037c1cd0624f9eadbde7de564f3db_icgraph.svg" width="136" height="62"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Dec 12 2016 00:21:15 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
