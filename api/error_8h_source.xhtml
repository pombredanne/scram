<!-- HTML header for doxygen 1.8.11-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="robots" content="noindex, nofollow"/>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>error.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="scram_blue.png"/></td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">error.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="error_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (C) 2014-2016 Olzhas Rakhimov</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * the Free Software Foundation; either version 3 of the License, or</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * (at your option) any later version.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * GNU General Public License for more details.</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">/// @file error.h</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">/// Exceptions for SCRAM.</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#ifndef SCRAM_SRC_ERROR_H_</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#define SCRAM_SRC_ERROR_H_</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &lt;exception&gt;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacescram.xhtml">scram</a> {</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">/// The Error class is the base class</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">/// for common exceptions specific to the SCRAM code.</span></div><div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="classscram_1_1Error.xhtml">   31</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classscram_1_1Error.xhtml">Error</a> : <span class="keyword">public</span> std::exception {</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; <span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">  /// Constructs a new error with a provided message.</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">  /// @param[in] msg  The message to be passed with this error.</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment"></span>  <span class="keyword">explicit</span> <a class="code" href="classscram_1_1Error.xhtml#ae292929f21fd325c28c28b0ae6c4633b">Error</a>(std::string <a class="code" href="classscram_1_1Error.xhtml#a35818dcc7c8dde101d4fd117adf47bc3">msg</a>);</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <a class="code" href="classscram_1_1Error.xhtml#ae292929f21fd325c28c28b0ae6c4633b">Error</a>(<span class="keyword">const</span> <a class="code" href="classscram_1_1Error.xhtml">Error</a>&amp;) = <span class="keywordflow">default</span>;  <span class="comment">///&lt; Explicit declaration.</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  <span class="keyword">virtual</span> ~<a class="code" href="classscram_1_1Error.xhtml">Error</a>() noexcept = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment">  /// @returns The formatted error message to be printed.</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment"></span>  <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="classscram_1_1Error.xhtml#ae7934b2fda68098469e79483e29ac521">what</a>() <span class="keyword">const</span> noexcept <span class="keyword">override</span>;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">  /// @returns The core message describing the error.</span></div><div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="classscram_1_1Error.xhtml#a35818dcc7c8dde101d4fd117adf47bc3">   46</a></span>&#160;<span class="comment"></span>  <span class="keyword">const</span> std::string&amp; <a class="code" href="classscram_1_1Error.xhtml#a35818dcc7c8dde101d4fd117adf47bc3">msg</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> msg_; }</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">  /// Sets the error messages.</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment">  /// @param[in] msg  The error message.</span></div><div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="classscram_1_1Error.xhtml#ac3e9599a0eeb81eff744d62814e6b3eb">   51</a></span>&#160;<span class="comment"></span>  <span class="keywordtype">void</span> <a class="code" href="classscram_1_1Error.xhtml#ac3e9599a0eeb81eff744d62814e6b3eb">msg</a>(std::string msg) {</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    msg_ = std::move(msg);</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    thrown_ = kPrefix_ + msg_;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  }</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; <span class="keyword">private</span>:</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> kPrefix_[];  <span class="comment">///&lt; Prefix specific to SCRAM.</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment"></span>  std::string msg_;  <span class="comment">///&lt; The error message.</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment"></span>  std::string thrown_;  <span class="comment">///&lt; The message to throw with the prefix.</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment"></span>};</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment">/// For values that are not acceptable.</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">/// For example, negative probability.</span></div><div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="structscram_1_1ValueError.xhtml">   64</a></span>&#160;<span class="comment"></span><span class="keyword">struct </span><a class="code" href="structscram_1_1ValueError.xhtml">ValueError</a> : <span class="keyword">public</span> <a class="code" href="classscram_1_1Error.xhtml">Error</a> {</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  <span class="keyword">using</span> <a class="code" href="classscram_1_1Error.xhtml#ae292929f21fd325c28c28b0ae6c4633b">Error::Error</a>;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;};</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">/// For validating input parameters or user arguments.</span></div><div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="structscram_1_1ValidationError.xhtml">   69</a></span>&#160;<span class="comment"></span><span class="keyword">struct </span><a class="code" href="structscram_1_1ValidationError.xhtml">ValidationError</a> : <span class="keyword">public</span> <a class="code" href="classscram_1_1Error.xhtml">Error</a> {</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  <span class="keyword">using</span> <a class="code" href="classscram_1_1Error.xhtml#ae292929f21fd325c28c28b0ae6c4633b">Error::Error</a>;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;};</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">/// For cases when events or practically anything is redefined.</span></div><div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="structscram_1_1RedefinitionError.xhtml">   74</a></span>&#160;<span class="comment"></span><span class="keyword">struct </span><a class="code" href="structscram_1_1RedefinitionError.xhtml">RedefinitionError</a> : <span class="keyword">public</span> <a class="code" href="structscram_1_1ValidationError.xhtml">ValidationError</a> {</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  <span class="keyword">using</span> ValidationError::ValidationError;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;};</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">/// This error indicates that arguments must be unique.</span></div><div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="structscram_1_1DuplicateArgumentError.xhtml">   79</a></span>&#160;<span class="comment"></span><span class="keyword">struct </span><a class="code" href="structscram_1_1DuplicateArgumentError.xhtml">DuplicateArgumentError</a> : <span class="keyword">public</span> <a class="code" href="structscram_1_1ValidationError.xhtml">ValidationError</a> {</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  <span class="keyword">using</span> ValidationError::ValidationError;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;};</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">/// Signals unacceptable cycles in invalid structures.</span></div><div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="structscram_1_1CycleError.xhtml">   84</a></span>&#160;<span class="comment"></span><span class="keyword">struct </span><a class="code" href="structscram_1_1CycleError.xhtml">CycleError</a> : <span class="keyword">public</span> <a class="code" href="structscram_1_1ValidationError.xhtml">ValidationError</a> {</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  <span class="keyword">using</span> ValidationError::ValidationError;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;};</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">/// For input/output related errors.</span></div><div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="structscram_1_1IOError.xhtml">   89</a></span>&#160;<span class="comment"></span><span class="keyword">struct </span><a class="code" href="structscram_1_1IOError.xhtml">IOError</a> : <span class="keyword">public</span> <a class="code" href="classscram_1_1Error.xhtml">Error</a> {</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  <span class="keyword">using</span> <a class="code" href="classscram_1_1Error.xhtml#ae292929f21fd325c28c28b0ae6c4633b">Error::Error</a>;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;};</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment">/// This error class can be used</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment">/// to indicate unacceptable arguments.</span></div><div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="structscram_1_1InvalidArgument.xhtml">   95</a></span>&#160;<span class="comment"></span><span class="keyword">struct </span><a class="code" href="structscram_1_1InvalidArgument.xhtml">InvalidArgument</a> : <span class="keyword">public</span> <a class="code" href="classscram_1_1Error.xhtml">Error</a> {</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  <span class="keyword">using</span> <a class="code" href="classscram_1_1Error.xhtml#ae292929f21fd325c28c28b0ae6c4633b">Error::Error</a>;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;};</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">/// Signals internal logic errors,</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">/// for example, pre-condition failure</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">/// or use of functionality in ways not designed to.</span></div><div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="structscram_1_1LogicError.xhtml">  102</a></span>&#160;<span class="comment"></span><span class="keyword">struct </span><a class="code" href="structscram_1_1LogicError.xhtml">LogicError</a> : <span class="keyword">public</span> <a class="code" href="classscram_1_1Error.xhtml">Error</a> {</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  <span class="keyword">using</span> <a class="code" href="classscram_1_1Error.xhtml#ae292929f21fd325c28c28b0ae6c4633b">Error::Error</a>;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;};</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">/// This error can be used to indicate</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">/// that call for a function or operation is not legal.</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">/// For example, a derived class can make illegal</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">/// the call of the virtual function of the base class.</span></div><div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="structscram_1_1IllegalOperation.xhtml">  110</a></span>&#160;<span class="comment"></span><span class="keyword">struct </span><a class="code" href="structscram_1_1IllegalOperation.xhtml">IllegalOperation</a> : <span class="keyword">public</span> <a class="code" href="classscram_1_1Error.xhtml">Error</a> {</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  <span class="keyword">using</span> <a class="code" href="classscram_1_1Error.xhtml#ae292929f21fd325c28c28b0ae6c4633b">Error::Error</a>;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;};</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;}  <span class="comment">// namespace scram</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="preprocessor">#endif  // SCRAM_SRC_ERROR_H_</span></div><div class="ttc" id="structscram_1_1IOError_xhtml"><div class="ttname"><a href="structscram_1_1IOError.xhtml">scram::IOError</a></div><div class="ttdoc">For input/output related errors. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00089">error.h:89</a></div></div>
<div class="ttc" id="structscram_1_1DuplicateArgumentError_xhtml"><div class="ttname"><a href="structscram_1_1DuplicateArgumentError.xhtml">scram::DuplicateArgumentError</a></div><div class="ttdoc">This error indicates that arguments must be unique. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00079">error.h:79</a></div></div>
<div class="ttc" id="classscram_1_1Error_xhtml"><div class="ttname"><a href="classscram_1_1Error.xhtml">scram::Error</a></div><div class="ttdoc">The Error class is the base class for common exceptions specific to the SCRAM code. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00031">error.h:31</a></div></div>
<div class="ttc" id="structscram_1_1ValueError_xhtml"><div class="ttname"><a href="structscram_1_1ValueError.xhtml">scram::ValueError</a></div><div class="ttdoc">For values that are not acceptable. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00064">error.h:64</a></div></div>
<div class="ttc" id="structscram_1_1RedefinitionError_xhtml"><div class="ttname"><a href="structscram_1_1RedefinitionError.xhtml">scram::RedefinitionError</a></div><div class="ttdoc">For cases when events or practically anything is redefined. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00074">error.h:74</a></div></div>
<div class="ttc" id="classscram_1_1Error_xhtml_a35818dcc7c8dde101d4fd117adf47bc3"><div class="ttname"><a href="classscram_1_1Error.xhtml#a35818dcc7c8dde101d4fd117adf47bc3">scram::Error::msg</a></div><div class="ttdeci">const std::string &amp; msg() const </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00046">error.h:46</a></div></div>
<div class="ttc" id="structscram_1_1CycleError_xhtml"><div class="ttname"><a href="structscram_1_1CycleError.xhtml">scram::CycleError</a></div><div class="ttdoc">Signals unacceptable cycles in invalid structures. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00084">error.h:84</a></div></div>
<div class="ttc" id="structscram_1_1IllegalOperation_xhtml"><div class="ttname"><a href="structscram_1_1IllegalOperation.xhtml">scram::IllegalOperation</a></div><div class="ttdoc">This error can be used to indicate that call for a function or operation is not legal. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00110">error.h:110</a></div></div>
<div class="ttc" id="namespacescram_xhtml"><div class="ttname"><a href="namespacescram.xhtml">scram</a></div><div class="ttdef"><b>Definition:</b> <a href="analysis_8cc_source.xhtml#l00023">analysis.cc:23</a></div></div>
<div class="ttc" id="classscram_1_1Error_xhtml_ae7934b2fda68098469e79483e29ac521"><div class="ttname"><a href="classscram_1_1Error.xhtml#ae7934b2fda68098469e79483e29ac521">scram::Error::what</a></div><div class="ttdeci">const char * what() const noexceptoverride</div><div class="ttdef"><b>Definition:</b> <a href="error_8cc_source.xhtml#l00031">error.cc:31</a></div></div>
<div class="ttc" id="classscram_1_1Error_xhtml_ae292929f21fd325c28c28b0ae6c4633b"><div class="ttname"><a href="classscram_1_1Error.xhtml#ae292929f21fd325c28c28b0ae6c4633b">scram::Error::Error</a></div><div class="ttdeci">Error(std::string msg)</div><div class="ttdoc">Constructs a new error with a provided message. </div><div class="ttdef"><b>Definition:</b> <a href="error_8cc_source.xhtml#l00027">error.cc:27</a></div></div>
<div class="ttc" id="structscram_1_1LogicError_xhtml"><div class="ttname"><a href="structscram_1_1LogicError.xhtml">scram::LogicError</a></div><div class="ttdoc">Signals internal logic errors, for example, pre-condition failure or use of functionality in ways not...</div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00102">error.h:102</a></div></div>
<div class="ttc" id="classscram_1_1Error_xhtml_ac3e9599a0eeb81eff744d62814e6b3eb"><div class="ttname"><a href="classscram_1_1Error.xhtml#ac3e9599a0eeb81eff744d62814e6b3eb">scram::Error::msg</a></div><div class="ttdeci">void msg(std::string msg)</div><div class="ttdoc">Sets the error messages. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00051">error.h:51</a></div></div>
<div class="ttc" id="structscram_1_1InvalidArgument_xhtml"><div class="ttname"><a href="structscram_1_1InvalidArgument.xhtml">scram::InvalidArgument</a></div><div class="ttdoc">This error class can be used to indicate unacceptable arguments. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00095">error.h:95</a></div></div>
<div class="ttc" id="structscram_1_1ValidationError_xhtml"><div class="ttname"><a href="structscram_1_1ValidationError.xhtml">scram::ValidationError</a></div><div class="ttdoc">For validating input parameters or user arguments. </div><div class="ttdef"><b>Definition:</b> <a href="error_8h_source.xhtml#l00069">error.h:69</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Dec 12 2016 00:21:14 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
