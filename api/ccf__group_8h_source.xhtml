<!-- HTML header for doxygen 1.8.11-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="robots" content="noindex, nofollow"/>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>ccf_group.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="scram_blue.png"/></td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">ccf_group.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="ccf__group_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (C) 2014-2016 Olzhas Rakhimov</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * the Free Software Foundation; either version 3 of the License, or</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * (at your option) any later version.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * GNU General Public License for more details.</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">/// @file ccf_group.h</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">/// Functional containers for basic events</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">/// grouped by common cause failure.</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">/// Common cause failure can be modeled</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">/// with alpha, beta, MGL,</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">/// or direct parameter assignment in phi model.</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#ifndef SCRAM_SRC_CCF_GROUP_H_</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#define SCRAM_SRC_CCF_GROUP_H_</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;utility&gt;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;boost/noncopyable.hpp&gt;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="element_8h.xhtml">element.h</a>&quot;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="event_8h.xhtml">event.h</a>&quot;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="expression_8h.xhtml">expression.h</a>&quot;</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacescram.xhtml">scram</a> {</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">namespace </span>mef {</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment">/// Abstract base class for all common cause failure models.</span></div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1CcfGroup.xhtml">   43</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classscram_1_1mef_1_1CcfGroup.xhtml">CcfGroup</a> : <span class="keyword">public</span> <a class="code" href="classscram_1_1mef_1_1Element.xhtml">Element</a>,</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                 <span class="keyword">public</span> <a class="code" href="classscram_1_1mef_1_1Role.xhtml">Role</a>,</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                 <span class="keyword">public</span> <a class="code" href="classscram_1_1mef_1_1Id.xhtml">Id</a>,</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                 <span class="keyword">private</span> boost::noncopyable {</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; <span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">  /// Constructor to be used by derived classes.</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment">  /// @param[in] name  The name of a CCF group.</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">  /// @param[in] base_path  The series of containers to get this group.</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">  /// @param[in] role  The role of the CCF group within the model or container.</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">  /// @throws LogicError  The name is empty.</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment"></span>  <span class="keyword">explicit</span> <a class="code" href="classscram_1_1mef_1_1CcfGroup.xhtml#a2cc90ded3fd4643dbe65c8411c4f2165">CcfGroup</a>(std::string <a class="code" href="classscram_1_1mef_1_1Element.xhtml#adb401e2ca84aa98cb60797bec2500a81">name</a>, std::string <a class="code" href="classscram_1_1mef_1_1Role.xhtml#ab91a51488ee8c4ed054de1e8450c8a59">base_path</a> = <span class="stringliteral">&quot;&quot;</span>,</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                    <a class="code" href="element_8h.xhtml#a8b010dadcc37f6b3d3076e3d1a0c3ee0">RoleSpecifier</a> <a class="code" href="classscram_1_1mef_1_1Role.xhtml#aa1843c29411c29b27d79414d34525bbc">role</a> = RoleSpecifier::kPublic);</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <span class="keyword">virtual</span> ~<a class="code" href="classscram_1_1mef_1_1CcfGroup.xhtml">CcfGroup</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">  /// @returns Members of the CCF group with original names as keys.</span></div><div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1CcfGroup.xhtml#ac2e32b2b8b441c3605780181651af31c">   61</a></span>&#160;<span class="comment"></span>  <span class="keyword">const</span> <a class="code" href="element_8h.xhtml#ab162a6f742c23405f33db706d5a927b4">ElementTable&lt;BasicEventPtr&gt;</a>&amp; <a class="code" href="classscram_1_1mef_1_1CcfGroup.xhtml#ac2e32b2b8b441c3605780181651af31c">members</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> members_; }</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">  /// Adds a basic event into this CCF group.</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">  /// This function asserts that each basic event has unique string id.</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">  /// @param[in] basic_event  A member basic event.</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">  /// @throws DuplicateArgumentError  The basic event is already in the group.</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">  /// @throws IllegalOperation  The probability distribution</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment">  ///                           for this CCF group is already defined.</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">  ///                           No more members are accepted.</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment"></span>  <span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1CcfGroup.xhtml#a8321bf4372a0575c88b7162716469d15">AddMember</a>(<span class="keyword">const</span> <a class="code" href="event_8h.xhtml#a014b1b08212f876b5f342bb4b52e3d39">BasicEventPtr</a>&amp; basic_event);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">  /// Adds the distribution that describes the probability of</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">  /// basic events in this CCF group.</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">  /// All basic events should be added as members</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">  /// before defining their probabilities.</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">  /// No more basic events can be added after this function.</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">  /// @param[in] distr  The probability distribution of this group.</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">  /// @throws LogicError  The distribution has already been defined.</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment"></span>  <span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1CcfGroup.xhtml#a723878c7c836a52cf9edb5c8d1a37868">AddDistribution</a>(<span class="keyword">const</span> <a class="code" href="expression_8h.xhtml#a1834910c86a27726923fb285f73cd839">ExpressionPtr</a>&amp; distr);</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">  /// Adds a CCF factor for the specified model.</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">  /// The addition of factors must be in ascending level order</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">  /// and no gaps are allowed between levels.</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">  /// The default case is to start from 1.</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">  /// @param[in] factor  A factor for the CCF model.</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">  /// @param[in] level  The level of the passed factor.</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment">  /// @throws ValidationError  Level is not what is expected.</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment">  /// @throws LogicError  The level is not positive.</span></div><div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1CcfGroup.xhtml#a613678c7f9dd37c42239cd7988b2c259">   95</a></span>&#160;<span class="comment"></span>  <span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1CcfGroup.xhtml#a613678c7f9dd37c42239cd7988b2c259">AddFactor</a>(<span class="keyword">const</span> <a class="code" href="expression_8h.xhtml#a1834910c86a27726923fb285f73cd839">ExpressionPtr</a>&amp; factor, <span class="keywordtype">int</span> level) {</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    this-&gt;CheckLevel(level);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    factors_.emplace_back(level, factor);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  }</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">  /// Checks if the provided distribution is between 0 and 1.</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">  /// This check must be performed before validating basic events</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">  /// that are members of this CCF group</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">  /// to give more precise error messages.</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">  /// @throws ValidationError  There is an issue with the distribution.</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment"></span>  <span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1CcfGroup.xhtml#a25e28f28d5ebf344bc17dc7d0c50a497">ValidateDistribution</a>();</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">  /// Validates the setup for the CCF model and group.</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">  /// The passed expressions must be checked for circular logic</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">  /// before initiating the CCF validation.</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">  /// @throws ValidationError  There is an issue with the setup.</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment"></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1CcfGroup.xhtml#a31cbe59ce89f295de7bb810d8b75990e">Validate</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">  /// Processes the given factors and members</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">  /// to create common cause failure probabilities and new events</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">  /// that can replace the members in a fault tree.</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment"></span>  <span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1CcfGroup.xhtml#ab399c5ed0c1d7d0a316ac3b7244b7eb9">ApplyModel</a>();</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160; <span class="keyword">protected</span>:<span class="comment"></span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">  /// Mapping expressions and their application levels.</span></div><div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1CcfGroup.xhtml#ae82ce7133ed17766d54fb927f8935277">  122</a></span>&#160;<span class="comment"></span>  <span class="keyword">using</span> <a class="code" href="classscram_1_1mef_1_1CcfGroup.xhtml#ae82ce7133ed17766d54fb927f8935277">ExpressionMap</a> = std::vector&lt;std::pair&lt;int, ExpressionPtr&gt;&gt;;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">  /// @returns The probability distribution of the events.</span></div><div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1CcfGroup.xhtml#a89c5531144ef16c6f28be333166ab839">  125</a></span>&#160;<span class="comment"></span>  <span class="keyword">const</span> <a class="code" href="expression_8h.xhtml#a1834910c86a27726923fb285f73cd839">ExpressionPtr</a>&amp; <a class="code" href="classscram_1_1mef_1_1CcfGroup.xhtml#a89c5531144ef16c6f28be333166ab839">distribution</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> distribution_; }</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">  /// @returns CCF factors of the model.</span></div><div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1CcfGroup.xhtml#a870cff942d6ce90dc50de37e17a151ee">  128</a></span>&#160;<span class="comment"></span>  <span class="keyword">const</span> <a class="code" href="classscram_1_1mef_1_1CcfGroup.xhtml#ae82ce7133ed17766d54fb927f8935277">ExpressionMap</a>&amp; <a class="code" href="classscram_1_1mef_1_1CcfGroup.xhtml#a870cff942d6ce90dc50de37e17a151ee">factors</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> factors_; }</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160; <span class="keyword">private</span>:<span class="comment"></span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">  /// Checks the level of factors</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">  /// before the addition of factors.</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">  /// By default,</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">  /// the addition of factors must be in ascending level order</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">  /// and no gaps are allowed between levels.</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">  /// @param[in] level  The level of the passed factor.</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">  /// @throws ValidationError  Level is not what is expected.</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">  /// @throws LogicError  The level is not positive.</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment"></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> CheckLevel(<span class="keywordtype">int</span> level);</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">  /// Calculates probabilities for new basic events</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">  /// representing failures due to common cause.</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">  /// Each derived common cause failure model</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">  /// must implement this function</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">  /// with its own specific formulas and assumptions.</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">  /// @returns  Expressions representing probabilities</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">  ///           for each level of groupings for CCF events.</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment"></span>  <span class="keyword">virtual</span> <a class="code" href="classscram_1_1mef_1_1CcfGroup.xhtml#ae82ce7133ed17766d54fb927f8935277">ExpressionMap</a> CalculateProbabilities() = 0;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment">  /// Stabilizes the order of CCF group members.</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment">  /// @returns Ordered members.</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment"></span>  std::vector&lt;BasicEvent*&gt; StabilizeMembers();</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">  /// Members of CCF groups.</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment"></span>  <a class="code" href="element_8h.xhtml#ab162a6f742c23405f33db706d5a927b4">ElementTable&lt;BasicEventPtr&gt;</a> members_;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  <a class="code" href="expression_8h.xhtml#a1834910c86a27726923fb285f73cd839">ExpressionPtr</a> distribution_;  <span class="comment">///&lt; The probability distribution of the group.</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment"></span>  <a class="code" href="classscram_1_1mef_1_1CcfGroup.xhtml#ae82ce7133ed17766d54fb927f8935277">ExpressionMap</a> factors_;  <span class="comment">///&lt; CCF factors for models to get CCF probabilities.</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment"></span>};</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno"><a class="line" href="ccf__group_8h.xhtml#a2736f823d103bed2d002c9ce6f0c217c">  164</a></span>&#160;<span class="keyword">using</span> <a class="code" href="ccf__group_8h.xhtml#a2736f823d103bed2d002c9ce6f0c217c">CcfGroupPtr</a> = std::shared_ptr&lt;CcfGroup&gt;;  <span class="comment">///&lt; Shared CCF groups.</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment"></span><span class="comment"></span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">/// Common cause failure model that assumes,</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment">/// if common cause failure occurs,</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment">/// then all components or members fail simultaneously or within short time.</span></div><div class="line"><a name="l00169"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1BetaFactorModel.xhtml">  169</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classscram_1_1mef_1_1BetaFactorModel.xhtml">BetaFactorModel</a> : <span class="keyword">public</span> <a class="code" href="classscram_1_1mef_1_1CcfGroup.xhtml">CcfGroup</a> {</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160; <span class="keyword">public</span>:</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  <span class="keyword">using</span> <a class="code" href="classscram_1_1mef_1_1CcfGroup.xhtml#a2cc90ded3fd4643dbe65c8411c4f2165">CcfGroup::CcfGroup</a>;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160; <span class="keyword">private</span>:<span class="comment"></span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">  /// Checks a CCF factor level for the beta model.</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment">  /// Only one factor is expected.</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment">  /// @param[in] level  The level of the passed factor.</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">  /// @throws ValidationError  Level is not what is expected.</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment">  /// @throws LogicError  The level is not positive.</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment"></span>  <span class="keywordtype">void</span> CheckLevel(<span class="keywordtype">int</span> level) <span class="keyword">override</span>;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;  <a class="code" href="classscram_1_1mef_1_1CcfGroup.xhtml#ae82ce7133ed17766d54fb927f8935277">ExpressionMap</a> CalculateProbabilities() <span class="keyword">override</span>;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;};</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment">/// Multiple Greek Letters model characterizes failure of</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment">/// sub-groups of the group due to common cause.</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment">/// The factor for k-component group defines</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment">/// fraction of failure k or more members</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment">/// given that (k-1) members failed.</span></div><div class="line"><a name="l00191"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1MglModel.xhtml">  191</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classscram_1_1mef_1_1MglModel.xhtml">MglModel</a> : <span class="keyword">public</span> <a class="code" href="classscram_1_1mef_1_1CcfGroup.xhtml">CcfGroup</a> {</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160; <span class="keyword">public</span>:</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  <span class="keyword">using</span> <a class="code" href="classscram_1_1mef_1_1CcfGroup.xhtml#a2cc90ded3fd4643dbe65c8411c4f2165">CcfGroup::CcfGroup</a>;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160; <span class="keyword">private</span>:<span class="comment"></span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment">  /// Checks a CCF factor level for the MGL model.</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment">  /// The factor level must start from 2.</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment">  /// @param[in] level  The level of the passed factor.</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="comment">  /// @throws ValidationError  Level is not what is expected.</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment">  /// @throws LogicError  The level is not positive.</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment"></span>  <span class="keywordtype">void</span> CheckLevel(<span class="keywordtype">int</span> level) <span class="keyword">override</span>;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;  <a class="code" href="classscram_1_1mef_1_1CcfGroup.xhtml#ae82ce7133ed17766d54fb927f8935277">ExpressionMap</a> CalculateProbabilities() <span class="keyword">override</span>;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;};</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">/// Alpha factor model characterizes</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment">/// failure of exactly k members of</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment">/// the group due to common cause.</span></div><div class="line"><a name="l00211"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1AlphaFactorModel.xhtml">  211</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classscram_1_1mef_1_1AlphaFactorModel.xhtml">AlphaFactorModel</a> : <span class="keyword">public</span> <a class="code" href="classscram_1_1mef_1_1CcfGroup.xhtml">CcfGroup</a> {</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160; <span class="keyword">public</span>:</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;  <span class="keyword">using</span> <a class="code" href="classscram_1_1mef_1_1CcfGroup.xhtml#a2cc90ded3fd4643dbe65c8411c4f2165">CcfGroup::CcfGroup</a>;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160; <span class="keyword">private</span>:</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;  <a class="code" href="classscram_1_1mef_1_1CcfGroup.xhtml#ae82ce7133ed17766d54fb927f8935277">ExpressionMap</a> CalculateProbabilities() <span class="keyword">override</span>;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;};</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="comment">/// Phi factor model is a simplification,</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="comment">/// where fractions of k-member group failure is given directly.</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="comment">/// Thus, Q_k = phi_k * Q_total.</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="comment">/// This model is described in the Open-PSA Model Exchange Format.</span></div><div class="line"><a name="l00223"></a><span class="lineno"><a class="line" href="classscram_1_1mef_1_1PhiFactorModel.xhtml">  223</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classscram_1_1mef_1_1PhiFactorModel.xhtml">PhiFactorModel</a> : <span class="keyword">public</span> <a class="code" href="classscram_1_1mef_1_1CcfGroup.xhtml">CcfGroup</a> {</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160; <span class="keyword">public</span>:</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;  <span class="keyword">using</span> <a class="code" href="classscram_1_1mef_1_1CcfGroup.xhtml#a2cc90ded3fd4643dbe65c8411c4f2165">CcfGroup::CcfGroup</a>;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="comment">  /// In addition to the default validation of CcfGroup,</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="comment">  /// checks if the given factors&#39; sum is 1.</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="comment">  /// @throws ValidationError  There is an issue with the setup.</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="comment">  ///</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="comment">  /// @todo Problem with sampling the factors and not getting exactly 1.</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="comment"></span>  <span class="keywordtype">void</span> <a class="code" href="classscram_1_1mef_1_1CcfGroup.xhtml#a31cbe59ce89f295de7bb810d8b75990e">Validate</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160; <span class="keyword">private</span>:</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;  <a class="code" href="classscram_1_1mef_1_1CcfGroup.xhtml#ae82ce7133ed17766d54fb927f8935277">ExpressionMap</a> CalculateProbabilities() <span class="keyword">override</span>;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;};</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;}  <span class="comment">// namespace mef</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;}  <span class="comment">// namespace scram</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="preprocessor">#endif  // SCRAM_SRC_CCF_GROUP_H_</span></div><div class="ttc" id="classscram_1_1mef_1_1Id_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1Id.xhtml">scram::mef::Id</a></div><div class="ttdoc">Mixin class for assigning unique identifiers to elements. </div><div class="ttdef"><b>Definition:</b> <a href="element_8h_source.xhtml#l00173">element.h:173</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Role_xhtml_aa1843c29411c29b27d79414d34525bbc"><div class="ttname"><a href="classscram_1_1mef_1_1Role.xhtml#aa1843c29411c29b27d79414d34525bbc">scram::mef::Role::role</a></div><div class="ttdeci">RoleSpecifier role() const </div><div class="ttdef"><b>Definition:</b> <a href="element_8h_source.xhtml#l00147">element.h:147</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1CcfGroup_xhtml_a870cff942d6ce90dc50de37e17a151ee"><div class="ttname"><a href="classscram_1_1mef_1_1CcfGroup.xhtml#a870cff942d6ce90dc50de37e17a151ee">scram::mef::CcfGroup::factors</a></div><div class="ttdeci">const ExpressionMap &amp; factors() const </div><div class="ttdef"><b>Definition:</b> <a href="ccf__group_8h_source.xhtml#l00128">ccf_group.h:128</a></div></div>
<div class="ttc" id="element_8h_xhtml"><div class="ttname"><a href="element_8h.xhtml">element.h</a></div><div class="ttdoc">Helper classes, structs, and properties common to all other classes. </div></div>
<div class="ttc" id="expression_8h_xhtml_a1834910c86a27726923fb285f73cd839"><div class="ttname"><a href="expression_8h.xhtml#a1834910c86a27726923fb285f73cd839">scram::mef::ExpressionPtr</a></div><div class="ttdeci">std::shared_ptr&lt; Expression &gt; ExpressionPtr</div><div class="ttdoc">Shared expressions. </div><div class="ttdef"><b>Definition:</b> <a href="expression_8h_source.xhtml#l00038">expression.h:38</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1PhiFactorModel_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1PhiFactorModel.xhtml">scram::mef::PhiFactorModel</a></div><div class="ttdoc">Phi factor model is a simplification, where fractions of k-member group failure is given directly...</div><div class="ttdef"><b>Definition:</b> <a href="ccf__group_8h_source.xhtml#l00223">ccf_group.h:223</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1CcfGroup_xhtml_ae82ce7133ed17766d54fb927f8935277"><div class="ttname"><a href="classscram_1_1mef_1_1CcfGroup.xhtml#ae82ce7133ed17766d54fb927f8935277">scram::mef::CcfGroup::ExpressionMap</a></div><div class="ttdeci">std::vector&lt; std::pair&lt; int, ExpressionPtr &gt;&gt; ExpressionMap</div><div class="ttdoc">Mapping expressions and their application levels. </div><div class="ttdef"><b>Definition:</b> <a href="ccf__group_8h_source.xhtml#l00122">ccf_group.h:122</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1CcfGroup_xhtml_a31cbe59ce89f295de7bb810d8b75990e"><div class="ttname"><a href="classscram_1_1mef_1_1CcfGroup.xhtml#a31cbe59ce89f295de7bb810d8b75990e">scram::mef::CcfGroup::Validate</a></div><div class="ttdeci">virtual void Validate() const </div><div class="ttdoc">Validates the setup for the CCF model and group. </div><div class="ttdef"><b>Definition:</b> <a href="ccf__group_8cc_source.xhtml#l00074">ccf_group.cc:74</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1CcfGroup_xhtml_a723878c7c836a52cf9edb5c8d1a37868"><div class="ttname"><a href="classscram_1_1mef_1_1CcfGroup.xhtml#a723878c7c836a52cf9edb5c8d1a37868">scram::mef::CcfGroup::AddDistribution</a></div><div class="ttdeci">void AddDistribution(const ExpressionPtr &amp;distr)</div><div class="ttdoc">Adds the distribution that describes the probability of basic events in this CCF group. </div><div class="ttdef"><b>Definition:</b> <a href="ccf__group_8cc_source.xhtml#l00048">ccf_group.cc:48</a></div></div>
<div class="ttc" id="event_8h_xhtml"><div class="ttname"><a href="event_8h.xhtml">event.h</a></div><div class="ttdoc">Contains event classes for fault trees. </div></div>
<div class="ttc" id="classscram_1_1mef_1_1CcfGroup_xhtml_ab399c5ed0c1d7d0a316ac3b7244b7eb9"><div class="ttname"><a href="classscram_1_1mef_1_1CcfGroup.xhtml#ab399c5ed0c1d7d0a316ac3b7244b7eb9">scram::mef::CcfGroup::ApplyModel</a></div><div class="ttdeci">void ApplyModel()</div><div class="ttdoc">Processes the given factors and members to create common cause failure probabilities and new events t...</div><div class="ttdef"><b>Definition:</b> <a href="ccf__group_8cc_source.xhtml#l00160">ccf_group.cc:160</a></div></div>
<div class="ttc" id="namespacescram_xhtml"><div class="ttname"><a href="namespacescram.xhtml">scram</a></div><div class="ttdef"><b>Definition:</b> <a href="analysis_8cc_source.xhtml#l00023">analysis.cc:23</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1MglModel_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1MglModel.xhtml">scram::mef::MglModel</a></div><div class="ttdoc">Multiple Greek Letters model characterizes failure of sub-groups of the group due to common cause...</div><div class="ttdef"><b>Definition:</b> <a href="ccf__group_8h_source.xhtml#l00191">ccf_group.h:191</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1CcfGroup_xhtml_a89c5531144ef16c6f28be333166ab839"><div class="ttname"><a href="classscram_1_1mef_1_1CcfGroup.xhtml#a89c5531144ef16c6f28be333166ab839">scram::mef::CcfGroup::distribution</a></div><div class="ttdeci">const ExpressionPtr &amp; distribution() const </div><div class="ttdef"><b>Definition:</b> <a href="ccf__group_8h_source.xhtml#l00125">ccf_group.h:125</a></div></div>
<div class="ttc" id="event_8h_xhtml_a014b1b08212f876b5f342bb4b52e3d39"><div class="ttname"><a href="event_8h.xhtml#a014b1b08212f876b5f342bb4b52e3d39">scram::mef::BasicEventPtr</a></div><div class="ttdeci">std::shared_ptr&lt; BasicEvent &gt; BasicEventPtr</div><div class="ttdoc">Shared basic events. </div><div class="ttdef"><b>Definition:</b> <a href="event_8h_source.xhtml#l00254">event.h:254</a></div></div>
<div class="ttc" id="element_8h_xhtml_a8b010dadcc37f6b3d3076e3d1a0c3ee0"><div class="ttname"><a href="element_8h.xhtml#a8b010dadcc37f6b3d3076e3d1a0c3ee0">scram::mef::RoleSpecifier</a></div><div class="ttdeci">RoleSpecifier</div><div class="ttdoc">Role, access attributes for elements. </div><div class="ttdef"><b>Definition:</b> <a href="element_8h_source.xhtml#l00127">element.h:127</a></div></div>
<div class="ttc" id="element_8h_xhtml_ab162a6f742c23405f33db706d5a927b4"><div class="ttname"><a href="element_8h.xhtml#ab162a6f742c23405f33db706d5a927b4">scram::mef::ElementTable</a></div><div class="ttdeci">boost::multi_index_container&lt; T, boost::multi_index::indexed_by&lt; boost::multi_index::hashed_unique&lt; boost::multi_index::const_mem_fun&lt; Element, const std::string &amp;,&amp;Element::name &gt;&gt;&gt;&gt; ElementTable</div><div class="ttdoc">Table of elements with unique names. </div><div class="ttdef"><b>Definition:</b> <a href="element_8h_source.xhtml#l00124">element.h:124</a></div></div>
<div class="ttc" id="ccf__group_8h_xhtml_a2736f823d103bed2d002c9ce6f0c217c"><div class="ttname"><a href="ccf__group_8h.xhtml#a2736f823d103bed2d002c9ce6f0c217c">scram::mef::CcfGroupPtr</a></div><div class="ttdeci">std::shared_ptr&lt; CcfGroup &gt; CcfGroupPtr</div><div class="ttdoc">Shared CCF groups. </div><div class="ttdef"><b>Definition:</b> <a href="ccf__group_8h_source.xhtml#l00164">ccf_group.h:164</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1CcfGroup_xhtml_a2cc90ded3fd4643dbe65c8411c4f2165"><div class="ttname"><a href="classscram_1_1mef_1_1CcfGroup.xhtml#a2cc90ded3fd4643dbe65c8411c4f2165">scram::mef::CcfGroup::CcfGroup</a></div><div class="ttdeci">CcfGroup(std::string name, std::string base_path=&quot;&quot;, RoleSpecifier role=RoleSpecifier::kPublic)</div><div class="ttdoc">Constructor to be used by derived classes. </div><div class="ttdef"><b>Definition:</b> <a href="ccf__group_8cc_source.xhtml#l00031">ccf_group.cc:31</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1CcfGroup_xhtml_a25e28f28d5ebf344bc17dc7d0c50a497"><div class="ttname"><a href="classscram_1_1mef_1_1CcfGroup.xhtml#a25e28f28d5ebf344bc17dc7d0c50a497">scram::mef::CcfGroup::ValidateDistribution</a></div><div class="ttdeci">void ValidateDistribution()</div><div class="ttdoc">Checks if the provided distribution is between 0 and 1. </div><div class="ttdef"><b>Definition:</b> <a href="ccf__group_8cc_source.xhtml#l00067">ccf_group.cc:67</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Element_xhtml_adb401e2ca84aa98cb60797bec2500a81"><div class="ttname"><a href="classscram_1_1mef_1_1Element.xhtml#adb401e2ca84aa98cb60797bec2500a81">scram::mef::Element::name</a></div><div class="ttdeci">const std::string &amp; name() const </div><div class="ttdef"><b>Definition:</b> <a href="element_8h_source.xhtml#l00062">element.h:62</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Element_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1Element.xhtml">scram::mef::Element</a></div><div class="ttdoc">Mixin class that represents any element of analysis that can have extra descriptions, such as attributes and a label. </div><div class="ttdef"><b>Definition:</b> <a href="element_8h_source.xhtml#l00048">element.h:48</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1CcfGroup_xhtml_a8321bf4372a0575c88b7162716469d15"><div class="ttname"><a href="classscram_1_1mef_1_1CcfGroup.xhtml#a8321bf4372a0575c88b7162716469d15">scram::mef::CcfGroup::AddMember</a></div><div class="ttdeci">void AddMember(const BasicEventPtr &amp;basic_event)</div><div class="ttdoc">Adds a basic event into this CCF group. </div><div class="ttdef"><b>Definition:</b> <a href="ccf__group_8cc_source.xhtml#l00036">ccf_group.cc:36</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1AlphaFactorModel_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1AlphaFactorModel.xhtml">scram::mef::AlphaFactorModel</a></div><div class="ttdoc">Alpha factor model characterizes failure of exactly k members of the group due to common cause...</div><div class="ttdef"><b>Definition:</b> <a href="ccf__group_8h_source.xhtml#l00211">ccf_group.h:211</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1CcfGroup_xhtml_ac2e32b2b8b441c3605780181651af31c"><div class="ttname"><a href="classscram_1_1mef_1_1CcfGroup.xhtml#ac2e32b2b8b441c3605780181651af31c">scram::mef::CcfGroup::members</a></div><div class="ttdeci">const ElementTable&lt; BasicEventPtr &gt; &amp; members() const </div><div class="ttdef"><b>Definition:</b> <a href="ccf__group_8h_source.xhtml#l00061">ccf_group.h:61</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1BetaFactorModel_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1BetaFactorModel.xhtml">scram::mef::BetaFactorModel</a></div><div class="ttdoc">Common cause failure model that assumes, if common cause failure occurs, then all components or membe...</div><div class="ttdef"><b>Definition:</b> <a href="ccf__group_8h_source.xhtml#l00169">ccf_group.h:169</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1CcfGroup_xhtml_a613678c7f9dd37c42239cd7988b2c259"><div class="ttname"><a href="classscram_1_1mef_1_1CcfGroup.xhtml#a613678c7f9dd37c42239cd7988b2c259">scram::mef::CcfGroup::AddFactor</a></div><div class="ttdeci">void AddFactor(const ExpressionPtr &amp;factor, int level)</div><div class="ttdoc">Adds a CCF factor for the specified model. </div><div class="ttdef"><b>Definition:</b> <a href="ccf__group_8h_source.xhtml#l00095">ccf_group.h:95</a></div></div>
<div class="ttc" id="expression_8h_xhtml"><div class="ttname"><a href="expression_8h.xhtml">expression.h</a></div><div class="ttdoc">Provides the base class for all expressions and units for expression values. </div></div>
<div class="ttc" id="classscram_1_1mef_1_1Role_xhtml_ab91a51488ee8c4ed054de1e8450c8a59"><div class="ttname"><a href="classscram_1_1mef_1_1Role.xhtml#ab91a51488ee8c4ed054de1e8450c8a59">scram::mef::Role::base_path</a></div><div class="ttdeci">const std::string &amp; base_path() const </div><div class="ttdef"><b>Definition:</b> <a href="element_8h_source.xhtml#l00150">element.h:150</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1CcfGroup_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1CcfGroup.xhtml">scram::mef::CcfGroup</a></div><div class="ttdoc">Abstract base class for all common cause failure models. </div><div class="ttdef"><b>Definition:</b> <a href="ccf__group_8h_source.xhtml#l00043">ccf_group.h:43</a></div></div>
<div class="ttc" id="classscram_1_1mef_1_1Role_xhtml"><div class="ttname"><a href="classscram_1_1mef_1_1Role.xhtml">scram::mef::Role</a></div><div class="ttdoc">Mixin class that manages private or public roles for elements as needed. </div><div class="ttdef"><b>Definition:</b> <a href="element_8h_source.xhtml#l00133">element.h:133</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Dec 12 2016 00:21:14 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
