<!-- HTML header for doxygen 1.8.11-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="robots" content="noindex, nofollow"/>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>scram::core::Gate Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="scram_blue.png"/></td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>scram</b></li><li class="navelem"><b>core</b></li><li class="navelem"><a class="el" href="classscram_1_1core_1_1Gate.xhtml">Gate</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classscram_1_1core_1_1Gate-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">scram::core::Gate Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>An indexed gate for use in <a class="el" href="classscram_1_1core_1_1BooleanGraph.xhtml" title="BooleanGraph is a propositional directed acyclic graph (PDAG). ">BooleanGraph</a>.  
 <a href="classscram_1_1core_1_1Gate.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for scram::core::Gate:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Gate__inherit__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a9f420fb29f38ac48bde786a55de3d87c"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:a9f420fb29f38ac48bde786a55de3d87c"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#a9f420fb29f38ac48bde786a55de3d87c">Arg</a> = std::pair&lt; int, std::shared_ptr&lt; T &gt;&gt;</td></tr>
<tr class="memdesc:a9f420fb29f38ac48bde786a55de3d87c"><td class="mdescLeft">&#160;</td><td class="mdescRight">An argument entry type in the gate's argument containers.  <a href="#a9f420fb29f38ac48bde786a55de3d87c">More...</a><br /></td></tr>
<tr class="separator:a9f420fb29f38ac48bde786a55de3d87c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2b61b9c19e6b8abd97c92b9374a49e6"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:ae2b61b9c19e6b8abd97c92b9374a49e6"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#ae2b61b9c19e6b8abd97c92b9374a49e6">ArgMap</a> = <a class="el" href="classext_1_1linear__map.xhtml">ext::linear_map</a>&lt; int, std::shared_ptr&lt; T &gt;, <a class="el" href="structext_1_1MoveEraser.xhtml">ext::MoveEraser</a> &gt;</td></tr>
<tr class="memdesc:ae2b61b9c19e6b8abd97c92b9374a49e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">An associative container type to store the gate arguments.  <a href="#ae2b61b9c19e6b8abd97c92b9374a49e6">More...</a><br /></td></tr>
<tr class="separator:ae2b61b9c19e6b8abd97c92b9374a49e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9970e696aec8b505474676dfc4d34a7"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac9970e696aec8b505474676dfc4d34a7"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#ac9970e696aec8b505474676dfc4d34a7">ArgSet</a> = boost::container::flat_set&lt; int &gt;</td></tr>
<tr class="memdesc:ac9970e696aec8b505474676dfc4d34a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">An ordered set of gate argument indices. <br /></td></tr>
<tr class="separator:ac9970e696aec8b505474676dfc4d34a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_types_classscram_1_1core_1_1NodeParentManager"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classscram_1_1core_1_1NodeParentManager')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classscram_1_1core_1_1NodeParentManager.xhtml">scram::core::NodeParentManager</a></td></tr>
<tr class="memitem:aac6a0def0dc0b7dfe17a5fd4379eaea2 inherit pub_types_classscram_1_1core_1_1NodeParentManager"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aac6a0def0dc0b7dfe17a5fd4379eaea2"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1NodeParentManager.xhtml#aac6a0def0dc0b7dfe17a5fd4379eaea2">Parent</a> = std::pair&lt; int, <a class="el" href="boolean__graph_8h.xhtml#a2dd45b6c16940b9b60e4bc5b13ae6d6b">GateWeakPtr</a> &gt;</td></tr>
<tr class="memdesc:aac6a0def0dc0b7dfe17a5fd4379eaea2 inherit pub_types_classscram_1_1core_1_1NodeParentManager"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parent index and ptr. <br /></td></tr>
<tr class="separator:aac6a0def0dc0b7dfe17a5fd4379eaea2 inherit pub_types_classscram_1_1core_1_1NodeParentManager"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2161011c8bfcc49665495f70bca3de1 inherit pub_types_classscram_1_1core_1_1NodeParentManager"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac2161011c8bfcc49665495f70bca3de1"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1NodeParentManager.xhtml#ac2161011c8bfcc49665495f70bca3de1">ParentMap</a> = <a class="el" href="classext_1_1linear__map.xhtml">ext::linear_map</a>&lt; int, <a class="el" href="boolean__graph_8h.xhtml#a2dd45b6c16940b9b60e4bc5b13ae6d6b">GateWeakPtr</a>, <a class="el" href="structext_1_1MoveEraser.xhtml">ext::MoveEraser</a> &gt;</td></tr>
<tr class="memdesc:ac2161011c8bfcc49665495f70bca3de1 inherit pub_types_classscram_1_1core_1_1NodeParentManager"><td class="mdescLeft">&#160;</td><td class="mdescRight">A map type of parent gate positive indices and weak pointers to them. <br /></td></tr>
<tr class="separator:ac2161011c8bfcc49665495f70bca3de1 inherit pub_types_classscram_1_1core_1_1NodeParentManager"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a2a901d4ed71defc249a88163241f3798"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#a2a901d4ed71defc249a88163241f3798">Gate</a> (<a class="el" href="boolean__graph_8h.xhtml#ad4c053147ae98b76f12620441f6d3800">Operator</a> <a class="el" href="classscram_1_1core_1_1Gate.xhtml#ad5a5766ce9dbbd2104c0bb07b9639a48">type</a>) noexcept</td></tr>
<tr class="memdesc:a2a901d4ed71defc249a88163241f3798"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an indexed gate with its unique index.  <a href="#a2a901d4ed71defc249a88163241f3798">More...</a><br /></td></tr>
<tr class="separator:a2a901d4ed71defc249a88163241f3798"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23da77291db4c91feca80cf1d24ffbe2"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a23da77291db4c91feca80cf1d24ffbe2"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#a23da77291db4c91feca80cf1d24ffbe2">~Gate</a> () noexcept</td></tr>
<tr class="memdesc:a23da77291db4c91feca80cf1d24ffbe2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructs parent information from the arguments. <br /></td></tr>
<tr class="separator:a23da77291db4c91feca80cf1d24ffbe2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f9390cdf7bfb3c552a7ef843629ddc0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="boolean__graph_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#a9f9390cdf7bfb3c552a7ef843629ddc0">Clone</a> () noexcept</td></tr>
<tr class="memdesc:a9f9390cdf7bfb3c552a7ef843629ddc0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clones arguments and parameters.  <a href="#a9f9390cdf7bfb3c552a7ef843629ddc0">More...</a><br /></td></tr>
<tr class="separator:a9f9390cdf7bfb3c552a7ef843629ddc0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5a5766ce9dbbd2104c0bb07b9639a48"><td class="memItemLeft" align="right" valign="top"><a class="el" href="boolean__graph_8h.xhtml#ad4c053147ae98b76f12620441f6d3800">Operator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#ad5a5766ce9dbbd2104c0bb07b9639a48">type</a> () const </td></tr>
<tr class="separator:ad5a5766ce9dbbd2104c0bb07b9639a48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5941da008c247b76525253cd02324c82"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#a5941da008c247b76525253cd02324c82">type</a> (<a class="el" href="boolean__graph_8h.xhtml#ad4c053147ae98b76f12620441f6d3800">Operator</a> t)</td></tr>
<tr class="memdesc:a5941da008c247b76525253cd02324c82"><td class="mdescLeft">&#160;</td><td class="mdescRight">Changes the gate type information.  <a href="#a5941da008c247b76525253cd02324c82">More...</a><br /></td></tr>
<tr class="separator:a5941da008c247b76525253cd02324c82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44b9a758151d932743543241ca669517"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#a44b9a758151d932743543241ca669517">vote_number</a> () const </td></tr>
<tr class="separator:a44b9a758151d932743543241ca669517"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e1504bb0c5673a3f7cdc44bdb79b4ce"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#a6e1504bb0c5673a3f7cdc44bdb79b4ce">vote_number</a> (int number)</td></tr>
<tr class="memdesc:a6e1504bb0c5673a3f7cdc44bdb79b4ce"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the vote number for this gate.  <a href="#a6e1504bb0c5673a3f7cdc44bdb79b4ce">More...</a><br /></td></tr>
<tr class="separator:a6e1504bb0c5673a3f7cdc44bdb79b4ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc9ef02a94f1445077f689e599806716"><td class="memItemLeft" align="right" valign="top"><a class="el" href="boolean__graph_8h.xhtml#ac030b66fb750e5de6987fe8c5201b008">State</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#afc9ef02a94f1445077f689e599806716">state</a> () const </td></tr>
<tr class="separator:afc9ef02a94f1445077f689e599806716"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeaaa462ccbdef3cb95d70d966ce1740a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#aeaaa462ccbdef3cb95d70d966ce1740a">IsConstant</a> () const </td></tr>
<tr class="separator:aeaaa462ccbdef3cb95d70d966ce1740a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa793eeaa12244c5b39a0d80e5b1518ae"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classscram_1_1core_1_1Gate.xhtml#ac9970e696aec8b505474676dfc4d34a7">ArgSet</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#aa793eeaa12244c5b39a0d80e5b1518ae">args</a> () const </td></tr>
<tr class="separator:aa793eeaa12244c5b39a0d80e5b1518ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3538252a8c854634fbcddbd3c0b09ea"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:ae3538252a8c854634fbcddbd3c0b09ea"><td class="memTemplItemLeft" align="right" valign="top">const <a class="el" href="classscram_1_1core_1_1Gate.xhtml#ae2b61b9c19e6b8abd97c92b9374a49e6">ArgMap</a>&lt; T &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#ae3538252a8c854634fbcddbd3c0b09ea">args</a> () const </td></tr>
<tr class="memdesc:ae3538252a8c854634fbcddbd3c0b09ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generic accessor to the gate argument containers.  <a href="#ae3538252a8c854634fbcddbd3c0b09ea">More...</a><br /></td></tr>
<tr class="separator:ae3538252a8c854634fbcddbd3c0b09ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0e18a9481c5e712cbb0b0ff27ba72a5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#ab0e18a9481c5e712cbb0b0ff27ba72a5">mark</a> () const </td></tr>
<tr class="memdesc:ab0e18a9481c5e712cbb0b0ff27ba72a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Marks are used for linear traversal of graphs.  <a href="#ab0e18a9481c5e712cbb0b0ff27ba72a5">More...</a><br /></td></tr>
<tr class="separator:ab0e18a9481c5e712cbb0b0ff27ba72a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a241aa5dac9f925a366ecf4defa9a5dd2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#a241aa5dac9f925a366ecf4defa9a5dd2">mark</a> (bool flag)</td></tr>
<tr class="memdesc:a241aa5dac9f925a366ecf4defa9a5dd2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the mark of this gate.  <a href="#a241aa5dac9f925a366ecf4defa9a5dd2">More...</a><br /></td></tr>
<tr class="separator:a241aa5dac9f925a366ecf4defa9a5dd2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06dae52eac3565cda4d1db1bd2ce2fc5"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#a06dae52eac3565cda4d1db1bd2ce2fc5">descendant</a> () const </td></tr>
<tr class="separator:a06dae52eac3565cda4d1db1bd2ce2fc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe79bb8247086a8662edb1729a888933"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#abe79bb8247086a8662edb1729a888933">descendant</a> (int <a class="el" href="classscram_1_1core_1_1Node.xhtml#a62121e217b0da73112af7e07275f2c15">index</a>)</td></tr>
<tr class="memdesc:abe79bb8247086a8662edb1729a888933"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assigns a descendant index of this gate.  <a href="#abe79bb8247086a8662edb1729a888933">More...</a><br /></td></tr>
<tr class="separator:abe79bb8247086a8662edb1729a888933"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a494ab3d0d8df95da09698777d48217d7"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#a494ab3d0d8df95da09698777d48217d7">ancestor</a> ()</td></tr>
<tr class="separator:a494ab3d0d8df95da09698777d48217d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d5c9ee9183653b8e03ca65ab731fd3b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#a1d5c9ee9183653b8e03ca65ab731fd3b">ancestor</a> (int <a class="el" href="classscram_1_1core_1_1Node.xhtml#a62121e217b0da73112af7e07275f2c15">index</a>)</td></tr>
<tr class="memdesc:a1d5c9ee9183653b8e03ca65ab731fd3b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assigns an ancestor index of this gate.  <a href="#a1d5c9ee9183653b8e03ca65ab731fd3b">More...</a><br /></td></tr>
<tr class="separator:a1d5c9ee9183653b8e03ca65ab731fd3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c364d77895d46d04941c170429cd2fe"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#a6c364d77895d46d04941c170429cd2fe">min_time</a> () const override</td></tr>
<tr class="separator:a6c364d77895d46d04941c170429cd2fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f8ced2a5cfbd1744557dfc9ab915d67"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#a1f8ced2a5cfbd1744557dfc9ab915d67">min_time</a> (int time)</td></tr>
<tr class="memdesc:a1f8ced2a5cfbd1744557dfc9ab915d67"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the queried minimum visit time of the sub-graph.  <a href="#a1f8ced2a5cfbd1744557dfc9ab915d67">More...</a><br /></td></tr>
<tr class="separator:a1f8ced2a5cfbd1744557dfc9ab915d67"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42b856b97cb7b3905825a299778c1398"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#a42b856b97cb7b3905825a299778c1398">max_time</a> () const override</td></tr>
<tr class="separator:a42b856b97cb7b3905825a299778c1398"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a959224180c9e540321acf54acef2fabd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#a959224180c9e540321acf54acef2fabd">max_time</a> (int time)</td></tr>
<tr class="memdesc:a959224180c9e540321acf54acef2fabd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the queried maximum visit time of the sub-graph.  <a href="#a959224180c9e540321acf54acef2fabd">More...</a><br /></td></tr>
<tr class="separator:a959224180c9e540321acf54acef2fabd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d070ec20569129162398c73165f65bc"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#a0d070ec20569129162398c73165f65bc">coherent</a> () const </td></tr>
<tr class="separator:a0d070ec20569129162398c73165f65bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0989468c428c9cf0a7f8173c9232b41a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#a0989468c428c9cf0a7f8173c9232b41a">coherent</a> (bool flag)</td></tr>
<tr class="memdesc:a0989468c428c9cf0a7f8173c9232b41a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets a coherence flag for the graph rooted by this gate.  <a href="#a0989468c428c9cf0a7f8173c9232b41a">More...</a><br /></td></tr>
<tr class="separator:a0989468c428c9cf0a7f8173c9232b41a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93fa477d60140843c4abae7de52fffa1"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#a93fa477d60140843c4abae7de52fffa1">module</a> () const </td></tr>
<tr class="separator:a93fa477d60140843c4abae7de52fffa1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4867bebac126b45e2809fb5461e758e0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#a4867bebac126b45e2809fb5461e758e0">module</a> (bool flag)</td></tr>
<tr class="memdesc:a4867bebac126b45e2809fb5461e758e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets this gate's module flag.  <a href="#a4867bebac126b45e2809fb5461e758e0">More...</a><br /></td></tr>
<tr class="separator:a4867bebac126b45e2809fb5461e758e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9623cb8aaa68c2712ac62eb6fa1532fd"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#a9623cb8aaa68c2712ac62eb6fa1532fd">GetArgSign</a> (const <a class="el" href="boolean__graph_8h.xhtml#ab011b41d7b669539d11e5b4030f4d78d">NodePtr</a> &amp;arg) const noexcept</td></tr>
<tr class="memdesc:a9623cb8aaa68c2712ac62eb6fa1532fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Helper function to use the sign of the argument.  <a href="#a9623cb8aaa68c2712ac62eb6fa1532fd">More...</a><br /></td></tr>
<tr class="separator:a9623cb8aaa68c2712ac62eb6fa1532fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80fb65227d2d911e0637d6390f822b79"><td class="memItemLeft" align="right" valign="top"><a class="el" href="boolean__graph_8h.xhtml#ab011b41d7b669539d11e5b4030f4d78d">NodePtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#a80fb65227d2d911e0637d6390f822b79">GetArg</a> (int <a class="el" href="classscram_1_1core_1_1Node.xhtml#a62121e217b0da73112af7e07275f2c15">index</a>) const noexcept</td></tr>
<tr class="memdesc:a80fb65227d2d911e0637d6390f822b79"><td class="mdescLeft">&#160;</td><td class="mdescRight">Helper function for algorithms to get nodes from argument indices.  <a href="#a80fb65227d2d911e0637d6390f822b79">More...</a><br /></td></tr>
<tr class="separator:a80fb65227d2d911e0637d6390f822b79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d45834fabe95a8ec32f97c3cc43c4c2"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:a0d45834fabe95a8ec32f97c3cc43c4c2"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#a0d45834fabe95a8ec32f97c3cc43c4c2">AddArg</a> (int <a class="el" href="classscram_1_1core_1_1Node.xhtml#a62121e217b0da73112af7e07275f2c15">index</a>, const std::shared_ptr&lt; T &gt; &amp;arg) noexcept</td></tr>
<tr class="memdesc:a0d45834fabe95a8ec32f97c3cc43c4c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds an argument node to this gate.  <a href="#a0d45834fabe95a8ec32f97c3cc43c4c2">More...</a><br /></td></tr>
<tr class="separator:a0d45834fabe95a8ec32f97c3cc43c4c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff8127ed74cf083d742ede72b3c422e6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#aff8127ed74cf083d742ede72b3c422e6">TransferArg</a> (int <a class="el" href="classscram_1_1core_1_1Node.xhtml#a62121e217b0da73112af7e07275f2c15">index</a>, const <a class="el" href="boolean__graph_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &amp;recipient) noexcept</td></tr>
<tr class="memdesc:aff8127ed74cf083d742ede72b3c422e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transfers this gate's argument to another gate.  <a href="#aff8127ed74cf083d742ede72b3c422e6">More...</a><br /></td></tr>
<tr class="separator:aff8127ed74cf083d742ede72b3c422e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1094e712f79cb7e54ae2cad296ebcc20"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#a1094e712f79cb7e54ae2cad296ebcc20">ShareArg</a> (int <a class="el" href="classscram_1_1core_1_1Node.xhtml#a62121e217b0da73112af7e07275f2c15">index</a>, const <a class="el" href="boolean__graph_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &amp;recipient) noexcept</td></tr>
<tr class="memdesc:a1094e712f79cb7e54ae2cad296ebcc20"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shares this gate's argument with another gate.  <a href="#a1094e712f79cb7e54ae2cad296ebcc20">More...</a><br /></td></tr>
<tr class="separator:a1094e712f79cb7e54ae2cad296ebcc20"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad60e490f6744a7a33394f8ff77e3d9a1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#ad60e490f6744a7a33394f8ff77e3d9a1">InvertArgs</a> () noexcept</td></tr>
<tr class="memdesc:ad60e490f6744a7a33394f8ff77e3d9a1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Makes all arguments complements of themselves.  <a href="#ad60e490f6744a7a33394f8ff77e3d9a1">More...</a><br /></td></tr>
<tr class="separator:ad60e490f6744a7a33394f8ff77e3d9a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a89ccde99b2c33bb5d323041b70b1a403"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#a89ccde99b2c33bb5d323041b70b1a403">InvertArg</a> (int existing_arg) noexcept</td></tr>
<tr class="memdesc:a89ccde99b2c33bb5d323041b70b1a403"><td class="mdescLeft">&#160;</td><td class="mdescRight">Replaces an argument with the complement of it.  <a href="#a89ccde99b2c33bb5d323041b70b1a403">More...</a><br /></td></tr>
<tr class="separator:a89ccde99b2c33bb5d323041b70b1a403"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb7c7d1264436f419af973286a4b2439"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#afb7c7d1264436f419af973286a4b2439">CoalesceGate</a> (const <a class="el" href="boolean__graph_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &amp;arg_gate) noexcept</td></tr>
<tr class="memdesc:afb7c7d1264436f419af973286a4b2439"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds arguments of an argument gate to this gate.  <a href="#afb7c7d1264436f419af973286a4b2439">More...</a><br /></td></tr>
<tr class="separator:afb7c7d1264436f419af973286a4b2439"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97e099c6298b6f9096546e839066dee4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#a97e099c6298b6f9096546e839066dee4">JoinNullGate</a> (int <a class="el" href="classscram_1_1core_1_1Node.xhtml#a62121e217b0da73112af7e07275f2c15">index</a>) noexcept</td></tr>
<tr class="memdesc:a97e099c6298b6f9096546e839066dee4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Swaps a single argument of a NULL type argument gate.  <a href="#a97e099c6298b6f9096546e839066dee4">More...</a><br /></td></tr>
<tr class="separator:a97e099c6298b6f9096546e839066dee4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1edb26efd1787a3b78e6c982e9491e90"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#a1edb26efd1787a3b78e6c982e9491e90">ProcessConstantArg</a> (const <a class="el" href="boolean__graph_8h.xhtml#ab011b41d7b669539d11e5b4030f4d78d">NodePtr</a> &amp;arg, bool <a class="el" href="classscram_1_1core_1_1Gate.xhtml#afc9ef02a94f1445077f689e599806716">state</a>) noexcept</td></tr>
<tr class="memdesc:a1edb26efd1787a3b78e6c982e9491e90"><td class="mdescLeft">&#160;</td><td class="mdescRight">Changes the state of a gate or removes a constant argument.  <a href="#a1edb26efd1787a3b78e6c982e9491e90">More...</a><br /></td></tr>
<tr class="separator:a1edb26efd1787a3b78e6c982e9491e90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a499891e2b42db9746c9b8f53ef40ee96"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#a499891e2b42db9746c9b8f53ef40ee96">EraseArg</a> (int <a class="el" href="classscram_1_1core_1_1Node.xhtml#a62121e217b0da73112af7e07275f2c15">index</a>) noexcept</td></tr>
<tr class="memdesc:a499891e2b42db9746c9b8f53ef40ee96"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes an argument from the arguments container.  <a href="#a499891e2b42db9746c9b8f53ef40ee96">More...</a><br /></td></tr>
<tr class="separator:a499891e2b42db9746c9b8f53ef40ee96"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73d12e420aa853c4dba99b50cd7d76a6"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a73d12e420aa853c4dba99b50cd7d76a6"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#a73d12e420aa853c4dba99b50cd7d76a6">EraseAllArgs</a> () noexcept</td></tr>
<tr class="memdesc:a73d12e420aa853c4dba99b50cd7d76a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears all the arguments of this gate. <br /></td></tr>
<tr class="separator:a73d12e420aa853c4dba99b50cd7d76a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa11ecbf5ac611640887ca9341c1cfa4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#aaa11ecbf5ac611640887ca9341c1cfa4">Nullify</a> () noexcept</td></tr>
<tr class="memdesc:aaa11ecbf5ac611640887ca9341c1cfa4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the state of this gate to null and clears all its arguments.  <a href="#aaa11ecbf5ac611640887ca9341c1cfa4">More...</a><br /></td></tr>
<tr class="separator:aaa11ecbf5ac611640887ca9341c1cfa4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a694b2bef2414f0ccf15c304390fe9d3f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#a694b2bef2414f0ccf15c304390fe9d3f">MakeUnity</a> () noexcept</td></tr>
<tr class="memdesc:a694b2bef2414f0ccf15c304390fe9d3f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the state of this gate to unity and clears all its arguments.  <a href="#a694b2bef2414f0ccf15c304390fe9d3f">More...</a><br /></td></tr>
<tr class="separator:a694b2bef2414f0ccf15c304390fe9d3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab040c191c1f364e195ba718269e48c56"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:ab040c191c1f364e195ba718269e48c56"><td class="memTemplItemLeft" align="right" valign="top">const <a class="el" href="classscram_1_1core_1_1Gate.xhtml#ae2b61b9c19e6b8abd97c92b9374a49e6">Gate::ArgMap</a>&lt; <a class="el" href="classscram_1_1core_1_1Gate.xhtml">Gate</a> &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#ab040c191c1f364e195ba718269e48c56">args</a> () const </td></tr>
<tr class="separator:ab040c191c1f364e195ba718269e48c56"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd7e4e7d181c7f56608c7c36f20460f0"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:afd7e4e7d181c7f56608c7c36f20460f0"><td class="memTemplItemLeft" align="right" valign="top">const <a class="el" href="classscram_1_1core_1_1Gate.xhtml#ae2b61b9c19e6b8abd97c92b9374a49e6">Gate::ArgMap</a>&lt; <a class="el" href="classscram_1_1core_1_1Variable.xhtml">Variable</a> &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#afd7e4e7d181c7f56608c7c36f20460f0">args</a> () const </td></tr>
<tr class="separator:afd7e4e7d181c7f56608c7c36f20460f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa609aa8e2267d59f61c360903691786a"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:aa609aa8e2267d59f61c360903691786a"><td class="memTemplItemLeft" align="right" valign="top">const <a class="el" href="classscram_1_1core_1_1Gate.xhtml#ae2b61b9c19e6b8abd97c92b9374a49e6">Gate::ArgMap</a>&lt; <a class="el" href="classscram_1_1core_1_1Constant.xhtml">Constant</a> &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml#aa609aa8e2267d59f61c360903691786a">args</a> () const </td></tr>
<tr class="separator:aa609aa8e2267d59f61c360903691786a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classscram_1_1core_1_1Node"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classscram_1_1core_1_1Node')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classscram_1_1core_1_1Node.xhtml">scram::core::Node</a></td></tr>
<tr class="memitem:abad2b0b957b2293afd463ad9322221bd inherit pub_methods_classscram_1_1core_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="abad2b0b957b2293afd463ad9322221bd"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Node.xhtml#abad2b0b957b2293afd463ad9322221bd">Node</a> () noexcept</td></tr>
<tr class="memdesc:abad2b0b957b2293afd463ad9322221bd inherit pub_methods_classscram_1_1core_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a graph node with its index assigned sequentially. <br /></td></tr>
<tr class="separator:abad2b0b957b2293afd463ad9322221bd inherit pub_methods_classscram_1_1core_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3437feaa1260ed4af1d45ac87336514a inherit pub_methods_classscram_1_1core_1_1Node"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Node.xhtml#a3437feaa1260ed4af1d45ac87336514a">Node</a> (int <a class="el" href="classscram_1_1core_1_1Node.xhtml#a62121e217b0da73112af7e07275f2c15">index</a>) noexcept</td></tr>
<tr class="memdesc:a3437feaa1260ed4af1d45ac87336514a inherit pub_methods_classscram_1_1core_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a graph node with its index.  <a href="#a3437feaa1260ed4af1d45ac87336514a">More...</a><br /></td></tr>
<tr class="separator:a3437feaa1260ed4af1d45ac87336514a inherit pub_methods_classscram_1_1core_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4355187379f0f037c3129149b54bb0c inherit pub_methods_classscram_1_1core_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae4355187379f0f037c3129149b54bb0c"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Node.xhtml#ae4355187379f0f037c3129149b54bb0c">~Node</a> ()=0</td></tr>
<tr class="memdesc:ae4355187379f0f037c3129149b54bb0c inherit pub_methods_classscram_1_1core_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Abstract class. <br /></td></tr>
<tr class="separator:ae4355187379f0f037c3129149b54bb0c inherit pub_methods_classscram_1_1core_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62121e217b0da73112af7e07275f2c15 inherit pub_methods_classscram_1_1core_1_1Node"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Node.xhtml#a62121e217b0da73112af7e07275f2c15">index</a> () const </td></tr>
<tr class="separator:a62121e217b0da73112af7e07275f2c15 inherit pub_methods_classscram_1_1core_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b76f2081293edc1cf85ddf8cb2ac2ed inherit pub_methods_classscram_1_1core_1_1Node"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Node.xhtml#a8b76f2081293edc1cf85ddf8cb2ac2ed">order</a> () const </td></tr>
<tr class="separator:a8b76f2081293edc1cf85ddf8cb2ac2ed inherit pub_methods_classscram_1_1core_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afcae304a220783bfa09976a06488f496 inherit pub_methods_classscram_1_1core_1_1Node"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Node.xhtml#afcae304a220783bfa09976a06488f496">order</a> (int val)</td></tr>
<tr class="memdesc:afcae304a220783bfa09976a06488f496 inherit pub_methods_classscram_1_1core_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the order number for this node.  <a href="#afcae304a220783bfa09976a06488f496">More...</a><br /></td></tr>
<tr class="separator:afcae304a220783bfa09976a06488f496 inherit pub_methods_classscram_1_1core_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90ef93c4b0667215d2a8c3a3eb4f3822 inherit pub_methods_classscram_1_1core_1_1Node"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Node.xhtml#a90ef93c4b0667215d2a8c3a3eb4f3822">opti_value</a> () const </td></tr>
<tr class="separator:a90ef93c4b0667215d2a8c3a3eb4f3822 inherit pub_methods_classscram_1_1core_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ec19e49ac7a1e7f5dc9eeaf35489677 inherit pub_methods_classscram_1_1core_1_1Node"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Node.xhtml#a3ec19e49ac7a1e7f5dc9eeaf35489677">opti_value</a> (int val)</td></tr>
<tr class="memdesc:a3ec19e49ac7a1e7f5dc9eeaf35489677 inherit pub_methods_classscram_1_1core_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the optimization value for failure propagation.  <a href="#a3ec19e49ac7a1e7f5dc9eeaf35489677">More...</a><br /></td></tr>
<tr class="separator:a3ec19e49ac7a1e7f5dc9eeaf35489677 inherit pub_methods_classscram_1_1core_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54799feee1f1e91f848d11f3918e3e88 inherit pub_methods_classscram_1_1core_1_1Node"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Node.xhtml#a54799feee1f1e91f848d11f3918e3e88">Visit</a> (int time)</td></tr>
<tr class="memdesc:a54799feee1f1e91f848d11f3918e3e88 inherit pub_methods_classscram_1_1core_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Registers the visit time for this node upon graph traversal.  <a href="#a54799feee1f1e91f848d11f3918e3e88">More...</a><br /></td></tr>
<tr class="separator:a54799feee1f1e91f848d11f3918e3e88 inherit pub_methods_classscram_1_1core_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f716d86c7aada98bd809513c29abf38 inherit pub_methods_classscram_1_1core_1_1Node"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Node.xhtml#a4f716d86c7aada98bd809513c29abf38">EnterTime</a> () const </td></tr>
<tr class="separator:a4f716d86c7aada98bd809513c29abf38 inherit pub_methods_classscram_1_1core_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63668c49f42adbd4c53b923deb2d37d2 inherit pub_methods_classscram_1_1core_1_1Node"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Node.xhtml#a63668c49f42adbd4c53b923deb2d37d2">ExitTime</a> () const </td></tr>
<tr class="separator:a63668c49f42adbd4c53b923deb2d37d2 inherit pub_methods_classscram_1_1core_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aedd3c10c67c74fcf3bbcbaf376a41ece inherit pub_methods_classscram_1_1core_1_1Node"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Node.xhtml#aedd3c10c67c74fcf3bbcbaf376a41ece">LastVisit</a> () const </td></tr>
<tr class="separator:aedd3c10c67c74fcf3bbcbaf376a41ece inherit pub_methods_classscram_1_1core_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb516222fe7d06983d42a003cf9b6644 inherit pub_methods_classscram_1_1core_1_1Node"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Node.xhtml#acb516222fe7d06983d42a003cf9b6644">Revisited</a> () const </td></tr>
<tr class="separator:acb516222fe7d06983d42a003cf9b6644 inherit pub_methods_classscram_1_1core_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ea9d7d671af3d7bfbf64883a8a1fa8b inherit pub_methods_classscram_1_1core_1_1Node"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Node.xhtml#a0ea9d7d671af3d7bfbf64883a8a1fa8b">Visited</a> () const </td></tr>
<tr class="separator:a0ea9d7d671af3d7bfbf64883a8a1fa8b inherit pub_methods_classscram_1_1core_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a969e8713d5f62a273e4596ed85833e10 inherit pub_methods_classscram_1_1core_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a969e8713d5f62a273e4596ed85833e10"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Node.xhtml#a969e8713d5f62a273e4596ed85833e10">ClearVisits</a> ()</td></tr>
<tr class="memdesc:a969e8713d5f62a273e4596ed85833e10 inherit pub_methods_classscram_1_1core_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears all the visit information. Resets the visit times to 0s. <br /></td></tr>
<tr class="separator:a969e8713d5f62a273e4596ed85833e10 inherit pub_methods_classscram_1_1core_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae24a234f5ebf9079fb3a35cf2d64add0 inherit pub_methods_classscram_1_1core_1_1Node"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Node.xhtml#ae24a234f5ebf9079fb3a35cf2d64add0">pos_count</a> () const </td></tr>
<tr class="separator:ae24a234f5ebf9079fb3a35cf2d64add0 inherit pub_methods_classscram_1_1core_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53c85d665b6085bb701cac55fac47925 inherit pub_methods_classscram_1_1core_1_1Node"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Node.xhtml#a53c85d665b6085bb701cac55fac47925">neg_count</a> () const </td></tr>
<tr class="separator:a53c85d665b6085bb701cac55fac47925 inherit pub_methods_classscram_1_1core_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1459f8233fd1bd77e232371394913fcf inherit pub_methods_classscram_1_1core_1_1Node"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Node.xhtml#a1459f8233fd1bd77e232371394913fcf">AddCount</a> (bool positive)</td></tr>
<tr class="memdesc:a1459f8233fd1bd77e232371394913fcf inherit pub_methods_classscram_1_1core_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increases the count of this node.  <a href="#a1459f8233fd1bd77e232371394913fcf">More...</a><br /></td></tr>
<tr class="separator:a1459f8233fd1bd77e232371394913fcf inherit pub_methods_classscram_1_1core_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e6a05a10f46344880be277d40fc89b1 inherit pub_methods_classscram_1_1core_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7e6a05a10f46344880be277d40fc89b1"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Node.xhtml#a7e6a05a10f46344880be277d40fc89b1">ResetCount</a> ()</td></tr>
<tr class="memdesc:a7e6a05a10f46344880be277d40fc89b1 inherit pub_methods_classscram_1_1core_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resets positive and negative counts of this node. <br /></td></tr>
<tr class="separator:a7e6a05a10f46344880be277d40fc89b1 inherit pub_methods_classscram_1_1core_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classscram_1_1core_1_1NodeParentManager"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classscram_1_1core_1_1NodeParentManager')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classscram_1_1core_1_1NodeParentManager.xhtml">scram::core::NodeParentManager</a></td></tr>
<tr class="memitem:a6fca1af860a85acc2907699d1d1be716 inherit pub_methods_classscram_1_1core_1_1NodeParentManager"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classscram_1_1core_1_1NodeParentManager.xhtml#ac2161011c8bfcc49665495f70bca3de1">ParentMap</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1NodeParentManager.xhtml#a6fca1af860a85acc2907699d1d1be716">parents</a> () const </td></tr>
<tr class="separator:a6fca1af860a85acc2907699d1d1be716 inherit pub_methods_classscram_1_1core_1_1NodeParentManager"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_classscram_1_1core_1_1Node"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classscram_1_1core_1_1Node')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="classscram_1_1core_1_1Node.xhtml">scram::core::Node</a></td></tr>
<tr class="memitem:a9ce6bb075f348e9913476fb8c7d3fa8e inherit pub_static_methods_classscram_1_1core_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9ce6bb075f348e9913476fb8c7d3fa8e"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Node.xhtml#a9ce6bb075f348e9913476fb8c7d3fa8e">ResetIndex</a> ()</td></tr>
<tr class="memdesc:a9ce6bb075f348e9913476fb8c7d3fa8e inherit pub_static_methods_classscram_1_1core_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resets the starting index. <br /></td></tr>
<tr class="separator:a9ce6bb075f348e9913476fb8c7d3fa8e inherit pub_static_methods_classscram_1_1core_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>An indexed gate for use in <a class="el" href="classscram_1_1core_1_1BooleanGraph.xhtml" title="BooleanGraph is a propositional directed acyclic graph (PDAG). ">BooleanGraph</a>. </p>
<p>Initially this gate can represent any type of gate or logic; however, this gate can be only of OR and AND type at the end of all simplifications and processing. This gate class helps process the fault tree before any complex analysis is done. </p>

<p>Definition at line <a class="el" href="boolean__graph_8h_source.xhtml#l00302">302</a> of file <a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a class="anchor" id="a9f420fb29f38ac48bde786a55de3d87c"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classscram_1_1core_1_1Gate.xhtml#a9f420fb29f38ac48bde786a55de3d87c">scram::core::Gate::Arg</a> =  std::pair&lt;int, std::shared_ptr&lt;T&gt;&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>An argument entry type in the gate's argument containers. </p>
<p>The entry contains the positive or negative index (indicating a complement) and the pointer to the argument node.</p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">T</td><td>The type of the argument node. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="boolean__graph_8h_source.xhtml#l00311">311</a> of file <a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>.</p>

</div>
</div>
<a class="anchor" id="ae2b61b9c19e6b8abd97c92b9374a49e6"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classscram_1_1core_1_1Gate.xhtml#ae2b61b9c19e6b8abd97c92b9374a49e6">scram::core::Gate::ArgMap</a> =  <a class="el" href="classext_1_1linear__map.xhtml">ext::linear_map</a>&lt;int, std::shared_ptr&lt;T&gt;, <a class="el" href="structext_1_1MoveEraser.xhtml">ext::MoveEraser</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>An associative container type to store the gate arguments. </p>
<p>This container type maps the index of the argument to the pointer to it.</p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">T</td><td>The type of the argument node. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="boolean__graph_8h_source.xhtml#l00318">318</a> of file <a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a2a901d4ed71defc249a88163241f3798"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">scram::core::Gate::Gate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="boolean__graph_8h.xhtml#ad4c053147ae98b76f12620441f6d3800">Operator</a>&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">explicit</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates an indexed gate with its unique index. </p>
<p>It is assumed that smart pointers are used to manage the graph, and one shared pointer exists for this gate to manage parent-child hierarchy.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">type</td><td>The type of this gate. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="boolean__graph_8cc_source.xhtml#l00065">65</a> of file <a class="el" href="boolean__graph_8cc_source.xhtml">boolean_graph.cc</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a9f9390cdf7bfb3c552a7ef843629ddc0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="boolean__graph_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> scram::core::Gate::Clone </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Clones arguments and parameters. </p>
<p>The semantics of the gate is cloned, not the gate data like index and parents.</p>
<dl class="section return"><dt>Returns</dt><dd>Shared pointer to a newly created gate.</dd></dl>
<dl class="section warning"><dt>Warning</dt><dd>This function does not destroy modules. If cloning destroys modules, module(false) member function must be called. </dd></dl>

<p>Definition at line <a class="el" href="boolean__graph_8cc_source.xhtml#l00077">77</a> of file <a class="el" href="boolean__graph_8cc_source.xhtml">boolean_graph.cc</a>.</p>

<p>References <a class="el" href="logger_8h_source.xhtml#l00059">BLOG</a>, <a class="el" href="logger_8h_source.xhtml#l00076">scram::DEBUG5</a>, and <a class="el" href="boolean__graph_8h_source.xhtml#l00123">scram::core::Node::index()</a>.</p>

<p><div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Gate_a9f9390cdf7bfb3c552a7ef843629ddc0_cgraph.svg" width="332" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ad5a5766ce9dbbd2104c0bb07b9639a48"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="boolean__graph_8h.xhtml#ad4c053147ae98b76f12620441f6d3800">Operator</a> scram::core::Gate::type </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Type of this gate. </dd></dl>

<p>Definition at line <a class="el" href="boolean__graph_8h_source.xhtml#l00349">349</a> of file <a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>.</p>

<p>Referenced by <a class="el" href="zbdd_8cc_source.xhtml#l00238">scram::core::Zbdd::FindOrAddVertex()</a>, <a class="el" href="preprocessor_8cc_source.xhtml#l00136">scram::core::Preprocessor::GateSet::insert()</a>, <a class="el" href="bdd_8cc_source.xhtml#l00101">scram::core::Bdd::products()</a>, and <a class="el" href="zbdd_8cc_source.xhtml#l00114">scram::core::Zbdd::Zbdd()</a>.</p>

<p><div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Gate_ad5a5766ce9dbbd2104c0bb07b9639a48_icgraph.svg" width="399" height="244"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a5941da008c247b76525253cd02324c82"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void scram::core::Gate::type </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="boolean__graph_8h.xhtml#ad4c053147ae98b76f12620441f6d3800">Operator</a>&#160;</td>
          <td class="paramname"><em>t</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Changes the gate type information. </p>
<p>This function is expected to be used with only simple AND, OR, NOT, NULL gates.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">t</td><td>The type for this gate. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="boolean__graph_8h_source.xhtml#l00356">356</a> of file <a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>.</p>

<p>References <a class="el" href="boolean__graph_8h_source.xhtml#l00273">scram::core::kAnd</a>, <a class="el" href="boolean__graph_8h_source.xhtml#l00277">scram::core::kNot</a>, <a class="el" href="boolean__graph_8h_source.xhtml#l00280">scram::core::kNull</a>, and <a class="el" href="boolean__graph_8h_source.xhtml#l00274">scram::core::kOr</a>.</p>

</div>
</div>
<a class="anchor" id="a44b9a758151d932743543241ca669517"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int scram::core::Gate::vote_number </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Vote number.</dd></dl>
<dl class="section warning"><dt>Warning</dt><dd>The function does not validate the vote number, nor does it check for the VOTE type of the gate. </dd></dl>

<p>Definition at line <a class="el" href="boolean__graph_8h_source.xhtml#l00365">365</a> of file <a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>.</p>

<p>Referenced by <a class="el" href="preprocessor_8cc_source.xhtml#l00136">scram::core::Preprocessor::GateSet::insert()</a>.</p>

<p><div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Gate_a44b9a758151d932743543241ca669517_icgraph.svg" width="370" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a6e1504bb0c5673a3f7cdc44bdb79b4ce"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void scram::core::Gate::vote_number </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>number</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the vote number for this gate. </p>
<p>This function is used for K/N gates.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">number</td><td>The vote number of VOTE gate.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section warning"><dt>Warning</dt><dd>The function does not validate the vote number, nor does it check for the VOTE type of the gate. </dd></dl>

<p>Definition at line <a class="el" href="boolean__graph_8h_source.xhtml#l00374">374</a> of file <a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>.</p>

</div>
</div>
<a class="anchor" id="afc9ef02a94f1445077f689e599806716"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="boolean__graph_8h.xhtml#ac030b66fb750e5de6987fe8c5201b008">State</a> scram::core::Gate::state </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The state of this gate. </dd></dl>

<p>Definition at line <a class="el" href="boolean__graph_8h_source.xhtml#l00377">377</a> of file <a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>.</p>

</div>
</div>
<a class="anchor" id="aeaaa462ccbdef3cb95d70d966ce1740a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool scram::core::Gate::IsConstant </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>true if this gate has become constant. </dd></dl>

<p>Definition at line <a class="el" href="boolean__graph_8h_source.xhtml#l00380">380</a> of file <a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>.</p>

<p>References <a class="el" href="boolean__graph_8h_source.xhtml#l00291">scram::core::kNormalState</a>.</p>

<p>Referenced by <a class="el" href="zbdd_8cc_source.xhtml#l00238">scram::core::Zbdd::FindOrAddVertex()</a>, <a class="el" href="preprocessor_8cc_source.xhtml#l00136">scram::core::Preprocessor::GateSet::insert()</a>, <a class="el" href="bdd_8cc_source.xhtml#l00101">scram::core::Bdd::products()</a>, and <a class="el" href="zbdd_8cc_source.xhtml#l00114">scram::core::Zbdd::Zbdd()</a>.</p>

<p><div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Gate_aeaaa462ccbdef3cb95d70d966ce1740a_icgraph.svg" width="374" height="244"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="aa793eeaa12244c5b39a0d80e5b1518ae"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classscram_1_1core_1_1Gate.xhtml#ac9970e696aec8b505474676dfc4d34a7">ArgSet</a>&amp; scram::core::Gate::args </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The ordered set of argument indices of this gate. </dd></dl>

<p>Definition at line <a class="el" href="boolean__graph_8h_source.xhtml#l00383">383</a> of file <a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>.</p>

<p>Referenced by <a class="el" href="zbdd_8cc_source.xhtml#l00238">scram::core::Zbdd::FindOrAddVertex()</a>, <a class="el" href="preprocessor_8cc_source.xhtml#l01950">scram::core::Preprocessor::GatherCommonNodes()</a>, <a class="el" href="preprocessor_8cc_source.xhtml#l01213">scram::core::Preprocessor::GatherModules()</a>, <a class="el" href="preprocessor_8cc_source.xhtml#l00136">scram::core::Preprocessor::GateSet::insert()</a>, <a class="el" href="mocus_8cc_source.xhtml#l00060">scram::core::Mocus::products()</a>, and <a class="el" href="bdd_8cc_source.xhtml#l00101">scram::core::Bdd::products()</a>.</p>

<p><div id="dynsection-5" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-5-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-5-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-5-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Gate_aa793eeaa12244c5b39a0d80e5b1518ae_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ae3538252a8c854634fbcddbd3c0b09ea"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classscram_1_1core_1_1Gate.xhtml#ae2b61b9c19e6b8abd97c92b9374a49e6">ArgMap</a>&lt;T&gt;&amp; scram::core::Gate::args </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Generic accessor to the gate argument containers. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">T</td><td>The type of the argument nodes.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The map container of the gate arguments with the given type. </dd></dl>

</div>
</div>
<a class="anchor" id="ab0e18a9481c5e712cbb0b0ff27ba72a5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool scram::core::Gate::mark </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Marks are used for linear traversal of graphs. </p>
<p>This can be an alternative to visit information provided by the base <a class="el" href="classscram_1_1core_1_1Node.xhtml" title="An abstract base class that represents a node in a Boolean graph. ">Node</a> class.</p>
<dl class="section return"><dt>Returns</dt><dd>The mark of this gate. </dd></dl>

<p>Definition at line <a class="el" href="boolean__graph_8h_source.xhtml#l00398">398</a> of file <a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>.</p>

<p>Referenced by <a class="el" href="preprocessor_8cc_source.xhtml#l01213">scram::core::Preprocessor::GatherModules()</a>, and <a class="el" href="preprocessor_8cc_source.xhtml#l00136">scram::core::Preprocessor::GateSet::insert()</a>.</p>

<p><div id="dynsection-6" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-6-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-6-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-6-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Gate_ab0e18a9481c5e712cbb0b0ff27ba72a5_icgraph.svg" width="623" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a241aa5dac9f925a366ecf4defa9a5dd2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void scram::core::Gate::mark </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>flag</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the mark of this gate. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">flag</td><td>Marking with the meaning for the marker. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="boolean__graph_8h_source.xhtml#l00403">403</a> of file <a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>.</p>

</div>
</div>
<a class="anchor" id="a06dae52eac3565cda4d1db1bd2ce2fc5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int scram::core::Gate::descendant </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Pre-assigned index of one of gate's descendants. </dd></dl>

<p>Definition at line <a class="el" href="boolean__graph_8h_source.xhtml#l00406">406</a> of file <a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>.</p>

<p>Referenced by <a class="el" href="preprocessor_8cc_source.xhtml#l02297">scram::core::Preprocessor::DecompositionProcessor::operator()()</a>.</p>

<p><div id="dynsection-7" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-7-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-7-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-7-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Gate_a06dae52eac3565cda4d1db1bd2ce2fc5_icgraph.svg" width="370" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="abe79bb8247086a8662edb1729a888933"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void scram::core::Gate::descendant </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Assigns a descendant index of this gate. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td>Index of the descendant. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="boolean__graph_8h_source.xhtml#l00411">411</a> of file <a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>.</p>

</div>
</div>
<a class="anchor" id="a494ab3d0d8df95da09698777d48217d7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int scram::core::Gate::ancestor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Pre-assigned index of one of the gate's ancestors. </dd></dl>

<p>Definition at line <a class="el" href="boolean__graph_8h_source.xhtml#l00414">414</a> of file <a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>.</p>

</div>
</div>
<a class="anchor" id="a1d5c9ee9183653b8e03ca65ab731fd3b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void scram::core::Gate::ancestor </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Assigns an ancestor index of this gate. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td>Index of the ancestor. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="boolean__graph_8h_source.xhtml#l00419">419</a> of file <a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>.</p>

</div>
</div>
<a class="anchor" id="a6c364d77895d46d04941c170429cd2fe"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int scram::core::Gate::min_time </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The minimum time of visits of the gate's sub-graph. </dd>
<dd>
0 if no time assignment was performed. </dd></dl>

<p>Reimplemented from <a class="el" href="classscram_1_1core_1_1Node.xhtml#ac67bde11b4c9e7deeb787dc2d5bafb43">scram::core::Node</a>.</p>

<p>Definition at line <a class="el" href="boolean__graph_8h_source.xhtml#l00423">423</a> of file <a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>.</p>

</div>
</div>
<a class="anchor" id="a1f8ced2a5cfbd1744557dfc9ab915d67"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void scram::core::Gate::min_time </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>time</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the queried minimum visit time of the sub-graph. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">time</td><td>The positive min time of this gate's sub-graph. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="boolean__graph_8h_source.xhtml#l00428">428</a> of file <a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>.</p>

</div>
</div>
<a class="anchor" id="a42b856b97cb7b3905825a299778c1398"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int scram::core::Gate::max_time </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The maximum time of the visits of the gate's sub-graph. </dd>
<dd>
0 if no time assignment was performed. </dd></dl>

<p>Reimplemented from <a class="el" href="classscram_1_1core_1_1Node.xhtml#a2e25a793734037d8d5a2ab1945dbe4d1">scram::core::Node</a>.</p>

<p>Definition at line <a class="el" href="boolean__graph_8h_source.xhtml#l00435">435</a> of file <a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>.</p>

</div>
</div>
<a class="anchor" id="a959224180c9e540321acf54acef2fabd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void scram::core::Gate::max_time </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>time</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the queried maximum visit time of the sub-graph. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">time</td><td>The positive max time of this gate's sub-graph. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="boolean__graph_8h_source.xhtml#l00440">440</a> of file <a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>.</p>

</div>
</div>
<a class="anchor" id="a0d070ec20569129162398c73165f65bc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool scram::core::Gate::coherent </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>true if the whole graph of this gate is marked coherent. </dd></dl>

<p>Definition at line <a class="el" href="boolean__graph_8h_source.xhtml#l00446">446</a> of file <a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>.</p>

<p>Referenced by <a class="el" href="zbdd_8cc_source.xhtml#l00238">scram::core::Zbdd::FindOrAddVertex()</a>, <a class="el" href="mocus_8cc_source.xhtml#l00060">scram::core::Mocus::products()</a>, <a class="el" href="bdd_8cc_source.xhtml#l00101">scram::core::Bdd::products()</a>, and <a class="el" href="zbdd_8cc_source.xhtml#l00114">scram::core::Zbdd::Zbdd()</a>.</p>

<p><div id="dynsection-8" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-8-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-8-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-8-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Gate_a0d070ec20569129162398c73165f65bc_icgraph.svg" width="374" height="244"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a0989468c428c9cf0a7f8173c9232b41a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void scram::core::Gate::coherent </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>flag</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets a coherence flag for the graph rooted by this gate. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">flag</td><td>true if the whole graph is coherent. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="boolean__graph_8h_source.xhtml#l00451">451</a> of file <a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>.</p>

</div>
</div>
<a class="anchor" id="a93fa477d60140843c4abae7de52fffa1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool scram::core::Gate::module </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>true if this gate is set to be a module. </dd></dl>

<p>Definition at line <a class="el" href="boolean__graph_8h_source.xhtml#l00454">454</a> of file <a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>.</p>

<p>Referenced by <a class="el" href="zbdd_8cc_source.xhtml#l00238">scram::core::Zbdd::FindOrAddVertex()</a>, <a class="el" href="mocus_8cc_source.xhtml#l00060">scram::core::Mocus::products()</a>, <a class="el" href="bdd_8cc_source.xhtml#l00101">scram::core::Bdd::products()</a>, and <a class="el" href="zbdd_8cc_source.xhtml#l00114">scram::core::Zbdd::Zbdd()</a>.</p>

<p><div id="dynsection-9" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-9-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-9-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-9-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Gate_a93fa477d60140843c4abae7de52fffa1_icgraph.svg" width="374" height="244"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a4867bebac126b45e2809fb5461e758e0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void scram::core::Gate::module </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>flag</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets this gate's module flag. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">flag</td><td>true for modular gates.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section pre"><dt>Precondition</dt><dd>The gate has already been marked with an opposite flag. </dd></dl>

<p>Definition at line <a class="el" href="boolean__graph_8h_source.xhtml#l00461">461</a> of file <a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>.</p>

</div>
</div>
<a class="anchor" id="a9623cb8aaa68c2712ac62eb6fa1532fd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int scram::core::Gate::GetArgSign </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="boolean__graph_8h.xhtml#ab011b41d7b669539d11e5b4030f4d78d">NodePtr</a> &amp;&#160;</td>
          <td class="paramname"><em>arg</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Helper function to use the sign of the argument. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">arg</td><td>One of the arguments of this gate.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if the argument is positive. </dd>
<dd>
-1 if the argument is negative (complement).</dd></dl>
<dl class="section warning"><dt>Warning</dt><dd>The function assumes that the argument exists. If it doesn't, the return value is invalid. </dd></dl>

<p>Definition at line <a class="el" href="boolean__graph_8h_source.xhtml#l00475">475</a> of file <a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>.</p>

</div>
</div>
<a class="anchor" id="a80fb65227d2d911e0637d6390f822b79"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="boolean__graph_8h.xhtml#ab011b41d7b669539d11e5b4030f4d78d">NodePtr</a> scram::core::Gate::GetArg </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Helper function for algorithms to get nodes from argument indices. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td>Positive or negative index of the existing argument.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Pointer to the argument node of this gate.</dd></dl>
<dl class="section warning"><dt>Warning</dt><dd>The function assumes that the argument exists. If it doesn't, the behavior is undefined. </dd>
<dd>
Never try to use dynamic casts to find the type of the node. There are other gate's helper functions that will avoid any need for the RTTI or other hacks. </dd></dl>

<p>Definition at line <a class="el" href="boolean__graph_8h_source.xhtml#l00492">492</a> of file <a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>.</p>

</div>
</div>
<a class="anchor" id="a0d45834fabe95a8ec32f97c3cc43c4c2"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void scram::core::Gate::AddArg </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::shared_ptr&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>arg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds an argument node to this gate. </p>
<p>Before adding the argument, the existing arguments are checked for complements and duplicates. If there is a complement, the gate may change its state (erasing its arguments) or type.</p>
<p>The duplicates are handled according to the logic of the gate. The caller must be aware of possible changes due to the logic of the gate.</p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">T</td><td>The type of the argument node.</td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td>A positive or negative index of an argument. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">arg</td><td>A pointer to the argument node.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section warning"><dt>Warning</dt><dd>The function does not indicate invalid state. For example, a second argument for NOT or NULL type gates is not going to be reported in any way. </dd>
<dd>
This function does not indicate error for future additions in case the state is nulled or becomes unity. </dd>
<dd>
Duplicate arguments may change the type and state of the gate. Depending on the logic of the gate, new gates may be introduced instead of the existing arguments. </dd>
<dd>
Complex logic gates like VOTE and XOR are handled specially if the argument is duplicate. The caller must be very cautious of the side effects of the manipulations. </dd></dl>

<p>Definition at line <a class="el" href="boolean__graph_8h_source.xhtml#l00535">535</a> of file <a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>.</p>

<p>References <a class="el" href="boolean__graph_8h_source.xhtml#l00291">scram::core::kNormalState</a>, <a class="el" href="boolean__graph_8h_source.xhtml#l00277">scram::core::kNot</a>, <a class="el" href="boolean__graph_8h_source.xhtml#l00280">scram::core::kNull</a>, and <a class="el" href="boolean__graph_8h_source.xhtml#l00276">scram::core::kXor</a>.</p>

</div>
</div>
<a class="anchor" id="aff8127ed74cf083d742ede72b3c422e6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void scram::core::Gate::TransferArg </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="boolean__graph_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &amp;&#160;</td>
          <td class="paramname"><em>recipient</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Transfers this gate's argument to another gate. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td>Positive or negative index of the argument. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">recipient</td><td>A new parent for the argument.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section pre"><dt>Precondition</dt><dd>No constant arguments are present. </dd></dl>

<p>Definition at line <a class="el" href="boolean__graph_8cc_source.xhtml#l00097">97</a> of file <a class="el" href="boolean__graph_8cc_source.xhtml">boolean_graph.cc</a>.</p>

<p>References <a class="el" href="boolean__graph_8h_source.xhtml#l00123">scram::core::Node::index()</a>.</p>

<p><div id="dynsection-10" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-10-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-10-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-10-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Gate_aff8127ed74cf083d742ede72b3c422e6_cgraph.svg" width="332" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a1094e712f79cb7e54ae2cad296ebcc20"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void scram::core::Gate::ShareArg </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="boolean__graph_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &amp;&#160;</td>
          <td class="paramname"><em>recipient</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Shares this gate's argument with another gate. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td>Positive or negative index of the argument. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">recipient</td><td>Another parent for the argument.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section pre"><dt>Precondition</dt><dd>No constant arguments are present. </dd></dl>

<p>Definition at line <a class="el" href="boolean__graph_8cc_source.xhtml#l00116">116</a> of file <a class="el" href="boolean__graph_8cc_source.xhtml">boolean_graph.cc</a>.</p>

</div>
</div>
<a class="anchor" id="ad60e490f6744a7a33394f8ff77e3d9a1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void scram::core::Gate::InvertArgs </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Makes all arguments complements of themselves. </p>
<p>This is a helper function to propagate a complement gate and apply the De Morgan's Law.</p>
<dl class="section pre"><dt>Precondition</dt><dd>No constant arguments are present. </dd></dl>

<p>Definition at line <a class="el" href="boolean__graph_8cc_source.xhtml#l00127">127</a> of file <a class="el" href="boolean__graph_8cc_source.xhtml">boolean_graph.cc</a>.</p>

</div>
</div>
<a class="anchor" id="a89ccde99b2c33bb5d323041b70b1a403"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void scram::core::Gate::InvertArg </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>existing_arg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Replaces an argument with the complement of it. </p>
<p>This is a helper function to propagate a complement gate and apply the De Morgan's Law.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">existing_arg</td><td>Positive or negative index of the argument.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section pre"><dt>Precondition</dt><dd>No constant arguments are present. </dd></dl>

<p>Definition at line <a class="el" href="boolean__graph_8cc_source.xhtml#l00140">140</a> of file <a class="el" href="boolean__graph_8cc_source.xhtml">boolean_graph.cc</a>.</p>

</div>
</div>
<a class="anchor" id="afb7c7d1264436f419af973286a4b2439"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void scram::core::Gate::CoalesceGate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="boolean__graph_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">GatePtr</a> &amp;&#160;</td>
          <td class="paramname"><em>arg_gate</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds arguments of an argument gate to this gate. </p>
<p>This is a helper function for gate coalescing. The argument gate of the same logic is removed from the arguments list. The sign of the argument gate is expected to be positive.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">arg_gate</td><td>The gate which arguments to be added to this gate.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section pre"><dt>Precondition</dt><dd>No constant arguments are present.</dd></dl>
<dl class="section warning"><dt>Warning</dt><dd>This function does not test if the parent and argument logics are correct for coalescing. </dd></dl>

<p>Definition at line <a class="el" href="boolean__graph_8cc_source.xhtml#l00157">157</a> of file <a class="el" href="boolean__graph_8cc_source.xhtml">boolean_graph.cc</a>.</p>

<p>References <a class="el" href="boolean__graph_8h_source.xhtml#l00123">scram::core::Node::index()</a>, and <a class="el" href="boolean__graph_8h_source.xhtml#l00291">scram::core::kNormalState</a>.</p>

<p><div id="dynsection-11" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-11-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-11-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-11-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Gate_afb7c7d1264436f419af973286a4b2439_cgraph.svg" width="332" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a97e099c6298b6f9096546e839066dee4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void scram::core::Gate::JoinNullGate </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Swaps a single argument of a NULL type argument gate. </p>
<p>This is separate from other coalescing functions because this function takes into account the sign of the argument.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td>Positive or negative index of the argument gate. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="boolean__graph_8cc_source.xhtml#l00179">179</a> of file <a class="el" href="boolean__graph_8cc_source.xhtml">boolean_graph.cc</a>.</p>

<p>References <a class="el" href="boolean__graph_8h_source.xhtml#l00123">scram::core::Node::index()</a>, and <a class="el" href="boolean__graph_8h_source.xhtml#l00280">scram::core::kNull</a>.</p>

<p><div id="dynsection-12" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-12-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-12-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-12-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Gate_a97e099c6298b6f9096546e839066dee4_cgraph.svg" width="332" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a1edb26efd1787a3b78e6c982e9491e90"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void scram::core::Gate::ProcessConstantArg </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="boolean__graph_8h.xhtml#ab011b41d7b669539d11e5b4030f4d78d">NodePtr</a> &amp;&#160;</td>
          <td class="paramname"><em>arg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>state</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Changes the state of a gate or removes a constant argument. </p>
<p>The function determines its actions depending on the type of a gate and state of an argument.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">arg</td><td>The pointer the argument of this gate. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">state</td><td>False or True constant state of the argument.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>This is a helper function that propagates constants. </dd>
<dd>
This function takes into account the sign of the index to properly assess the Boolean constant argument. </dd>
<dd>
This function may change the state of the gate. </dd>
<dd>
This function may change type and parameters of the gate. </dd></dl>

<p>Definition at line <a class="el" href="boolean__graph_8cc_source.xhtml#l00206">206</a> of file <a class="el" href="boolean__graph_8cc_source.xhtml">boolean_graph.cc</a>.</p>

<p>References <a class="el" href="boolean__graph_8h_source.xhtml#l00273">scram::core::kAnd</a>, <a class="el" href="boolean__graph_8h_source.xhtml#l00278">scram::core::kNand</a>, <a class="el" href="boolean__graph_8h_source.xhtml#l00279">scram::core::kNor</a>, <a class="el" href="boolean__graph_8h_source.xhtml#l00277">scram::core::kNot</a>, <a class="el" href="boolean__graph_8h_source.xhtml#l00280">scram::core::kNull</a>, <a class="el" href="boolean__graph_8h_source.xhtml#l00274">scram::core::kOr</a>, <a class="el" href="boolean__graph_8h_source.xhtml#l00275">scram::core::kVote</a>, and <a class="el" href="boolean__graph_8h_source.xhtml#l00276">scram::core::kXor</a>.</p>

</div>
</div>
<a class="anchor" id="a499891e2b42db9746c9b8f53ef40ee96"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void scram::core::Gate::EraseArg </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Removes an argument from the arguments container. </p>
<p>The passed argument index must be in this gate's arguments container and initialized.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td>The positive or negative index of the existing argument.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section warning"><dt>Warning</dt><dd>The parent gate may become empty or one-argument gate, which must be handled by the caller. </dd></dl>

<p>Definition at line <a class="el" href="boolean__graph_8cc_source.xhtml#l00292">292</a> of file <a class="el" href="boolean__graph_8cc_source.xhtml">boolean_graph.cc</a>.</p>

<p>References <a class="el" href="boolean__graph_8h_source.xhtml#l00123">scram::core::Node::index()</a>.</p>

<p><div id="dynsection-13" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-13-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-13-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-13-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classscram_1_1core_1_1Gate_a499891e2b42db9746c9b8f53ef40ee96_cgraph.svg" width="332" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="aaa11ecbf5ac611640887ca9341c1cfa4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void scram::core::Gate::Nullify </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the state of this gate to null and clears all its arguments. </p>
<p>This function is expected to be used only once. </p>

<p>Definition at line <a class="el" href="boolean__graph_8h_source.xhtml#l00638">638</a> of file <a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>.</p>

<p>References <a class="el" href="boolean__graph_8h_source.xhtml#l00291">scram::core::kNormalState</a>, and <a class="el" href="boolean__graph_8h_source.xhtml#l00292">scram::core::kNullState</a>.</p>

</div>
</div>
<a class="anchor" id="a694b2bef2414f0ccf15c304390fe9d3f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void scram::core::Gate::MakeUnity </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the state of this gate to unity and clears all its arguments. </p>
<p>This function is expected to be used only once. </p>

<p>Definition at line <a class="el" href="boolean__graph_8h_source.xhtml#l00647">647</a> of file <a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>.</p>

<p>References <a class="el" href="boolean__graph_8h_source.xhtml#l00291">scram::core::kNormalState</a>, and <a class="el" href="boolean__graph_8h_source.xhtml#l00293">scram::core::kUnityState</a>.</p>

</div>
</div>
<a class="anchor" id="ab040c191c1f364e195ba718269e48c56"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classscram_1_1core_1_1Gate.xhtml#ae2b61b9c19e6b8abd97c92b9374a49e6">Gate::ArgMap</a>&lt;<a class="el" href="classscram_1_1core_1_1Gate.xhtml">Gate</a>&gt;&amp; scram::core::Gate::args </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The <a class="el" href="classscram_1_1core_1_1Gate.xhtml" title="An indexed gate for use in BooleanGraph. ">Gate</a> type arguments of a gate. </dd></dl>

<p>Definition at line <a class="el" href="boolean__graph_8h_source.xhtml#l00746">746</a> of file <a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>.</p>

</div>
</div>
<a class="anchor" id="afd7e4e7d181c7f56608c7c36f20460f0"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classscram_1_1core_1_1Gate.xhtml#ae2b61b9c19e6b8abd97c92b9374a49e6">Gate::ArgMap</a>&lt;<a class="el" href="classscram_1_1core_1_1Variable.xhtml">Variable</a>&gt;&amp; scram::core::Gate::args </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The <a class="el" href="classscram_1_1core_1_1Variable.xhtml" title="Boolean variables in a Boolean formula or graph. ">Variable</a> type arguments of a gate. </dd></dl>

<p>Definition at line <a class="el" href="boolean__graph_8h_source.xhtml#l00750">750</a> of file <a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>.</p>

</div>
</div>
<a class="anchor" id="aa609aa8e2267d59f61c360903691786a"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classscram_1_1core_1_1Gate.xhtml#ae2b61b9c19e6b8abd97c92b9374a49e6">Gate::ArgMap</a>&lt;<a class="el" href="classscram_1_1core_1_1Constant.xhtml">Constant</a>&gt;&amp; scram::core::Gate::args </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The <a class="el" href="classscram_1_1core_1_1Constant.xhtml" title="Representation of a node that is a Boolean constant with True or False state. ">Constant</a> type arguments of a gate. </dd></dl>

<p>Definition at line <a class="el" href="boolean__graph_8h_source.xhtml#l00756">756</a> of file <a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a></li>
<li><a class="el" href="boolean__graph_8cc_source.xhtml">boolean_graph.cc</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Dec 12 2016 00:21:15 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
