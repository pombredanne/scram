<!-- HTML header for doxygen 1.8.11-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="robots" content="noindex, nofollow"/>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>boolean_graph.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="scram_blue.png"/></td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">boolean_graph.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Classes and facilities to represent simplified fault trees as Boolean graphs with event and gate indices instead of ID names.  
<a href="#details">More...</a></p>
<div class="textblock"><code>#include &lt;cstdint&gt;</code><br />
<code>#include &lt;algorithm&gt;</code><br />
<code>#include &lt;iosfwd&gt;</code><br />
<code>#include &lt;memory&gt;</code><br />
<code>#include &lt;unordered_map&gt;</code><br />
<code>#include &lt;utility&gt;</code><br />
<code>#include &lt;vector&gt;</code><br />
<code>#include &lt;boost/container/flat_set.hpp&gt;</code><br />
<code>#include &lt;boost/noncopyable.hpp&gt;</code><br />
<code>#include &quot;<a class="el" href="ext_8h_source.xhtml">ext.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="linear__map_8h_source.xhtml">linear_map.h</a>&quot;</code><br />
</div><div class="textblock"><div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Include dependency graph for boolean_graph.h:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="boolean__graph_8h__incl.svg" width="100%" height="462"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</div><div class="textblock"><div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> This graph shows which files directly or indirectly include this file:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="boolean__graph_8h__dep__incl.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</div>
<p><a href="boolean__graph_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1NodeParentManager.xhtml">scram::core::NodeParentManager</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">A manager of information about parents.  <a href="classscram_1_1core_1_1NodeParentManager.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Node.xhtml">scram::core::Node</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">An abstract base class that represents a node in a Boolean graph.  <a href="classscram_1_1core_1_1Node.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Constant.xhtml">scram::core::Constant</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Representation of a node that is a Boolean constant with True or False state.  <a href="classscram_1_1core_1_1Constant.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Variable.xhtml">scram::core::Variable</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Boolean variables in a Boolean formula or graph.  <a href="classscram_1_1core_1_1Variable.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1Gate.xhtml">scram::core::Gate</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">An indexed gate for use in <a class="el" href="classscram_1_1core_1_1BooleanGraph.xhtml" title="BooleanGraph is a propositional directed acyclic graph (PDAG). ">BooleanGraph</a>.  <a href="classscram_1_1core_1_1Gate.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classscram_1_1core_1_1BooleanGraph.xhtml">scram::core::BooleanGraph</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classscram_1_1core_1_1BooleanGraph.xhtml" title="BooleanGraph is a propositional directed acyclic graph (PDAG). ">BooleanGraph</a> is a propositional directed acyclic graph (PDAG).  <a href="classscram_1_1core_1_1BooleanGraph.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ac38351bd34c3272ac04f9ba8fa1428ec"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac38351bd34c3272ac04f9ba8fa1428ec"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="boolean__graph_8h.xhtml#ac38351bd34c3272ac04f9ba8fa1428ec">scram::core::GatePtr</a> = std::shared_ptr&lt; Gate &gt;</td></tr>
<tr class="memdesc:ac38351bd34c3272ac04f9ba8fa1428ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shared gates in the graph. <br /></td></tr>
<tr class="separator:ac38351bd34c3272ac04f9ba8fa1428ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2dd45b6c16940b9b60e4bc5b13ae6d6b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2dd45b6c16940b9b60e4bc5b13ae6d6b"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="boolean__graph_8h.xhtml#a2dd45b6c16940b9b60e4bc5b13ae6d6b">scram::core::GateWeakPtr</a> = std::weak_ptr&lt; Gate &gt;</td></tr>
<tr class="memdesc:a2dd45b6c16940b9b60e4bc5b13ae6d6b"><td class="mdescLeft">&#160;</td><td class="mdescRight">An acyclic ptr to parent gates. <br /></td></tr>
<tr class="separator:a2dd45b6c16940b9b60e4bc5b13ae6d6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab011b41d7b669539d11e5b4030f4d78d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab011b41d7b669539d11e5b4030f4d78d"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="boolean__graph_8h.xhtml#ab011b41d7b669539d11e5b4030f4d78d">scram::core::NodePtr</a> = std::shared_ptr&lt; Node &gt;</td></tr>
<tr class="memdesc:ab011b41d7b669539d11e5b4030f4d78d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shared base nodes in the graph. <br /></td></tr>
<tr class="separator:ab011b41d7b669539d11e5b4030f4d78d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2e6228a2c90786c707642e946bb1e52"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af2e6228a2c90786c707642e946bb1e52"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="boolean__graph_8h.xhtml#af2e6228a2c90786c707642e946bb1e52">scram::core::ConstantPtr</a> = std::shared_ptr&lt; Constant &gt;</td></tr>
<tr class="memdesc:af2e6228a2c90786c707642e946bb1e52"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shared Boolean constants. <br /></td></tr>
<tr class="separator:af2e6228a2c90786c707642e946bb1e52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a028cc62c4e510cb3063384dd75a36ed5"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a028cc62c4e510cb3063384dd75a36ed5"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="boolean__graph_8h.xhtml#a028cc62c4e510cb3063384dd75a36ed5">scram::core::VariablePtr</a> = std::shared_ptr&lt; Variable &gt;</td></tr>
<tr class="memdesc:a028cc62c4e510cb3063384dd75a36ed5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shared Boolean variables. <br /></td></tr>
<tr class="separator:a028cc62c4e510cb3063384dd75a36ed5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:ad4c053147ae98b76f12620441f6d3800"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="boolean__graph_8h.xhtml#ad4c053147ae98b76f12620441f6d3800">scram::core::Operator</a> : std::uint8_t { <br />
&#160;&#160;<a class="el" href="boolean__graph_8h.xhtml#ad4c053147ae98b76f12620441f6d3800a52759d491dd25b4f861cfbeeafb31811">scram::core::kAnd</a> = 0, 
<a class="el" href="boolean__graph_8h.xhtml#ad4c053147ae98b76f12620441f6d3800a893d7b350b1a10c6ab1019c5007da8ae">scram::core::kOr</a>, 
<a class="el" href="boolean__graph_8h.xhtml#ad4c053147ae98b76f12620441f6d3800aa34a0ffa0432bfd3646c4ee783201a73">scram::core::kVote</a>, 
<a class="el" href="boolean__graph_8h.xhtml#ad4c053147ae98b76f12620441f6d3800a90ebbd6b1bcd690f663ce1c4bf6a43df">scram::core::kXor</a>, 
<br />
&#160;&#160;<a class="el" href="boolean__graph_8h.xhtml#ad4c053147ae98b76f12620441f6d3800a4b16e38337f8b0720762dd9fd7852f74">scram::core::kNot</a>, 
<a class="el" href="boolean__graph_8h.xhtml#ad4c053147ae98b76f12620441f6d3800a4eed8bff190e6c7a13fbae55bf0b5f52">scram::core::kNand</a>, 
<a class="el" href="boolean__graph_8h.xhtml#ad4c053147ae98b76f12620441f6d3800aba617a41c3a889a71db0701eb3c8bcce">scram::core::kNor</a>, 
<a class="el" href="boolean__graph_8h.xhtml#ad4c053147ae98b76f12620441f6d3800a45dd2dda57fec8076d4e038dbe51683d">scram::core::kNull</a>
<br />
 }<tr class="memdesc:ad4c053147ae98b76f12620441f6d3800"><td class="mdescLeft">&#160;</td><td class="mdescRight">Boolean operators of gates for representation, preprocessing, and analysis purposes.  <a href="boolean__graph_8h.xhtml#ad4c053147ae98b76f12620441f6d3800">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:ad4c053147ae98b76f12620441f6d3800"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac030b66fb750e5de6987fe8c5201b008"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="boolean__graph_8h.xhtml#ac030b66fb750e5de6987fe8c5201b008">scram::core::State</a> : std::uint8_t { <a class="el" href="boolean__graph_8h.xhtml#ac030b66fb750e5de6987fe8c5201b008a72cd47d967ae6ad7054c7c40b25065af">scram::core::kNormalState</a>, 
<a class="el" href="boolean__graph_8h.xhtml#ac030b66fb750e5de6987fe8c5201b008aec44cbf0ef06b0fda33dc3b276edd6a2">scram::core::kNullState</a>, 
<a class="el" href="boolean__graph_8h.xhtml#ac030b66fb750e5de6987fe8c5201b008a1f24f34776f92adee148a7f97e5dc66a">scram::core::kUnityState</a>
 }<tr class="memdesc:ac030b66fb750e5de6987fe8c5201b008"><td class="mdescLeft">&#160;</td><td class="mdescRight">State of a gate as a set of Boolean variables.  <a href="boolean__graph_8h.xhtml#ac030b66fb750e5de6987fe8c5201b008">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:ac030b66fb750e5de6987fe8c5201b008"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a751ad5b9fa22eda4a00b23010c27e03d"><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="boolean__graph_8cc.xhtml#a751ad5b9fa22eda4a00b23010c27e03d">scram::core::operator&lt;&lt;</a> (std::ostream &amp;os, const BooleanGraph *ft)</td></tr>
<tr class="memdesc:a751ad5b9fa22eda4a00b23010c27e03d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prints the <a class="el" href="classscram_1_1core_1_1BooleanGraph.xhtml" title="BooleanGraph is a propositional directed acyclic graph (PDAG). ">BooleanGraph</a> as a fault tree in the Aralia format.  <a href="boolean__graph_8cc.xhtml#a751ad5b9fa22eda4a00b23010c27e03d">More...</a><br /></td></tr>
<tr class="separator:a751ad5b9fa22eda4a00b23010c27e03d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:a8f04430e7ed0fd624250f5c67af9c464"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8f04430e7ed0fd624250f5c67af9c464"></a>
std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="boolean__graph_8cc.xhtml#a8f04430e7ed0fd624250f5c67af9c464">scram::core::operator&lt;&lt;</a> (std::ostream &amp;os, const ConstantPtr &amp;constant)</td></tr>
<tr class="memdesc:a8f04430e7ed0fd624250f5c67af9c464"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prints Boolean graph nodes in the Aralia format. <br /></td></tr>
<tr class="separator:a8f04430e7ed0fd624250f5c67af9c464"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29b45b0f3e2827cadab74f5a98e9e8e0"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a29b45b0f3e2827cadab74f5a98e9e8e0"></a>
std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="boolean__graph_8cc.xhtml#a29b45b0f3e2827cadab74f5a98e9e8e0">scram::core::operator&lt;&lt;</a> (std::ostream &amp;os, const VariablePtr &amp;variable)</td></tr>
<tr class="memdesc:a29b45b0f3e2827cadab74f5a98e9e8e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prints Boolean graph nodes in the Aralia format. <br /></td></tr>
<tr class="separator:a29b45b0f3e2827cadab74f5a98e9e8e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a186cf69bc93973bd5af3eb80d89b845b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a186cf69bc93973bd5af3eb80d89b845b"></a>
std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="boolean__graph_8cc.xhtml#a186cf69bc93973bd5af3eb80d89b845b">scram::core::operator&lt;&lt;</a> (std::ostream &amp;os, const GatePtr &amp;gate)</td></tr>
<tr class="memdesc:a186cf69bc93973bd5af3eb80d89b845b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prints Boolean graph nodes in the Aralia format. <br /></td></tr>
<tr class="separator:a186cf69bc93973bd5af3eb80d89b845b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:af9e7f5be4459e626e9d4a36d0747bc4d"><td class="memItemLeft" align="right" valign="top">const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="boolean__graph_8h.xhtml#af9e7f5be4459e626e9d4a36d0747bc4d">scram::core::kNumOperators</a> = 8</td></tr>
<tr class="memdesc:af9e7f5be4459e626e9d4a36d0747bc4d"><td class="mdescLeft">&#160;</td><td class="mdescRight">The number of operators in the enum.  <a href="boolean__graph_8h.xhtml#af9e7f5be4459e626e9d4a36d0747bc4d">More...</a><br /></td></tr>
<tr class="separator:af9e7f5be4459e626e9d4a36d0747bc4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Classes and facilities to represent simplified fault trees as Boolean graphs with event and gate indices instead of ID names. </p>
<p>These facilities are designed to work with FaultTreeAnalysis and Preprocessor classes.</p>
<p>The terminologies of the graphs and Boolean logic are mixed to represent the Boolean graph; however, if there is a conflict, the Boolean terminology is preferred. For example, instead of "children", "arguments" are preferred. </p>

<p>Definition in file <a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>.</p>
</div><h2 class="groupheader">Enumeration Type Documentation</h2>
<a class="anchor" id="file_ad4c053147ae98b76f12620441f6d3800"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="boolean__graph_8h.xhtml#ad4c053147ae98b76f12620441f6d3800">scram::core::Operator</a> : std::uint8_t</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Boolean operators of gates for representation, preprocessing, and analysis purposes. </p>
<p>The operator defines a type and logic of a gate.</p>
<dl class="section warning"><dt>Warning</dt><dd>If a new operator is added, all the preprocessing and Boolean graph algorithms must be reviewed and updated. The algorithms may assume for performance and simplicity reasons that these are the only kinds of operators possible. </dd></dl>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a class="anchor" id="ad4c053147ae98b76f12620441f6d3800a52759d491dd25b4f861cfbeeafb31811"></a>kAnd&#160;</td><td class="fielddoc">
<p>Simple AND gate. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ad4c053147ae98b76f12620441f6d3800a893d7b350b1a10c6ab1019c5007da8ae"></a>kOr&#160;</td><td class="fielddoc">
<p>Simple OR gate. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ad4c053147ae98b76f12620441f6d3800aa34a0ffa0432bfd3646c4ee783201a73"></a>kVote&#160;</td><td class="fielddoc">
<p>Combination, K/N, or Vote gate representation. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ad4c053147ae98b76f12620441f6d3800a90ebbd6b1bcd690f663ce1c4bf6a43df"></a>kXor&#160;</td><td class="fielddoc">
<p>Exclusive OR gate with two inputs. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ad4c053147ae98b76f12620441f6d3800a4b16e38337f8b0720762dd9fd7852f74"></a>kNot&#160;</td><td class="fielddoc">
<p>Boolean negation. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ad4c053147ae98b76f12620441f6d3800a4eed8bff190e6c7a13fbae55bf0b5f52"></a>kNand&#160;</td><td class="fielddoc">
<p>NAND gate. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ad4c053147ae98b76f12620441f6d3800aba617a41c3a889a71db0701eb3c8bcce"></a>kNor&#160;</td><td class="fielddoc">
<p>NOR gate. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ad4c053147ae98b76f12620441f6d3800a45dd2dda57fec8076d4e038dbe51683d"></a>kNull&#160;</td><td class="fielddoc">
<p>Special pass-through or NULL gate. This is not NULL set. </p>
</td></tr>
</table>

<p>Definition at line <a class="el" href="boolean__graph_8h_source.xhtml#l00272">272</a> of file <a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>.</p>

</div>
</div>
<a class="anchor" id="file_ac030b66fb750e5de6987fe8c5201b008"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="boolean__graph_8h.xhtml#ac030b66fb750e5de6987fe8c5201b008">scram::core::State</a> : std::uint8_t</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>State of a gate as a set of Boolean variables. </p>
<p>This state helps detect null and unity sets that are formed upon Boolean operations. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a class="anchor" id="ac030b66fb750e5de6987fe8c5201b008a72cd47d967ae6ad7054c7c40b25065af"></a>kNormalState&#160;</td><td class="fielddoc">
<p>The default case with any set that is not null or unity. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ac030b66fb750e5de6987fe8c5201b008aec44cbf0ef06b0fda33dc3b276edd6a2"></a>kNullState&#160;</td><td class="fielddoc">
<p>The set is null. This indicates no failure. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ac030b66fb750e5de6987fe8c5201b008a1f24f34776f92adee148a7f97e5dc66a"></a>kUnityState&#160;</td><td class="fielddoc">
<p>The set is unity. This set guarantees failure. </p>
</td></tr>
</table>

<p>Definition at line <a class="el" href="boolean__graph_8h_source.xhtml#l00290">290</a> of file <a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="file_a751ad5b9fa22eda4a00b23010c27e03d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::ostream &amp; scram::core::operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>os</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classscram_1_1core_1_1BooleanGraph.xhtml">BooleanGraph</a> *&#160;</td>
          <td class="paramname"><em>ft</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Prints the <a class="el" href="classscram_1_1core_1_1BooleanGraph.xhtml" title="BooleanGraph is a propositional directed acyclic graph (PDAG). ">BooleanGraph</a> as a fault tree in the Aralia format. </p>
<p>This function is mostly for debugging purposes. The output is not meant to be human readable.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">os</td><td>Output stream. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ft</td><td>The fault tree to be printed.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The provided output stream in its original state.</dd></dl>
<dl class="section warning"><dt>Warning</dt><dd>Visits of nodes must be clean. Visit information may get changed. </dd></dl>

<p>Definition at line <a class="el" href="boolean__graph_8cc_source.xhtml#l00950">950</a> of file <a class="el" href="boolean__graph_8cc_source.xhtml">boolean_graph.cc</a>.</p>

<p>References <a class="el" href="boolean__graph_8cc_source.xhtml#l00824">scram::core::operator&lt;&lt;()</a>, and <a class="el" href="boolean__graph_8h_source.xhtml#l00806">scram::core::BooleanGraph::root()</a>.</p>

<p><div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="boolean__graph_8cc_a751ad5b9fa22eda4a00b23010c27e03d_cgraph.svg" width="403" height="128"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a class="anchor" id="file_af9e7f5be4459e626e9d4a36d0747bc4d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const int scram::core::kNumOperators = 8</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The number of operators in the enum. </p>
<p>This number is useful for optimizations and algorithms. </p>

<p>Definition at line <a class="el" href="boolean__graph_8h_source.xhtml#l00285">285</a> of file <a class="el" href="boolean__graph_8h_source.xhtml">boolean_graph.h</a>.</p>

<p>Referenced by <a class="el" href="preprocessor_8cc_source.xhtml#l00136">scram::core::Preprocessor::GateSet::insert()</a>.</p>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Dec 12 2016 00:21:15 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
